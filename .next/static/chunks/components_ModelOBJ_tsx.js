/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["components_ModelOBJ_tsx"],{

/***/ "./components/ModelOBJ.tsx":
/*!*********************************!*\
  !*** ./components/ModelOBJ.tsx ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_3d_viewer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-3d-viewer */ \"./node_modules/react-3d-viewer/dist/scripts/react-3d-viewer.js\");\n/* harmony import */ var react_3d_viewer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_3d_viewer__WEBPACK_IMPORTED_MODULE_1__);\nvar _this = undefined;\n\n\nvar ModelOBJ = function(props) {\n    return(// @ts-ignore\n    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_3d_viewer__WEBPACK_IMPORTED_MODULE_1__.OBJModel, {\n            width: \"400\",\n            height: \"400\",\n            position: {\n                x: 0,\n                y: -100,\n                z: 0\n            },\n            src: props.src,\n            onLoad: function(test) {\n                console.log(\"wtf\", test);\n            }\n        }, void 0, false, {\n            fileName: \"/Users/illestrater/dev/NFTViewer/components/ModelOBJ.tsx\",\n            lineNumber: 6,\n            columnNumber: 5\n        }, _this)\n    }, void 0, false));\n};\n_c = ModelOBJ;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ModelOBJ);\nvar _c;\n$RefreshReg$(_c, \"ModelOBJ\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL01vZGVsT0JKLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOztBQUEyQztBQUUzQyxJQUFNQyxRQUFRLEdBQUcsU0FBQ0MsS0FBbUI7V0FDbkMsYUFBYTtrQkFDYjtrQkFDRSw0RUFBQ0YscURBQVE7WUFDUEcsS0FBSyxFQUFDLEtBQUs7WUFDWEMsTUFBTSxFQUFDLEtBQUs7WUFDWkMsUUFBUSxFQUFFO2dCQUFFQyxDQUFDLEVBQUUsQ0FBQztnQkFBRUMsQ0FBQyxFQUFFLENBQUMsR0FBRztnQkFBRUMsQ0FBQyxFQUFFLENBQUM7YUFBRTtZQUNqQ0MsR0FBRyxFQUFFUCxLQUFLLENBQUNPLEdBQUc7WUFDZEMsTUFBTSxFQUFFLFNBQUNDLElBQVMsRUFBSztnQkFDckJDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLEtBQUssRUFBRUYsSUFBSSxDQUFDLENBQUM7YUFDMUI7Ozs7O2lCQUNEO3FCQUNEO0NBQ0o7QUFiS1YsS0FBQUEsUUFBUTtBQWVkLCtEQUFlQSxRQUFRLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9Nb2RlbE9CSi50c3g/ZTU1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPQkpNb2RlbCB9IGZyb20gXCJyZWFjdC0zZC12aWV3ZXJcIjtcblxuY29uc3QgTW9kZWxPQkogPSAocHJvcHM6IHsgc3JjOiBhbnkgfSkgPT4gKFxuICAvLyBAdHMtaWdub3JlXG4gIDw+XG4gICAgPE9CSk1vZGVsXG4gICAgICB3aWR0aD1cIjQwMFwiXG4gICAgICBoZWlnaHQ9XCI0MDBcIlxuICAgICAgcG9zaXRpb249e3sgeDogMCwgeTogLTEwMCwgejogMCB9fVxuICAgICAgc3JjPXtwcm9wcy5zcmN9XG4gICAgICBvbkxvYWQ9eyh0ZXN0OiBhbnkpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJ3dGZcIiwgdGVzdCk7XG4gICAgICB9fVxuICAgIC8+XG4gIDwvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgTW9kZWxPQko7XG4iXSwibmFtZXMiOlsiT0JKTW9kZWwiLCJNb2RlbE9CSiIsInByb3BzIiwid2lkdGgiLCJoZWlnaHQiLCJwb3NpdGlvbiIsIngiLCJ5IiwieiIsInNyYyIsIm9uTG9hZCIsInRlc3QiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/ModelOBJ.tsx\n");

/***/ }),

/***/ "./node_modules/react-3d-viewer/dist/scripts/react-3d-viewer.js":
/*!**********************************************************************!*\
  !*** ./node_modules/react-3d-viewer/dist/scripts/react-3d-viewer.js ***!
  \**********************************************************************/
/***/ (function(module) {

eval("/*!\n *  react-3d-viewer v1.0.12\n *  By https://github.com/dwqdaiwenqi \n *  Github: https://github.com/dwqdaiwenqi/react-3d-viewer\n *  MIT Licensed.\n */\n!function(e,t){ true?module.exports=t():0}(window,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=13)}([function(e,t,n){\"use strict\";function r(){}n.r(t),n.d(t,\"WebGLRenderTargetCube\",function(){return Yt}),n.d(t,\"WebGLRenderTarget\",function(){return qt}),n.d(t,\"WebGLRenderer\",function(){return oi}),n.d(t,\"ShaderLib\",function(){return on}),n.d(t,\"UniformsLib\",function(){return an}),n.d(t,\"UniformsUtils\",function(){return tn}),n.d(t,\"ShaderChunk\",function(){return en}),n.d(t,\"FogExp2\",function(){return si}),n.d(t,\"Fog\",function(){return ci}),n.d(t,\"Scene\",function(){return ui}),n.d(t,\"Sprite\",function(){return pi}),n.d(t,\"LOD\",function(){return fi}),n.d(t,\"SkinnedMesh\",function(){return vi}),n.d(t,\"Skeleton\",function(){return mi}),n.d(t,\"Bone\",function(){return gi}),n.d(t,\"Mesh\",function(){return kn}),n.d(t,\"LineSegments\",function(){return bi}),n.d(t,\"LineLoop\",function(){return wi}),n.d(t,\"Line\",function(){return xi}),n.d(t,\"Points\",function(){return Mi}),n.d(t,\"Group\",function(){return ni}),n.d(t,\"VideoTexture\",function(){return Ei}),n.d(t,\"DataTexture\",function(){return Zt}),n.d(t,\"CompressedTexture\",function(){return Ti}),n.d(t,\"CubeTexture\",function(){return Vn}),n.d(t,\"CanvasTexture\",function(){return Si}),n.d(t,\"DepthTexture\",function(){return Ai}),n.d(t,\"Texture\",function(){return Wt}),n.d(t,\"CompressedTextureLoader\",function(){return no}),n.d(t,\"DataTextureLoader\",function(){return ro}),n.d(t,\"CubeTextureLoader\",function(){return ao}),n.d(t,\"TextureLoader\",function(){return oo}),n.d(t,\"ObjectLoader\",function(){return cs}),n.d(t,\"MaterialLoader\",function(){return ns}),n.d(t,\"BufferGeometryLoader\",function(){return rs}),n.d(t,\"DefaultLoadingManager\",function(){return $a}),n.d(t,\"LoadingManager\",function(){return Qa}),n.d(t,\"JSONLoader\",function(){return ss}),n.d(t,\"ImageLoader\",function(){return io}),n.d(t,\"ImageBitmapLoader\",function(){return ps}),n.d(t,\"FontLoader\",function(){return vs}),n.d(t,\"FileLoader\",function(){return to}),n.d(t,\"Loader\",function(){return as}),n.d(t,\"LoaderUtils\",function(){return os}),n.d(t,\"Cache\",function(){return Ka}),n.d(t,\"AudioLoader\",function(){return xs}),n.d(t,\"SpotLightShadow\",function(){return Io}),n.d(t,\"SpotLight\",function(){return Do}),n.d(t,\"PointLight\",function(){return Uo}),n.d(t,\"RectAreaLight\",function(){return zo}),n.d(t,\"HemisphereLight\",function(){return Oo}),n.d(t,\"DirectionalLightShadow\",function(){return Bo}),n.d(t,\"DirectionalLight\",function(){return Fo}),n.d(t,\"AmbientLight\",function(){return Go}),n.d(t,\"LightShadow\",function(){return No}),n.d(t,\"Light\",function(){return Po}),n.d(t,\"StereoCamera\",function(){return bs}),n.d(t,\"PerspectiveCamera\",function(){return ri}),n.d(t,\"OrthographicCamera\",function(){return fn}),n.d(t,\"CubeCamera\",function(){return ws}),n.d(t,\"ArrayCamera\",function(){return ii}),n.d(t,\"Camera\",function(){return pn}),n.d(t,\"AudioListener\",function(){return _s}),n.d(t,\"PositionalAudio\",function(){return Es}),n.d(t,\"AudioContext\",function(){return ys}),n.d(t,\"AudioAnalyser\",function(){return Ts}),n.d(t,\"Audio\",function(){return Ms}),n.d(t,\"VectorKeyframeTrack\",function(){return $o}),n.d(t,\"StringKeyframeTrack\",function(){return Qo}),n.d(t,\"QuaternionKeyframeTrack\",function(){return Ko}),n.d(t,\"NumberKeyframeTrack\",function(){return Zo}),n.d(t,\"ColorKeyframeTrack\",function(){return Yo}),n.d(t,\"BooleanKeyframeTrack\",function(){return qo}),n.d(t,\"PropertyMixer\",function(){return Ss}),n.d(t,\"PropertyBinding\",function(){return Cs}),n.d(t,\"KeyframeTrack\",function(){return Xo}),n.d(t,\"AnimationUtils\",function(){return Ho}),n.d(t,\"AnimationObjectGroup\",function(){return Ps}),n.d(t,\"AnimationMixer\",function(){return Ns}),n.d(t,\"AnimationClip\",function(){return es}),n.d(t,\"Uniform\",function(){return Is}),n.d(t,\"InstancedBufferGeometry\",function(){return Ds}),n.d(t,\"BufferGeometry\",function(){return Pn}),n.d(t,\"Geometry\",function(){return vn}),n.d(t,\"InterleavedBufferAttribute\",function(){return hi}),n.d(t,\"InstancedInterleavedBuffer\",function(){return Us}),n.d(t,\"InterleavedBuffer\",function(){return li}),n.d(t,\"InstancedBufferAttribute\",function(){return Bs}),n.d(t,\"Face3\",function(){return mn}),n.d(t,\"Object3D\",function(){return dn}),n.d(t,\"Raycaster\",function(){return Fs}),n.d(t,\"Layers\",function(){return ln}),n.d(t,\"EventDispatcher\",function(){return r}),n.d(t,\"Clock\",function(){return Hs}),n.d(t,\"QuaternionLinearInterpolant\",function(){return Jo}),n.d(t,\"LinearInterpolant\",function(){return Vo}),n.d(t,\"DiscreteInterpolant\",function(){return Wo}),n.d(t,\"CubicInterpolant\",function(){return jo}),n.d(t,\"Interpolant\",function(){return ko}),n.d(t,\"Triangle\",function(){return Hn}),n.d(t,\"Math\",function(){return Bt}),n.d(t,\"Spherical\",function(){return ks}),n.d(t,\"Cylindrical\",function(){return js}),n.d(t,\"Plane\",function(){return Qt}),n.d(t,\"Frustum\",function(){return $t}),n.d(t,\"Sphere\",function(){return Kt}),n.d(t,\"Ray\",function(){return zn}),n.d(t,\"Matrix4\",function(){return Gt}),n.d(t,\"Matrix3\",function(){return kt}),n.d(t,\"Box3\",function(){return Jt}),n.d(t,\"Box2\",function(){return Vs}),n.d(t,\"Line3\",function(){return Ws}),n.d(t,\"Euler\",function(){return un}),n.d(t,\"Vector4\",function(){return Xt}),n.d(t,\"Vector3\",function(){return Ht}),n.d(t,\"Vector2\",function(){return Ft}),n.d(t,\"Quaternion\",function(){return zt}),n.d(t,\"Color\",function(){return rn}),n.d(t,\"ImmediateRenderObject\",function(){return Xs}),n.d(t,\"VertexNormalsHelper\",function(){return qs}),n.d(t,\"SpotLightHelper\",function(){return Ys}),n.d(t,\"SkeletonHelper\",function(){return Zs}),n.d(t,\"PointLightHelper\",function(){return Js}),n.d(t,\"RectAreaLightHelper\",function(){return Ks}),n.d(t,\"HemisphereLightHelper\",function(){return Qs}),n.d(t,\"GridHelper\",function(){return $s}),n.d(t,\"PolarGridHelper\",function(){return ec}),n.d(t,\"FaceNormalsHelper\",function(){return tc}),n.d(t,\"DirectionalLightHelper\",function(){return nc}),n.d(t,\"CameraHelper\",function(){return rc}),n.d(t,\"BoxHelper\",function(){return ic}),n.d(t,\"Box3Helper\",function(){return ac}),n.d(t,\"PlaneHelper\",function(){return oc}),n.d(t,\"ArrowHelper\",function(){return sc}),n.d(t,\"AxesHelper\",function(){return cc}),n.d(t,\"Shape\",function(){return Co}),n.d(t,\"Path\",function(){return Ro}),n.d(t,\"ShapePath\",function(){return fs}),n.d(t,\"Font\",function(){return ms}),n.d(t,\"CurvePath\",function(){return Lo}),n.d(t,\"Curve\",function(){return so}),n.d(t,\"ImageUtils\",function(){return jt}),n.d(t,\"ShapeUtils\",function(){return ma}),n.d(t,\"WebGLUtils\",function(){return ti}),n.d(t,\"WireframeGeometry\",function(){return Li}),n.d(t,\"ParametricGeometry\",function(){return Ri}),n.d(t,\"ParametricBufferGeometry\",function(){return Ci}),n.d(t,\"TetrahedronGeometry\",function(){return Ni}),n.d(t,\"TetrahedronBufferGeometry\",function(){return Ii}),n.d(t,\"OctahedronGeometry\",function(){return Di}),n.d(t,\"OctahedronBufferGeometry\",function(){return Ui}),n.d(t,\"IcosahedronGeometry\",function(){return Bi}),n.d(t,\"IcosahedronBufferGeometry\",function(){return Fi}),n.d(t,\"DodecahedronGeometry\",function(){return Gi}),n.d(t,\"DodecahedronBufferGeometry\",function(){return zi}),n.d(t,\"PolyhedronGeometry\",function(){return Pi}),n.d(t,\"PolyhedronBufferGeometry\",function(){return Oi}),n.d(t,\"TubeGeometry\",function(){return Hi}),n.d(t,\"TubeBufferGeometry\",function(){return ki}),n.d(t,\"TorusKnotGeometry\",function(){return ji}),n.d(t,\"TorusKnotBufferGeometry\",function(){return Vi}),n.d(t,\"TorusGeometry\",function(){return Wi}),n.d(t,\"TorusBufferGeometry\",function(){return Xi}),n.d(t,\"TextGeometry\",function(){return _a}),n.d(t,\"TextBufferGeometry\",function(){return Ma}),n.d(t,\"SphereGeometry\",function(){return Ea}),n.d(t,\"SphereBufferGeometry\",function(){return Ta}),n.d(t,\"RingGeometry\",function(){return Sa}),n.d(t,\"RingBufferGeometry\",function(){return Aa}),n.d(t,\"PlaneGeometry\",function(){return In}),n.d(t,\"PlaneBufferGeometry\",function(){return Dn}),n.d(t,\"LatheGeometry\",function(){return La}),n.d(t,\"LatheBufferGeometry\",function(){return Ra}),n.d(t,\"ShapeGeometry\",function(){return Ca}),n.d(t,\"ShapeBufferGeometry\",function(){return Pa}),n.d(t,\"ExtrudeGeometry\",function(){return ya}),n.d(t,\"ExtrudeBufferGeometry\",function(){return xa}),n.d(t,\"EdgesGeometry\",function(){return Na}),n.d(t,\"ConeGeometry\",function(){return Ua}),n.d(t,\"ConeBufferGeometry\",function(){return Ba}),n.d(t,\"CylinderGeometry\",function(){return Ia}),n.d(t,\"CylinderBufferGeometry\",function(){return Da}),n.d(t,\"CircleGeometry\",function(){return Fa}),n.d(t,\"CircleBufferGeometry\",function(){return Ga}),n.d(t,\"BoxGeometry\",function(){return On}),n.d(t,\"BoxBufferGeometry\",function(){return Nn}),n.d(t,\"ShadowMaterial\",function(){return Ha}),n.d(t,\"SpriteMaterial\",function(){return di}),n.d(t,\"RawShaderMaterial\",function(){return ka}),n.d(t,\"ShaderMaterial\",function(){return Gn}),n.d(t,\"PointsMaterial\",function(){return _i}),n.d(t,\"MeshPhysicalMaterial\",function(){return Va}),n.d(t,\"MeshStandardMaterial\",function(){return ja}),n.d(t,\"MeshPhongMaterial\",function(){return Wa}),n.d(t,\"MeshToonMaterial\",function(){return Xa}),n.d(t,\"MeshNormalMaterial\",function(){return qa}),n.d(t,\"MeshLambertMaterial\",function(){return Ya}),n.d(t,\"MeshDepthMaterial\",function(){return Kr}),n.d(t,\"MeshDistanceMaterial\",function(){return Qr}),n.d(t,\"MeshBasicMaterial\",function(){return Fn}),n.d(t,\"LineDashedMaterial\",function(){return Za}),n.d(t,\"LineBasicMaterial\",function(){return yi}),n.d(t,\"Material\",function(){return Bn}),n.d(t,\"Float64BufferAttribute\",function(){return An}),n.d(t,\"Float32BufferAttribute\",function(){return Sn}),n.d(t,\"Uint32BufferAttribute\",function(){return Tn}),n.d(t,\"Int32BufferAttribute\",function(){return En}),n.d(t,\"Uint16BufferAttribute\",function(){return Mn}),n.d(t,\"Int16BufferAttribute\",function(){return _n}),n.d(t,\"Uint8ClampedBufferAttribute\",function(){return wn}),n.d(t,\"Uint8BufferAttribute\",function(){return bn}),n.d(t,\"Int8BufferAttribute\",function(){return xn}),n.d(t,\"BufferAttribute\",function(){return yn}),n.d(t,\"ArcCurve\",function(){return uo}),n.d(t,\"CatmullRomCurve3\",function(){return go}),n.d(t,\"CubicBezierCurve\",function(){return bo}),n.d(t,\"CubicBezierCurve3\",function(){return wo}),n.d(t,\"EllipseCurve\",function(){return co}),n.d(t,\"LineCurve\",function(){return _o}),n.d(t,\"LineCurve3\",function(){return Mo}),n.d(t,\"QuadraticBezierCurve\",function(){return Eo}),n.d(t,\"QuadraticBezierCurve3\",function(){return To}),n.d(t,\"SplineCurve\",function(){return So}),n.d(t,\"REVISION\",function(){return i}),n.d(t,\"MOUSE\",function(){return a}),n.d(t,\"CullFaceNone\",function(){return o}),n.d(t,\"CullFaceBack\",function(){return s}),n.d(t,\"CullFaceFront\",function(){return c}),n.d(t,\"CullFaceFrontBack\",function(){return u}),n.d(t,\"FrontFaceDirectionCW\",function(){return l}),n.d(t,\"FrontFaceDirectionCCW\",function(){return h}),n.d(t,\"BasicShadowMap\",function(){return d}),n.d(t,\"PCFShadowMap\",function(){return p}),n.d(t,\"PCFSoftShadowMap\",function(){return f}),n.d(t,\"FrontSide\",function(){return m}),n.d(t,\"BackSide\",function(){return g}),n.d(t,\"DoubleSide\",function(){return v}),n.d(t,\"FlatShading\",function(){return y}),n.d(t,\"SmoothShading\",function(){return x}),n.d(t,\"NoColors\",function(){return b}),n.d(t,\"FaceColors\",function(){return w}),n.d(t,\"VertexColors\",function(){return _}),n.d(t,\"NoBlending\",function(){return M}),n.d(t,\"NormalBlending\",function(){return E}),n.d(t,\"AdditiveBlending\",function(){return T}),n.d(t,\"SubtractiveBlending\",function(){return S}),n.d(t,\"MultiplyBlending\",function(){return A}),n.d(t,\"CustomBlending\",function(){return L}),n.d(t,\"AddEquation\",function(){return R}),n.d(t,\"SubtractEquation\",function(){return C}),n.d(t,\"ReverseSubtractEquation\",function(){return P}),n.d(t,\"MinEquation\",function(){return O}),n.d(t,\"MaxEquation\",function(){return N}),n.d(t,\"ZeroFactor\",function(){return I}),n.d(t,\"OneFactor\",function(){return D}),n.d(t,\"SrcColorFactor\",function(){return U}),n.d(t,\"OneMinusSrcColorFactor\",function(){return B}),n.d(t,\"SrcAlphaFactor\",function(){return F}),n.d(t,\"OneMinusSrcAlphaFactor\",function(){return G}),n.d(t,\"DstAlphaFactor\",function(){return z}),n.d(t,\"OneMinusDstAlphaFactor\",function(){return H}),n.d(t,\"DstColorFactor\",function(){return k}),n.d(t,\"OneMinusDstColorFactor\",function(){return j}),n.d(t,\"SrcAlphaSaturateFactor\",function(){return V}),n.d(t,\"NeverDepth\",function(){return W}),n.d(t,\"AlwaysDepth\",function(){return X}),n.d(t,\"LessDepth\",function(){return q}),n.d(t,\"LessEqualDepth\",function(){return Y}),n.d(t,\"EqualDepth\",function(){return Z}),n.d(t,\"GreaterEqualDepth\",function(){return J}),n.d(t,\"GreaterDepth\",function(){return K}),n.d(t,\"NotEqualDepth\",function(){return Q}),n.d(t,\"MultiplyOperation\",function(){return $}),n.d(t,\"MixOperation\",function(){return ee}),n.d(t,\"AddOperation\",function(){return te}),n.d(t,\"NoToneMapping\",function(){return ne}),n.d(t,\"LinearToneMapping\",function(){return re}),n.d(t,\"ReinhardToneMapping\",function(){return ie}),n.d(t,\"Uncharted2ToneMapping\",function(){return ae}),n.d(t,\"CineonToneMapping\",function(){return oe}),n.d(t,\"UVMapping\",function(){return se}),n.d(t,\"CubeReflectionMapping\",function(){return ce}),n.d(t,\"CubeRefractionMapping\",function(){return ue}),n.d(t,\"EquirectangularReflectionMapping\",function(){return le}),n.d(t,\"EquirectangularRefractionMapping\",function(){return he}),n.d(t,\"SphericalReflectionMapping\",function(){return de}),n.d(t,\"CubeUVReflectionMapping\",function(){return pe}),n.d(t,\"CubeUVRefractionMapping\",function(){return fe}),n.d(t,\"RepeatWrapping\",function(){return me}),n.d(t,\"ClampToEdgeWrapping\",function(){return ge}),n.d(t,\"MirroredRepeatWrapping\",function(){return ve}),n.d(t,\"NearestFilter\",function(){return ye}),n.d(t,\"NearestMipMapNearestFilter\",function(){return xe}),n.d(t,\"NearestMipMapLinearFilter\",function(){return be}),n.d(t,\"LinearFilter\",function(){return we}),n.d(t,\"LinearMipMapNearestFilter\",function(){return _e}),n.d(t,\"LinearMipMapLinearFilter\",function(){return Me}),n.d(t,\"UnsignedByteType\",function(){return Ee}),n.d(t,\"ByteType\",function(){return Te}),n.d(t,\"ShortType\",function(){return Se}),n.d(t,\"UnsignedShortType\",function(){return Ae}),n.d(t,\"IntType\",function(){return Le}),n.d(t,\"UnsignedIntType\",function(){return Re}),n.d(t,\"FloatType\",function(){return Ce}),n.d(t,\"HalfFloatType\",function(){return Pe}),n.d(t,\"UnsignedShort4444Type\",function(){return Oe}),n.d(t,\"UnsignedShort5551Type\",function(){return Ne}),n.d(t,\"UnsignedShort565Type\",function(){return Ie}),n.d(t,\"UnsignedInt248Type\",function(){return De}),n.d(t,\"AlphaFormat\",function(){return Ue}),n.d(t,\"RGBFormat\",function(){return Be}),n.d(t,\"RGBAFormat\",function(){return Fe}),n.d(t,\"LuminanceFormat\",function(){return Ge}),n.d(t,\"LuminanceAlphaFormat\",function(){return ze}),n.d(t,\"RGBEFormat\",function(){return He}),n.d(t,\"DepthFormat\",function(){return ke}),n.d(t,\"DepthStencilFormat\",function(){return je}),n.d(t,\"RGB_S3TC_DXT1_Format\",function(){return Ve}),n.d(t,\"RGBA_S3TC_DXT1_Format\",function(){return We}),n.d(t,\"RGBA_S3TC_DXT3_Format\",function(){return Xe}),n.d(t,\"RGBA_S3TC_DXT5_Format\",function(){return qe}),n.d(t,\"RGB_PVRTC_4BPPV1_Format\",function(){return Ye}),n.d(t,\"RGB_PVRTC_2BPPV1_Format\",function(){return Ze}),n.d(t,\"RGBA_PVRTC_4BPPV1_Format\",function(){return Je}),n.d(t,\"RGBA_PVRTC_2BPPV1_Format\",function(){return Ke}),n.d(t,\"RGB_ETC1_Format\",function(){return Qe}),n.d(t,\"RGBA_ASTC_4x4_Format\",function(){return $e}),n.d(t,\"RGBA_ASTC_5x4_Format\",function(){return et}),n.d(t,\"RGBA_ASTC_5x5_Format\",function(){return tt}),n.d(t,\"RGBA_ASTC_6x5_Format\",function(){return nt}),n.d(t,\"RGBA_ASTC_6x6_Format\",function(){return rt}),n.d(t,\"RGBA_ASTC_8x5_Format\",function(){return it}),n.d(t,\"RGBA_ASTC_8x6_Format\",function(){return at}),n.d(t,\"RGBA_ASTC_8x8_Format\",function(){return ot}),n.d(t,\"RGBA_ASTC_10x5_Format\",function(){return st}),n.d(t,\"RGBA_ASTC_10x6_Format\",function(){return ct}),n.d(t,\"RGBA_ASTC_10x8_Format\",function(){return ut}),n.d(t,\"RGBA_ASTC_10x10_Format\",function(){return lt}),n.d(t,\"RGBA_ASTC_12x10_Format\",function(){return ht}),n.d(t,\"RGBA_ASTC_12x12_Format\",function(){return dt}),n.d(t,\"LoopOnce\",function(){return pt}),n.d(t,\"LoopRepeat\",function(){return ft}),n.d(t,\"LoopPingPong\",function(){return mt}),n.d(t,\"InterpolateDiscrete\",function(){return gt}),n.d(t,\"InterpolateLinear\",function(){return vt}),n.d(t,\"InterpolateSmooth\",function(){return yt}),n.d(t,\"ZeroCurvatureEnding\",function(){return xt}),n.d(t,\"ZeroSlopeEnding\",function(){return bt}),n.d(t,\"WrapAroundEnding\",function(){return wt}),n.d(t,\"TrianglesDrawMode\",function(){return _t}),n.d(t,\"TriangleStripDrawMode\",function(){return Mt}),n.d(t,\"TriangleFanDrawMode\",function(){return Et}),n.d(t,\"LinearEncoding\",function(){return Tt}),n.d(t,\"sRGBEncoding\",function(){return St}),n.d(t,\"GammaEncoding\",function(){return At}),n.d(t,\"RGBEEncoding\",function(){return Lt}),n.d(t,\"LogLuvEncoding\",function(){return Rt}),n.d(t,\"RGBM7Encoding\",function(){return Ct}),n.d(t,\"RGBM16Encoding\",function(){return Pt}),n.d(t,\"RGBDEncoding\",function(){return Ot}),n.d(t,\"BasicDepthPacking\",function(){return Nt}),n.d(t,\"RGBADepthPacking\",function(){return It}),n.d(t,\"TangentSpaceNormalMap\",function(){return Dt}),n.d(t,\"ObjectSpaceNormalMap\",function(){return Ut}),n.d(t,\"CubeGeometry\",function(){return On}),n.d(t,\"Face4\",function(){return uc}),n.d(t,\"LineStrip\",function(){return lc}),n.d(t,\"LinePieces\",function(){return hc}),n.d(t,\"MeshFaceMaterial\",function(){return dc}),n.d(t,\"MultiMaterial\",function(){return pc}),n.d(t,\"PointCloud\",function(){return fc}),n.d(t,\"Particle\",function(){return mc}),n.d(t,\"ParticleSystem\",function(){return gc}),n.d(t,\"PointCloudMaterial\",function(){return vc}),n.d(t,\"ParticleBasicMaterial\",function(){return yc}),n.d(t,\"ParticleSystemMaterial\",function(){return xc}),n.d(t,\"Vertex\",function(){return bc}),n.d(t,\"DynamicBufferAttribute\",function(){return wc}),n.d(t,\"Int8Attribute\",function(){return _c}),n.d(t,\"Uint8Attribute\",function(){return Mc}),n.d(t,\"Uint8ClampedAttribute\",function(){return Ec}),n.d(t,\"Int16Attribute\",function(){return Tc}),n.d(t,\"Uint16Attribute\",function(){return Sc}),n.d(t,\"Int32Attribute\",function(){return Ac}),n.d(t,\"Uint32Attribute\",function(){return Lc}),n.d(t,\"Float32Attribute\",function(){return Rc}),n.d(t,\"Float64Attribute\",function(){return Cc}),n.d(t,\"ClosedSplineCurve3\",function(){return Pc}),n.d(t,\"SplineCurve3\",function(){return Oc}),n.d(t,\"Spline\",function(){return Nc}),n.d(t,\"AxisHelper\",function(){return Ic}),n.d(t,\"BoundingBoxHelper\",function(){return Dc}),n.d(t,\"EdgesHelper\",function(){return Uc}),n.d(t,\"WireframeHelper\",function(){return Bc}),n.d(t,\"XHRLoader\",function(){return Fc}),n.d(t,\"BinaryTextureLoader\",function(){return Gc}),n.d(t,\"GeometryUtils\",function(){return zc}),n.d(t,\"Projector\",function(){return Hc}),n.d(t,\"CanvasRenderer\",function(){return kc}),n.d(t,\"SceneUtils\",function(){return jc}),n.d(t,\"LensFlare\",function(){return Vc}),void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(e){return\"number\"==typeof e&&isFinite(e)&&Math.floor(e)===e}),void 0===Math.sign&&(Math.sign=function(e){return e<0?-1:e>0?1:+e}),\"name\"in Function.prototype==!1&&Object.defineProperty(Function.prototype,\"name\",{get:function(){return this.toString().match(/^\\s*function\\s*([^\\(\\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(e){if(void 0===e||null===e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var t=Object(e),n=1;n<arguments.length;n++){var r=arguments[n];if(void 0!==r&&null!==r)for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(t[i]=r[i])}return t}),Object.assign(r.prototype,{addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){var n=this._listeners[e];if(void 0!==n){var r=n.indexOf(t);-1!==r&&n.splice(r,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var n=t.slice(0),r=0,i=n.length;r<i;r++)n[r].call(this,e)}}}});var i=\"95\",a={LEFT:0,MIDDLE:1,RIGHT:2},o=0,s=1,c=2,u=3,l=0,h=1,d=0,p=1,f=2,m=0,g=1,v=2,y=1,x=2,b=0,w=1,_=2,M=0,E=1,T=2,S=3,A=4,L=5,R=100,C=101,P=102,O=103,N=104,I=200,D=201,U=202,B=203,F=204,G=205,z=206,H=207,k=208,j=209,V=210,W=0,X=1,q=2,Y=3,Z=4,J=5,K=6,Q=7,$=0,ee=1,te=2,ne=0,re=1,ie=2,ae=3,oe=4,se=300,ce=301,ue=302,le=303,he=304,de=305,pe=306,fe=307,me=1e3,ge=1001,ve=1002,ye=1003,xe=1004,be=1005,we=1006,_e=1007,Me=1008,Ee=1009,Te=1010,Se=1011,Ae=1012,Le=1013,Re=1014,Ce=1015,Pe=1016,Oe=1017,Ne=1018,Ie=1019,De=1020,Ue=1021,Be=1022,Fe=1023,Ge=1024,ze=1025,He=Fe,ke=1026,je=1027,Ve=33776,We=33777,Xe=33778,qe=33779,Ye=35840,Ze=35841,Je=35842,Ke=35843,Qe=36196,$e=37808,et=37809,tt=37810,nt=37811,rt=37812,it=37813,at=37814,ot=37815,st=37816,ct=37817,ut=37818,lt=37819,ht=37820,dt=37821,pt=2200,ft=2201,mt=2202,gt=2300,vt=2301,yt=2302,xt=2400,bt=2401,wt=2402,_t=0,Mt=1,Et=2,Tt=3e3,St=3001,At=3007,Lt=3002,Rt=3003,Ct=3004,Pt=3005,Ot=3006,Nt=3200,It=3201,Dt=0,Ut=1,Bt={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){for(var e=[],t=0;t<256;t++)e[t]=(t<16?\"0\":\"\")+t.toString(16);return function(){var t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(e[255&t]+e[t>>8&255]+e[t>>16&255]+e[t>>24&255]+\"-\"+e[255&n]+e[n>>8&255]+\"-\"+e[n>>16&15|64]+e[n>>24&255]+\"-\"+e[63&r|128]+e[r>>8&255]+\"-\"+e[r>>16&255]+e[r>>24&255]+e[255&i]+e[i>>8&255]+e[i>>16&255]+e[i>>24&255]).toUpperCase()}}(),clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},lerp:function(e,t,n){return(1-n)*e+n*t},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*Bt.DEG2RAD},radToDeg:function(e){return e*Bt.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}};function Ft(e,t){this.x=e||0,this.y=t||0}function Gt(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error(\"THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.\")}function zt(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._w=void 0!==r?r:1}function Ht(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0}function kt(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error(\"THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.\")}Object.defineProperties(Ft.prototype,{width:{get:function(){return this.x},set:function(e){this.x=e}},height:{get:function(){return this.y},set:function(e){this.y=e}}}),Object.assign(Ft.prototype,{isVector2:!0,set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error(\"index is out of range: \"+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error(\"index is out of range: \"+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn(\"THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return void 0!==t?(console.warn(\"THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},applyMatrix3:function(e){var t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(){var e=new Ft,t=new Ft;return function(n,r){return e.set(n,n),t.set(r,r),this.clamp(e,t)}}(),clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},cross:function(e){return this.x*e.y-this.y*e.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var e=Math.atan2(this.y,this.x);return e<0&&(e+=2*Math.PI),e},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromBufferAttribute:function(e,t,n){return void 0!==n&&console.warn(\"THREE.Vector2: offset has been removed from .fromBufferAttribute().\"),this.x=e.getX(t),this.y=e.getY(t),this},rotateAround:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*n-a*r+e.x,this.y=i*r+a*n+e.y,this}}),Object.assign(Gt.prototype,{isMatrix4:!0,set:function(e,t,n,r,i,a,o,s,c,u,l,h,d,p,f,m){var g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=i,g[5]=a,g[9]=o,g[13]=s,g[2]=c,g[6]=u,g[10]=l,g[14]=h,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new Gt).fromArray(this.elements)},copy:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this},copyPosition:function(e){var t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this},extractBasis:function(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this},extractRotation:function(){var e=new Ht;return function(t){var n=this.elements,r=t.elements,i=1/e.setFromMatrixColumn(t,0).length(),a=1/e.setFromMatrixColumn(t,1).length(),o=1/e.setFromMatrixColumn(t,2).length();return n[0]=r[0]*i,n[1]=r[1]*i,n[2]=r[2]*i,n[3]=0,n[4]=r[4]*a,n[5]=r[5]*a,n[6]=r[6]*a,n[7]=0,n[8]=r[8]*o,n[9]=r[9]*o,n[10]=r[10]*o,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}}(),makeRotationFromEuler:function(e){e&&e.isEuler||console.error(\"THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var t=this.elements,n=e.x,r=e.y,i=e.z,a=Math.cos(n),o=Math.sin(n),s=Math.cos(r),c=Math.sin(r),u=Math.cos(i),l=Math.sin(i);if(\"XYZ\"===e.order){var h=a*u,d=a*l,p=o*u,f=o*l;t[0]=s*u,t[4]=-s*l,t[8]=c,t[1]=d+p*c,t[5]=h-f*c,t[9]=-o*s,t[2]=f-h*c,t[6]=p+d*c,t[10]=a*s}else if(\"YXZ\"===e.order){var m=s*u,g=s*l,v=c*u,y=c*l;t[0]=m+y*o,t[4]=v*o-g,t[8]=a*c,t[1]=a*l,t[5]=a*u,t[9]=-o,t[2]=g*o-v,t[6]=y+m*o,t[10]=a*s}else if(\"ZXY\"===e.order){m=s*u,g=s*l,v=c*u,y=c*l;t[0]=m-y*o,t[4]=-a*l,t[8]=v+g*o,t[1]=g+v*o,t[5]=a*u,t[9]=y-m*o,t[2]=-a*c,t[6]=o,t[10]=a*s}else if(\"ZYX\"===e.order){h=a*u,d=a*l,p=o*u,f=o*l;t[0]=s*u,t[4]=p*c-d,t[8]=h*c+f,t[1]=s*l,t[5]=f*c+h,t[9]=d*c-p,t[2]=-c,t[6]=o*s,t[10]=a*s}else if(\"YZX\"===e.order){var x=a*s,b=a*c,w=o*s,_=o*c;t[0]=s*u,t[4]=_-x*l,t[8]=w*l+b,t[1]=l,t[5]=a*u,t[9]=-o*u,t[2]=-c*u,t[6]=b*l+w,t[10]=x-_*l}else if(\"XZY\"===e.order){x=a*s,b=a*c,w=o*s,_=o*c;t[0]=s*u,t[4]=-l,t[8]=c*u,t[1]=x*l+_,t[5]=a*u,t[9]=b*l-w,t[2]=w*l-b,t[6]=o*u,t[10]=_*l+x}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:function(){var e=new Ht(0,0,0),t=new Ht(1,1,1);return function(n){return this.compose(e,n,t)}}(),lookAt:function(){var e=new Ht,t=new Ht,n=new Ht;return function(r,i,a){var o=this.elements;return n.subVectors(r,i),0===n.lengthSq()&&(n.z=1),n.normalize(),e.crossVectors(a,n),0===e.lengthSq()&&(1===Math.abs(a.z)?n.x+=1e-4:n.z+=1e-4,n.normalize(),e.crossVectors(a,n)),e.normalize(),t.crossVectors(n,e),o[0]=e.x,o[4]=t.x,o[8]=n.x,o[1]=e.y,o[5]=t.y,o[9]=n.y,o[2]=e.z,o[6]=t.z,o[10]=n.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn(\"THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[4],s=n[8],c=n[12],u=n[1],l=n[5],h=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],y=n[7],x=n[11],b=n[15],w=r[0],_=r[4],M=r[8],E=r[12],T=r[1],S=r[5],A=r[9],L=r[13],R=r[2],C=r[6],P=r[10],O=r[14],N=r[3],I=r[7],D=r[11],U=r[15];return i[0]=a*w+o*T+s*R+c*N,i[4]=a*_+o*S+s*C+c*I,i[8]=a*M+o*A+s*P+c*D,i[12]=a*E+o*L+s*O+c*U,i[1]=u*w+l*T+h*R+d*N,i[5]=u*_+l*S+h*C+d*I,i[9]=u*M+l*A+h*P+d*D,i[13]=u*E+l*L+h*O+d*U,i[2]=p*w+f*T+m*R+g*N,i[6]=p*_+f*S+m*C+g*I,i[10]=p*M+f*A+m*P+g*D,i[14]=p*E+f*L+m*O+g*U,i[3]=v*w+y*T+x*R+b*N,i[7]=v*_+y*S+x*C+b*I,i[11]=v*M+y*A+x*P+b*D,i[15]=v*E+y*L+x*O+b*U,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},applyToBufferAttribute:function(){var e=new Ht;return function(t){for(var n=0,r=t.count;n<r;n++)e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.applyMatrix4(this),t.setXYZ(n,e.x,e.y,e.z);return t}}(),determinant:function(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],a=e[1],o=e[5],s=e[9],c=e[13],u=e[2],l=e[6],h=e[10],d=e[14];return e[3]*(+i*s*l-r*c*l-i*o*h+n*c*h+r*o*d-n*s*d)+e[7]*(+t*s*d-t*c*h+i*a*h-r*a*d+r*c*u-i*s*u)+e[11]*(+t*c*l-t*o*d-i*a*l+n*a*d+i*o*u-n*c*u)+e[15]*(-r*o*u-t*s*l+t*o*h+r*a*l-n*a*h+n*s*u)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var n=this.elements,r=e.elements,i=r[0],a=r[1],o=r[2],s=r[3],c=r[4],u=r[5],l=r[6],h=r[7],d=r[8],p=r[9],f=r[10],m=r[11],g=r[12],v=r[13],y=r[14],x=r[15],b=p*y*h-v*f*h+v*l*m-u*y*m-p*l*x+u*f*x,w=g*f*h-d*y*h-g*l*m+c*y*m+d*l*x-c*f*x,_=d*v*h-g*p*h+g*u*m-c*v*m-d*u*x+c*p*x,M=g*p*l-d*v*l-g*u*f+c*v*f+d*u*y-c*p*y,E=i*b+a*w+o*_+s*M;if(0===E){var T=\"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";if(!0===t)throw new Error(T);return console.warn(T),this.identity()}var S=1/E;return n[0]=b*S,n[1]=(v*f*s-p*y*s-v*o*m+a*y*m+p*o*x-a*f*x)*S,n[2]=(u*y*s-v*l*s+v*o*h-a*y*h-u*o*x+a*l*x)*S,n[3]=(p*l*s-u*f*s-p*o*h+a*f*h+u*o*m-a*l*m)*S,n[4]=w*S,n[5]=(d*y*s-g*f*s+g*o*m-i*y*m-d*o*x+i*f*x)*S,n[6]=(g*l*s-c*y*s-g*o*h+i*y*h+c*o*x-i*l*x)*S,n[7]=(c*f*s-d*l*s+d*o*h-i*f*h-c*o*m+i*l*m)*S,n[8]=_*S,n[9]=(g*p*s-d*v*s-g*a*m+i*v*m+d*a*x-i*p*x)*S,n[10]=(c*v*s-g*u*s+g*a*h-i*v*h-c*a*x+i*u*x)*S,n[11]=(d*u*s-c*p*s-d*a*h+i*p*h+c*a*m-i*u*m)*S,n[12]=M*S,n[13]=(d*v*o-g*p*o+g*a*f-i*v*f-d*a*y+i*p*y)*S,n[14]=(g*u*o-c*v*o-g*a*l+i*v*l+c*a*y-i*u*y)*S,n[15]=(c*p*o-d*u*o+d*a*l-i*p*l-c*a*f+i*u*f)*S,this},scale:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z;return t[0]*=n,t[4]*=r,t[8]*=i,t[1]*=n,t[5]*=r,t[9]*=i,t[2]*=n,t[6]*=r,t[10]*=i,t[3]*=n,t[7]*=r,t[11]*=i,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))},makeTranslation:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=1-n,a=e.x,o=e.y,s=e.z,c=i*a,u=i*o;return this.set(c*a+n,c*o-r*s,c*s+r*o,0,c*o+r*s,u*o+n,u*s-r*a,0,c*s-r*o,u*s+r*a,i*s*s+n,0,0,0,0,1),this},makeScale:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this},compose:function(e,t,n){var r=this.elements,i=t._x,a=t._y,o=t._z,s=t._w,c=i+i,u=a+a,l=o+o,h=i*c,d=i*u,p=i*l,f=a*u,m=a*l,g=o*l,v=s*c,y=s*u,x=s*l,b=n.x,w=n.y,_=n.z;return r[0]=(1-(f+g))*b,r[1]=(d+x)*b,r[2]=(p-y)*b,r[3]=0,r[4]=(d-x)*w,r[5]=(1-(h+g))*w,r[6]=(m+v)*w,r[7]=0,r[8]=(p+y)*_,r[9]=(m-v)*_,r[10]=(1-(h+f))*_,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this},decompose:function(){var e=new Ht,t=new Gt;return function(n,r,i){var a=this.elements,o=e.set(a[0],a[1],a[2]).length(),s=e.set(a[4],a[5],a[6]).length(),c=e.set(a[8],a[9],a[10]).length();this.determinant()<0&&(o=-o),n.x=a[12],n.y=a[13],n.z=a[14],t.copy(this);var u=1/o,l=1/s,h=1/c;return t.elements[0]*=u,t.elements[1]*=u,t.elements[2]*=u,t.elements[4]*=l,t.elements[5]*=l,t.elements[6]*=l,t.elements[8]*=h,t.elements[9]*=h,t.elements[10]*=h,r.setFromRotationMatrix(t),i.x=o,i.y=s,i.z=c,this}}(),makePerspective:function(e,t,n,r,i,a){void 0===a&&console.warn(\"THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.\");var o=this.elements,s=2*i/(t-e),c=2*i/(n-r),u=(t+e)/(t-e),l=(n+r)/(n-r),h=-(a+i)/(a-i),d=-2*a*i/(a-i);return o[0]=s,o[4]=0,o[8]=u,o[12]=0,o[1]=0,o[5]=c,o[9]=l,o[13]=0,o[2]=0,o[6]=0,o[10]=h,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(e,t,n,r,i,a){var o=this.elements,s=1/(t-e),c=1/(n-r),u=1/(a-i),l=(t+e)*s,h=(n+r)*c,d=(a+i)*u;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-l,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-h,o[2]=0,o[6]=0,o[10]=-2*u,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(e){for(var t=this.elements,n=e.elements,r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0},fromArray:function(e,t){void 0===t&&(t=0);for(var n=0;n<16;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}),Object.assign(zt,{slerp:function(e,t,n,r){return n.copy(e).slerp(t,r)},slerpFlat:function(e,t,n,r,i,a,o){var s=n[r+0],c=n[r+1],u=n[r+2],l=n[r+3],h=i[a+0],d=i[a+1],p=i[a+2],f=i[a+3];if(l!==f||s!==h||c!==d||u!==p){var m=1-o,g=s*h+c*d+u*p+l*f,v=g>=0?1:-1,y=1-g*g;if(y>Number.EPSILON){var x=Math.sqrt(y),b=Math.atan2(x,g*v);m=Math.sin(m*b)/x,o=Math.sin(o*b)/x}var w=o*v;if(s=s*m+h*w,c=c*m+d*w,u=u*m+p*w,l=l*m+f*w,m===1-o){var _=1/Math.sqrt(s*s+c*c+u*u+l*l);s*=_,c*=_,u*=_,l*=_}}e[t]=s,e[t+1]=c,e[t+2]=u,e[t+3]=l}}),Object.defineProperties(zt.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this.onChangeCallback()}}}),Object.assign(zt.prototype,{set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(!e||!e.isEuler)throw new Error(\"THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.\");var n=e._x,r=e._y,i=e._z,a=e.order,o=Math.cos,s=Math.sin,c=o(n/2),u=o(r/2),l=o(i/2),h=s(n/2),d=s(r/2),p=s(i/2);return\"XYZ\"===a?(this._x=h*u*l+c*d*p,this._y=c*d*l-h*u*p,this._z=c*u*p+h*d*l,this._w=c*u*l-h*d*p):\"YXZ\"===a?(this._x=h*u*l+c*d*p,this._y=c*d*l-h*u*p,this._z=c*u*p-h*d*l,this._w=c*u*l+h*d*p):\"ZXY\"===a?(this._x=h*u*l-c*d*p,this._y=c*d*l+h*u*p,this._z=c*u*p+h*d*l,this._w=c*u*l-h*d*p):\"ZYX\"===a?(this._x=h*u*l-c*d*p,this._y=c*d*l+h*u*p,this._z=c*u*p-h*d*l,this._w=c*u*l+h*d*p):\"YZX\"===a?(this._x=h*u*l+c*d*p,this._y=c*d*l+h*u*p,this._z=c*u*p-h*d*l,this._w=c*u*l-h*d*p):\"XZY\"===a&&(this._x=h*u*l-c*d*p,this._y=c*d*l-h*u*p,this._z=c*u*p+h*d*l,this._w=c*u*l+h*d*p),!1!==t&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t,n=e.elements,r=n[0],i=n[4],a=n[8],o=n[1],s=n[5],c=n[9],u=n[2],l=n[6],h=n[10],d=r+s+h;return d>0?(t=.5/Math.sqrt(d+1),this._w=.25/t,this._x=(l-c)*t,this._y=(a-u)*t,this._z=(o-i)*t):r>s&&r>h?(t=2*Math.sqrt(1+r-s-h),this._w=(l-c)/t,this._x=.25*t,this._y=(i+o)/t,this._z=(a+u)/t):s>h?(t=2*Math.sqrt(1+s-r-h),this._w=(a-u)/t,this._x=(i+o)/t,this._y=.25*t,this._z=(c+l)/t):(t=2*Math.sqrt(1+h-r-s),this._w=(o-i)/t,this._x=(a+u)/t,this._y=(c+l)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:function(){var e,t=new Ht;return function(n,r){return void 0===t&&(t=new Ht),(e=n.dot(r)+1)<1e-6?(e=0,Math.abs(n.x)>Math.abs(n.z)?t.set(-n.y,n.x,0):t.set(0,-n.z,n.y)):t.crossVectors(n,r),this._x=t.x,this._y=t.y,this._z=t.z,this._w=e,this.normalize()}}(),angleTo:function(e){return 2*Math.acos(Math.abs(Bt.clamp(this.dot(e),-1,1)))},rotateTowards:function(e,t){var n=this.angleTo(e);if(0===n)return this;var r=Math.min(1,t/n);return this.slerp(e,r),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this.onChangeCallback(),this},multiply:function(e,t){return void 0!==t?(console.warn(\"THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\"),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var n=e._x,r=e._y,i=e._z,a=e._w,o=t._x,s=t._y,c=t._z,u=t._w;return this._x=n*u+a*o+r*c-i*s,this._y=r*u+a*s+i*o-n*c,this._z=i*u+a*c+n*s-r*o,this._w=a*u-n*o-r*s-i*c,this.onChangeCallback(),this},slerp:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var n=this._x,r=this._y,i=this._z,a=this._w,o=a*e._w+n*e._x+r*e._y+i*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=r,this._z=i,this;var s=1-o*o;if(s<=Number.EPSILON){var c=1-t;return this._w=c*a+t*this._w,this._x=c*n+t*this._x,this._y=c*r+t*this._y,this._z=c*i+t*this._z,this.normalize()}var u=Math.sqrt(s),l=Math.atan2(u,o),h=Math.sin((1-t)*l)/u,d=Math.sin(t*l)/u;return this._w=a*h+this._w*d,this._x=n*h+this._x*d,this._y=r*h+this._y*d,this._z=i*h+this._z*d,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(Ht.prototype,{isVector3:!0,set:function(e,t,n){return this.x=e,this.y=t,this.z=n,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error(\"index is out of range: \"+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error(\"index is out of range: \"+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn(\"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return void 0!==t?(console.warn(\"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn(\"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e=new zt;return function(t){return t&&t.isEuler||console.error(\"THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.\"),this.applyQuaternion(e.setFromEuler(t))}}(),applyAxisAngle:function(){var e=new zt;return function(t,n){return this.applyQuaternion(e.setFromAxisAngle(t,n))}}(),applyMatrix3:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6]*r,this.y=i[1]*t+i[4]*n+i[7]*r,this.z=i[2]*t+i[5]*n+i[8]*r,this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements,a=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*a,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*a,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*a,this},applyQuaternion:function(e){var t=this.x,n=this.y,r=this.z,i=e.x,a=e.y,o=e.z,s=e.w,c=s*t+a*r-o*n,u=s*n+o*t-i*r,l=s*r+i*n-a*t,h=-i*t-a*n-o*r;return this.x=c*s+h*-i+u*-o-l*-a,this.y=u*s+h*-a+l*-i-c*-o,this.z=l*s+h*-o+c*-a-u*-i,this},project:function(){var e=new Gt;return function(t){return e.multiplyMatrices(t.projectionMatrix,e.getInverse(t.matrixWorld)),this.applyMatrix4(e)}}(),unproject:function(){var e=new Gt;return function(t){return e.multiplyMatrices(t.matrixWorld,e.getInverse(t.projectionMatrix)),this.applyMatrix4(e)}}(),transformDirection:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r,this.y=i[1]*t+i[5]*n+i[9]*r,this.z=i[2]*t+i[6]*n+i[10]*r,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(){var e=new Ht,t=new Ht;return function(n,r){return e.set(n,n,n),t.set(r,r,r),this.clamp(e,t)}}(),clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},cross:function(e,t){return void 0!==t?(console.warn(\"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"),this.crossVectors(e,t)):this.crossVectors(this,e)},crossVectors:function(e,t){var n=e.x,r=e.y,i=e.z,a=t.x,o=t.y,s=t.z;return this.x=r*s-i*o,this.y=i*a-n*s,this.z=n*o-r*a,this},projectOnVector:function(e){var t=e.dot(this)/e.lengthSq();return this.copy(e).multiplyScalar(t)},projectOnPlane:function(){var e=new Ht;return function(t){return e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e=new Ht;return function(t){return this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){var t=this.dot(e)/Math.sqrt(this.lengthSq()*e.lengthSq());return Math.acos(Bt.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)},setFromSpherical:function(e){var t=Math.sin(e.phi)*e.radius;return this.x=t*Math.sin(e.theta),this.y=Math.cos(e.phi)*e.radius,this.z=t*Math.cos(e.theta),this},setFromCylindrical:function(e){return this.x=e.radius*Math.sin(e.theta),this.y=e.y,this.z=e.radius*Math.cos(e.theta),this},setFromMatrixPosition:function(e){var t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,4*t)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromBufferAttribute:function(e,t,n){return void 0!==n&&console.warn(\"THREE.Vector3: offset has been removed from .fromBufferAttribute().\"),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}}),Object.assign(kt.prototype,{isMatrix3:!0,set:function(e,t,n,r,i,a,o,s,c){var u=this.elements;return u[0]=e,u[1]=r,u[2]=o,u[3]=t,u[4]=i,u[5]=s,u[6]=n,u[7]=a,u[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},applyToBufferAttribute:function(){var e=new Ht;return function(t){for(var n=0,r=t.count;n<r;n++)e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.applyMatrix3(this),t.setXYZ(n,e.x,e.y,e.z);return t}}(),multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[3],s=n[6],c=n[1],u=n[4],l=n[7],h=n[2],d=n[5],p=n[8],f=r[0],m=r[3],g=r[6],v=r[1],y=r[4],x=r[7],b=r[2],w=r[5],_=r[8];return i[0]=a*f+o*v+s*b,i[3]=a*m+o*y+s*w,i[6]=a*g+o*x+s*_,i[1]=c*f+u*v+l*b,i[4]=c*m+u*y+l*w,i[7]=c*g+u*x+l*_,i[2]=h*f+d*v+p*b,i[5]=h*m+d*y+p*w,i[8]=h*g+d*x+p*_,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],c=e[7],u=e[8];return t*a*u-t*o*c-n*i*u+n*o*s+r*i*c-r*a*s},getInverse:function(e,t){e&&e.isMatrix4&&console.error(\"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\");var n=e.elements,r=this.elements,i=n[0],a=n[1],o=n[2],s=n[3],c=n[4],u=n[5],l=n[6],h=n[7],d=n[8],p=d*c-u*h,f=u*l-d*s,m=h*s-c*l,g=i*p+a*f+o*m;if(0===g){var v=\"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";if(!0===t)throw new Error(v);return console.warn(v),this.identity()}var y=1/g;return r[0]=p*y,r[1]=(o*h-d*a)*y,r[2]=(u*a-o*c)*y,r[3]=f*y,r[4]=(d*i-o*l)*y,r[5]=(o*s-u*i)*y,r[6]=m*y,r[7]=(a*l-h*i)*y,r[8]=(c*i-a*s)*y,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},setUvTransform:function(e,t,n,r,i,a,o){var s=Math.cos(i),c=Math.sin(i);this.set(n*s,n*c,-n*(s*a+c*o)+a+e,-r*c,r*s,-r*(-c*a+s*o)+o+t,0,0,1)},scale:function(e,t){var n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this},rotate:function(e){var t=Math.cos(e),n=Math.sin(e),r=this.elements,i=r[0],a=r[3],o=r[6],s=r[1],c=r[4],u=r[7];return r[0]=t*i+n*s,r[3]=t*a+n*c,r[6]=t*o+n*u,r[1]=-n*i+t*s,r[4]=-n*a+t*c,r[7]=-n*o+t*u,this},translate:function(e,t){var n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this},equals:function(e){for(var t=this.elements,n=e.elements,r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0},fromArray:function(e,t){void 0===t&&(t=0);for(var n=0;n<9;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}});var jt={getDataURL:function(e){var t;if(e instanceof HTMLCanvasElement)t=e;else{\"undefined\"!=typeof OffscreenCanvas?t=new OffscreenCanvas(e.width,e.height):((t=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\")).width=e.width,t.height=e.height);var n=t.getContext(\"2d\");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height)}return t.width>2048||t.height>2048?t.toDataURL(\"image/jpeg\",.6):t.toDataURL(\"image/png\")}},Vt=0;function Wt(e,t,n,r,i,a,o,s,c,u){Object.defineProperty(this,\"id\",{value:Vt++}),this.uuid=Bt.generateUUID(),this.name=\"\",this.image=void 0!==e?e:Wt.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==t?t:Wt.DEFAULT_MAPPING,this.wrapS=void 0!==n?n:ge,this.wrapT=void 0!==r?r:ge,this.magFilter=void 0!==i?i:we,this.minFilter=void 0!==a?a:Me,this.anisotropy=void 0!==c?c:1,this.format=void 0!==o?o:Fe,this.type=void 0!==s?s:Ee,this.offset=new Ft(0,0),this.repeat=new Ft(1,1),this.center=new Ft(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new kt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==u?u:Tt,this.version=0,this.onUpdate=null}function Xt(e,t,n,r){this.x=e||0,this.y=t||0,this.z=n||0,this.w=void 0!==r?r:1}function qt(e,t,n){this.width=e,this.height=t,this.scissor=new Xt(0,0,e,t),this.scissorTest=!1,this.viewport=new Xt(0,0,e,t),void 0===(n=n||{}).minFilter&&(n.minFilter=we),this.texture=new Wt(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.generateMipmaps=void 0===n.generateMipmaps||n.generateMipmaps,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0===n.stencilBuffer||n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}function Yt(e,t,n){qt.call(this,e,t,n),this.activeCubeFace=0,this.activeMipMapLevel=0}function Zt(e,t,n,r,i,a,o,s,c,u,l,h){Wt.call(this,null,a,o,s,c,u,r,i,l,h),this.image={data:e,width:t,height:n},this.magFilter=void 0!==c?c:ye,this.minFilter=void 0!==u?u:ye,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}function Jt(e,t){this.min=void 0!==e?e:new Ht(1/0,1/0,1/0),this.max=void 0!==t?t:new Ht(-1/0,-1/0,-1/0)}function Kt(e,t){this.center=void 0!==e?e:new Ht,this.radius=void 0!==t?t:0}function Qt(e,t){this.normal=void 0!==e?e:new Ht(1,0,0),this.constant=void 0!==t?t:0}function $t(e,t,n,r,i,a){this.planes=[void 0!==e?e:new Qt,void 0!==t?t:new Qt,void 0!==n?n:new Qt,void 0!==r?r:new Qt,void 0!==i?i:new Qt,void 0!==a?a:new Qt]}Wt.DEFAULT_IMAGE=void 0,Wt.DEFAULT_MAPPING=se,Wt.prototype=Object.assign(Object.create(r.prototype),{constructor:Wt,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){var t=void 0===e||\"string\"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];var n={metadata:{version:4.5,type:\"Texture\",generator:\"Texture.toJSON\"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(void 0!==this.image){var r=this.image;if(void 0===r.uuid&&(r.uuid=Bt.generateUUID()),!t&&void 0===e.images[r.uuid]){var i;if(Array.isArray(r)){i=[];for(var a=0,o=r.length;a<o;a++)i.push(jt.getDataURL(r[a]))}else i=jt.getDataURL(r);e.images[r.uuid]={uuid:r.uuid,url:i}}n.image=r.uuid}return t||(e.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:\"dispose\"})},transformUv:function(e){if(this.mapping===se){if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case me:e.x=e.x-Math.floor(e.x);break;case ge:e.x=e.x<0?0:1;break;case ve:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case me:e.y=e.y-Math.floor(e.y);break;case ge:e.y=e.y<0?0:1;break;case ve:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}this.flipY&&(e.y=1-e.y)}}}),Object.defineProperty(Wt.prototype,\"needsUpdate\",{set:function(e){!0===e&&this.version++}}),Object.assign(Xt.prototype,{isVector4:!0,set:function(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error(\"index is out of range: \"+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error(\"index is out of range: \"+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn(\"THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return void 0!==t?(console.warn(\"THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*r+a[12]*i,this.y=a[1]*t+a[5]*n+a[9]*r+a[13]*i,this.z=a[2]*t+a[6]*n+a[10]*r+a[14]*i,this.w=a[3]*t+a[7]*n+a[11]*r+a[15]*i,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,n,r,i,a=e.elements,o=a[0],s=a[4],c=a[8],u=a[1],l=a[5],h=a[9],d=a[2],p=a[6],f=a[10];if(Math.abs(s-u)<.01&&Math.abs(c-d)<.01&&Math.abs(h-p)<.01){if(Math.abs(s+u)<.1&&Math.abs(c+d)<.1&&Math.abs(h+p)<.1&&Math.abs(o+l+f-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;var m=(o+1)/2,g=(l+1)/2,v=(f+1)/2,y=(s+u)/4,x=(c+d)/4,b=(h+p)/4;return m>g&&m>v?m<.01?(n=0,r=.707106781,i=.707106781):(r=y/(n=Math.sqrt(m)),i=x/n):g>v?g<.01?(n=.707106781,r=0,i=.707106781):(n=y/(r=Math.sqrt(g)),i=b/r):v<.01?(n=.707106781,r=.707106781,i=0):(n=x/(i=Math.sqrt(v)),r=b/i),this.set(n,r,i,t),this}var w=Math.sqrt((p-h)*(p-h)+(c-d)*(c-d)+(u-s)*(u-s));return Math.abs(w)<.001&&(w=1),this.x=(p-h)/w,this.y=(c-d)/w,this.z=(u-s)/w,this.w=Math.acos((o+l+f-1)/2),this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(){var e,t;return function(n,r){return void 0===e&&(e=new Xt,t=new Xt),e.set(n,n,n,n),t.set(r,r,r,r),this.clamp(e,t)}}(),clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromBufferAttribute:function(e,t,n){return void 0!==n&&console.warn(\"THREE.Vector4: offset has been removed from .fromBufferAttribute().\"),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}}),qt.prototype=Object.assign(Object.create(r.prototype),{constructor:qt,isWebGLRenderTarget:!0,setSize:function(e,t){this.width===e&&this.height===t||(this.width=e,this.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}}),Yt.prototype=Object.create(qt.prototype),Yt.prototype.constructor=Yt,Yt.prototype.isWebGLRenderTargetCube=!0,Zt.prototype=Object.create(Wt.prototype),Zt.prototype.constructor=Zt,Zt.prototype.isDataTexture=!0,Object.assign(Jt.prototype,{isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){for(var t=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,c=e.length;s<c;s+=3){var u=e[s],l=e[s+1],h=e[s+2];u<t&&(t=u),l<n&&(n=l),h<r&&(r=h),u>i&&(i=u),l>a&&(a=l),h>o&&(o=h)}return this.min.set(t,n,r),this.max.set(i,a,o),this},setFromBufferAttribute:function(e){for(var t=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,c=e.count;s<c;s++){var u=e.getX(s),l=e.getY(s),h=e.getZ(s);u<t&&(t=u),l<n&&(n=l),h<r&&(r=h),u>i&&(i=u),l>a&&(a=l),h>o&&(o=h)}return this.min.set(t,n,r),this.max.set(i,a,o),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new Ht;return function(t,n){var r=e.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),setFromObject:function(e){return this.makeEmpty(),this.expandByObject(e)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(e){return void 0===e&&(console.warn(\"THREE.Box3: .getCenter() target is now required\"),e=new Ht),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn(\"THREE.Box3: .getSize() target is now required\"),e=new Ht),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByObject:function(){var e,t,n,r=new Ht;function i(i){var a=i.geometry;if(void 0!==a)if(a.isGeometry){var o=a.vertices;for(t=0,n=o.length;t<n;t++)r.copy(o[t]),r.applyMatrix4(i.matrixWorld),e.expandByPoint(r)}else if(a.isBufferGeometry){var s=a.attributes.position;if(void 0!==s)for(t=0,n=s.count;t<n;t++)r.fromBufferAttribute(s,t).applyMatrix4(i.matrixWorld),e.expandByPoint(r)}}return function(t){return e=this,t.updateMatrixWorld(!0),t.traverse(i),this}}(),containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){return void 0===t&&(console.warn(\"THREE.Box3: .getParameter() target is now required\"),t=new Ht),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function(){var e=new Ht;return function(t){return this.clampPoint(t.center,e),e.distanceToSquared(t.center)<=t.radius*t.radius}}(),intersectsPlane:function(e){var t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=e.constant&&n>=e.constant},intersectsTriangle:function(){var e=new Ht,t=new Ht,n=new Ht,r=new Ht,i=new Ht,a=new Ht,o=new Ht,s=new Ht,c=new Ht,u=new Ht;function l(r){var i,a;for(i=0,a=r.length-3;i<=a;i+=3){o.fromArray(r,i);var s=c.x*Math.abs(o.x)+c.y*Math.abs(o.y)+c.z*Math.abs(o.z),u=e.dot(o),l=t.dot(o),h=n.dot(o);if(Math.max(-Math.max(u,l,h),Math.min(u,l,h))>s)return!1}return!0}return function(o){if(this.isEmpty())return!1;this.getCenter(s),c.subVectors(this.max,s),e.subVectors(o.a,s),t.subVectors(o.b,s),n.subVectors(o.c,s),r.subVectors(t,e),i.subVectors(n,t),a.subVectors(e,n);var h=[0,-r.z,r.y,0,-i.z,i.y,0,-a.z,a.y,r.z,0,-r.x,i.z,0,-i.x,a.z,0,-a.x,-r.y,r.x,0,-i.y,i.x,0,-a.y,a.x,0];return!!l(h)&&(!!l(h=[1,0,0,0,1,0,0,0,1])&&(u.crossVectors(r,i),l(h=[u.x,u.y,u.z])))}}(),clampPoint:function(e,t){return void 0===t&&(console.warn(\"THREE.Box3: .clampPoint() target is now required\"),t=new Ht),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new Ht;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new Ht;return function(t){return void 0===t&&(console.warn(\"THREE.Box3: .getBoundingSphere() target is now required\"),t=new Kt),this.getCenter(t.center),t.radius=.5*this.getSize(e).length(),t}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(e){if(this.isEmpty())return this;var t=e.elements,n=t[0]*this.min.x,r=t[1]*this.min.x,i=t[2]*this.min.x,a=t[0]*this.max.x,o=t[1]*this.max.x,s=t[2]*this.max.x,c=t[4]*this.min.y,u=t[5]*this.min.y,l=t[6]*this.min.y,h=t[4]*this.max.y,d=t[5]*this.max.y,p=t[6]*this.max.y,f=t[8]*this.min.z,m=t[9]*this.min.z,g=t[10]*this.min.z,v=t[8]*this.max.z,y=t[9]*this.max.z,x=t[10]*this.max.z;return this.min.x=Math.min(n,a)+Math.min(c,h)+Math.min(f,v)+t[12],this.min.y=Math.min(r,o)+Math.min(u,d)+Math.min(m,y)+t[13],this.min.z=Math.min(i,s)+Math.min(l,p)+Math.min(g,x)+t[14],this.max.x=Math.max(n,a)+Math.max(c,h)+Math.max(f,v)+t[12],this.max.y=Math.max(r,o)+Math.max(u,d)+Math.max(m,y)+t[13],this.max.z=Math.max(i,s)+Math.max(l,p)+Math.max(g,x)+t[14],this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}),Object.assign(Kt.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new Jt;return function(t,n){var r=this.center;void 0!==n?r.copy(n):e.setFromPoints(t).getCenter(r);for(var i=0,a=0,o=t.length;a<o;a++)i=Math.max(i,r.distanceToSquared(t[a]));return this.radius=Math.sqrt(i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius},clampPoint:function(e,t){var n=this.center.distanceToSquared(e);return void 0===t&&(console.warn(\"THREE.Sphere: .clampPoint() target is now required\"),t=new Ht),t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t},getBoundingBox:function(e){return void 0===e&&(console.warn(\"THREE.Sphere: .getBoundingBox() target is now required\"),e=new Jt),e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}}),Object.assign(Qt.prototype,{set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new Ht,t=new Ht;return function(n,r,i){var a=e.subVectors(i,r).cross(t.subVectors(n,r)).normalize();return this.setFromNormalAndCoplanarPoint(a,n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return void 0===t&&(console.warn(\"THREE.Plane: .projectPoint() target is now required\"),t=new Ht),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)},intersectLine:function(){var e=new Ht;return function(t,n){void 0===n&&(console.warn(\"THREE.Plane: .intersectLine() target is now required\"),n=new Ht);var r=t.delta(e),i=this.normal.dot(r);if(0===i)return 0===this.distanceToPoint(t.start)?n.copy(t.start):void 0;var a=-(t.start.dot(this.normal)+this.constant)/i;return a<0||a>1?void 0:n.copy(r).multiplyScalar(a).add(t.start)}}(),intersectsLine:function(e){var t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){return void 0===e&&(console.warn(\"THREE.Plane: .coplanarPoint() target is now required\"),e=new Ht),e.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new Ht,t=new kt;return function(n,r){var i=r||t.getNormalMatrix(n),a=this.coplanarPoint(e).applyMatrix4(n),o=this.normal.applyMatrix3(i).normalize();return this.constant=-a.dot(o),this}}(),translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}),Object.assign($t.prototype,{set:function(e,t,n,r,i,a){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(r),o[4].copy(i),o[5].copy(a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){for(var t=this.planes,n=0;n<6;n++)t[n].copy(e.planes[n]);return this},setFromMatrix:function(e){var t=this.planes,n=e.elements,r=n[0],i=n[1],a=n[2],o=n[3],s=n[4],c=n[5],u=n[6],l=n[7],h=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],v=n[14],y=n[15];return t[0].setComponents(o-r,l-s,f-h,y-m).normalize(),t[1].setComponents(o+r,l+s,f+h,y+m).normalize(),t[2].setComponents(o+i,l+c,f+d,y+g).normalize(),t[3].setComponents(o-i,l-c,f-d,y-g).normalize(),t[4].setComponents(o-a,l-u,f-p,y-v).normalize(),t[5].setComponents(o+a,l+u,f+p,y+v).normalize(),this},intersectsObject:function(){var e=new Kt;return function(t){var n=t.geometry;return null===n.boundingSphere&&n.computeBoundingSphere(),e.copy(n.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSprite:function(){var e=new Kt;return function(t){return e.center.set(0,0,0),e.radius=.7071067811865476,e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,n=e.center,r=-e.radius,i=0;i<6;i++){if(t[i].distanceToPoint(n)<r)return!1}return!0},intersectsBox:function(){var e=new Ht;return function(t){for(var n=this.planes,r=0;r<6;r++){var i=n[r];if(e.x=i.normal.x>0?t.max.x:t.min.x,e.y=i.normal.y>0?t.max.y:t.min.y,e.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(e)<0)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}});var en={alphamap_fragment:\"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\",alphamap_pars_fragment:\"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\",alphatest_fragment:\"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\",aomap_fragment:\"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\",aomap_pars_fragment:\"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\",begin_vertex:\"\\nvec3 transformed = vec3( position );\\n\",beginnormal_vertex:\"\\nvec3 objectNormal = vec3( normal );\\n\",bsdfs:\"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\",bumpmap_pars_fragment:\"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\",clipping_planes_fragment:\"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\",clipping_planes_pars_fragment:\"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\",clipping_planes_pars_vertex:\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\",clipping_planes_vertex:\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\",color_fragment:\"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\",color_pars_fragment:\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\",color_pars_vertex:\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\",color_vertex:\"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\",common:\"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\",cube_uv_reflection_fragment:\"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\",defaultnormal_vertex:\"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\",displacementmap_pars_vertex:\"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\",displacementmap_vertex:\"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\",emissivemap_fragment:\"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\",emissivemap_pars_fragment:\"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\",encodings_fragment:\"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\",encodings_pars_fragment:\"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\",envmap_fragment:\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\",envmap_pars_fragment:\"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\",envmap_pars_vertex:\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\",envmap_physical_pars_fragment:\"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\",envmap_vertex:\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\",fog_vertex:\"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\",fog_pars_vertex:\"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\",fog_fragment:\"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\",fog_pars_fragment:\"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\",gradientmap_pars_fragment:\"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\",lightmap_fragment:\"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\",lightmap_pars_fragment:\"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\",lights_lambert_vertex:\"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\",lights_pars_begin:\"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\",lights_phong_fragment:\"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\",lights_phong_pars_fragment:\"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\",lights_physical_fragment:\"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\",lights_physical_pars_fragment:\"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\",lights_fragment_begin:\"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\",lights_fragment_maps:\"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\",lights_fragment_end:\"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\",logdepthbuf_fragment:\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\",logdepthbuf_pars_fragment:\"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\",logdepthbuf_pars_vertex:\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\",logdepthbuf_vertex:\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\",map_fragment:\"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\",map_pars_fragment:\"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\",map_particle_fragment:\"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\",map_particle_pars_fragment:\"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\",metalnessmap_fragment:\"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\",metalnessmap_pars_fragment:\"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\",morphnormal_vertex:\"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\",morphtarget_pars_vertex:\"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\",morphtarget_vertex:\"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\",normal_fragment_begin:\"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\",normal_fragment_maps:\"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\",normalmap_pars_fragment:\"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\\n\",packing:\"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\",premultiplied_alpha_fragment:\"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\",project_vertex:\"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\",dithering_fragment:\"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\",dithering_pars_fragment:\"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\",roughnessmap_fragment:\"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\",roughnessmap_pars_fragment:\"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\",shadowmap_pars_fragment:\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\",shadowmap_pars_vertex:\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\",shadowmap_vertex:\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\",shadowmask_pars_fragment:\"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\",skinbase_vertex:\"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\",skinning_pars_vertex:\"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\",skinning_vertex:\"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\",skinnormal_vertex:\"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\",specularmap_fragment:\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\",specularmap_pars_fragment:\"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\",tonemapping_fragment:\"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\",tonemapping_pars_fragment:\"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\",uv_pars_fragment:\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\",uv_pars_vertex:\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\",uv_vertex:\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\",uv2_pars_fragment:\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\",uv2_pars_vertex:\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\",uv2_vertex:\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\",worldpos_vertex:\"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\",cube_frag:\"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\",cube_vert:\"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\",depth_frag:\"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\",depth_vert:\"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\",distanceRGBA_frag:\"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\",distanceRGBA_vert:\"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\",equirect_frag:\"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\",equirect_vert:\"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\",linedashed_frag:\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",linedashed_vert:\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",meshbasic_frag:\"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",meshbasic_vert:\"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",meshlambert_frag:\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\",meshlambert_vert:\"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",meshphong_frag:\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\",meshphong_vert:\"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",meshphysical_frag:\"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\",meshphysical_vert:\"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",normal_frag:\"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\",normal_vert:\"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\",points_frag:\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",points_vert:\"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",shadow_frag:\"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\",shadow_vert:\"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",sprite_frag:\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",sprite_vert:\"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tvec4 mvPosition;\\n\\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\"},tn={merge:function(e){for(var t={},n=0;n<e.length;n++){var r=this.clone(e[n]);for(var i in r)t[i]=r[i]}return t},clone:function(e){var t={};for(var n in e)for(var r in t[n]={},e[n]){var i=e[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i}return t}},nn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function rn(e,t,n){return void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}Object.assign(rn.prototype,{isColor:!0,r:1,g:1,b:1,set:function(e){return e&&e.isColor?this.copy(e):\"number\"==typeof e?this.setHex(e):\"string\"==typeof e&&this.setStyle(e),this},setScalar:function(e){return this.r=e,this.g=e,this.b=e,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,n){return this.r=e,this.g=t,this.b=n,this},setHSL:function(){function e(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}return function(t,n,r){if(t=Bt.euclideanModulo(t,1),n=Bt.clamp(n,0,1),r=Bt.clamp(r,0,1),0===n)this.r=this.g=this.b=r;else{var i=r<=.5?r*(1+n):r+n-r*n,a=2*r-i;this.r=e(a,i,t+1/3),this.g=e(a,i,t),this.b=e(a,i,t-1/3)}return this}}(),setStyle:function(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn(\"THREE.Color: Alpha component of \"+e+\" will be ignored.\")}var n;if(n=/^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(e)){var r,i=n[1],a=n[2];switch(i){case\"rgb\":case\"rgba\":if(r=/^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,t(r[5]),this;if(r=/^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,t(r[5]),this;break;case\"hsl\":case\"hsla\":if(r=/^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(a)){var o=parseFloat(r[1])/360,s=parseInt(r[2],10)/100,c=parseInt(r[3],10)/100;return t(r[5]),this.setHSL(o,s,c)}}}else if(n=/^\\#([A-Fa-f0-9]+)$/.exec(e)){var u,l=(u=n[1]).length;if(3===l)return this.r=parseInt(u.charAt(0)+u.charAt(0),16)/255,this.g=parseInt(u.charAt(1)+u.charAt(1),16)/255,this.b=parseInt(u.charAt(2)+u.charAt(2),16)/255,this;if(6===l)return this.r=parseInt(u.charAt(0)+u.charAt(1),16)/255,this.g=parseInt(u.charAt(2)+u.charAt(3),16)/255,this.b=parseInt(u.charAt(4)+u.charAt(5),16)/255,this}e&&e.length>0&&(void 0!==(u=nn[e])?this.setHex(u):console.warn(\"THREE.Color: Unknown color \"+e));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);var n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this},convertGammaToLinear:function(e){return this.copyGammaToLinear(this,e),this},convertLinearToGamma:function(e){return this.copyLinearToGamma(this,e),this},copySRGBToLinear:function(){function e(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}return function(t){return this.r=e(t.r),this.g=e(t.g),this.b=e(t.b),this}}(),copyLinearToSRGB:function(){function e(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}return function(t){return this.r=e(t.r),this.g=e(t.g),this.b=e(t.b),this}}(),convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return(\"000000\"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){void 0===e&&(console.warn(\"THREE.Color: .getHSL() target is now required\"),e={h:0,s:0,l:0});var t,n,r=this.r,i=this.g,a=this.b,o=Math.max(r,i,a),s=Math.min(r,i,a),c=(s+o)/2;if(s===o)t=0,n=0;else{var u=o-s;switch(n=c<=.5?u/(o+s):u/(2-o-s),o){case r:t=(i-a)/u+(i<a?6:0);break;case i:t=(a-r)/u+2;break;case a:t=(r-i)/u+4}t/=6}return e.h=t,e.s=n,e.l=c,e},getStyle:function(){return\"rgb(\"+(255*this.r|0)+\",\"+(255*this.g|0)+\",\"+(255*this.b|0)+\")\"},offsetHSL:function(){var e={};return function(t,n,r){return this.getHSL(e),e.h+=t,e.s+=n,e.l+=r,this.setHSL(e.h,e.s,e.l),this}}(),add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},toJSON:function(){return this.getHex()}});var an={common:{diffuse:{value:new rn(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new kt},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Ft(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new rn(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new rn(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new kt}},sprite:{diffuse:{value:new rn(15658734)},opacity:{value:1},center:{value:new Ft(.5,.5)},rotation:{value:0},map:{value:null},uvTransform:{value:new kt}}},on={basic:{uniforms:tn.merge([an.common,an.specularmap,an.envmap,an.aomap,an.lightmap,an.fog]),vertexShader:en.meshbasic_vert,fragmentShader:en.meshbasic_frag},lambert:{uniforms:tn.merge([an.common,an.specularmap,an.envmap,an.aomap,an.lightmap,an.emissivemap,an.fog,an.lights,{emissive:{value:new rn(0)}}]),vertexShader:en.meshlambert_vert,fragmentShader:en.meshlambert_frag},phong:{uniforms:tn.merge([an.common,an.specularmap,an.envmap,an.aomap,an.lightmap,an.emissivemap,an.bumpmap,an.normalmap,an.displacementmap,an.gradientmap,an.fog,an.lights,{emissive:{value:new rn(0)},specular:{value:new rn(1118481)},shininess:{value:30}}]),vertexShader:en.meshphong_vert,fragmentShader:en.meshphong_frag},standard:{uniforms:tn.merge([an.common,an.envmap,an.aomap,an.lightmap,an.emissivemap,an.bumpmap,an.normalmap,an.displacementmap,an.roughnessmap,an.metalnessmap,an.fog,an.lights,{emissive:{value:new rn(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:en.meshphysical_vert,fragmentShader:en.meshphysical_frag},points:{uniforms:tn.merge([an.points,an.fog]),vertexShader:en.points_vert,fragmentShader:en.points_frag},dashed:{uniforms:tn.merge([an.common,an.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:en.linedashed_vert,fragmentShader:en.linedashed_frag},depth:{uniforms:tn.merge([an.common,an.displacementmap]),vertexShader:en.depth_vert,fragmentShader:en.depth_frag},normal:{uniforms:tn.merge([an.common,an.bumpmap,an.normalmap,an.displacementmap,{opacity:{value:1}}]),vertexShader:en.normal_vert,fragmentShader:en.normal_frag},sprite:{uniforms:tn.merge([an.sprite,an.fog]),vertexShader:en.sprite_vert,fragmentShader:en.sprite_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:en.cube_vert,fragmentShader:en.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:en.equirect_vert,fragmentShader:en.equirect_frag},distanceRGBA:{uniforms:tn.merge([an.common,an.displacementmap,{referencePosition:{value:new Ht},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:en.distanceRGBA_vert,fragmentShader:en.distanceRGBA_frag},shadow:{uniforms:tn.merge([an.lights,an.fog,{color:{value:new rn(0)},opacity:{value:1}}]),vertexShader:en.shadow_vert,fragmentShader:en.shadow_frag}};function sn(){var e=null,t=!1,n=null;function r(i,a){!1!==t&&(n(i,a),e.requestAnimationFrame(r))}return{start:function(){!0!==t&&null!==n&&(e.requestAnimationFrame(r),t=!0)},stop:function(){t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function cn(e){var t=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),t.get(e)},remove:function(n){n.isInterleavedBufferAttribute&&(n=n.data);var r=t.get(n);r&&(e.deleteBuffer(r.buffer),t.delete(n))},update:function(n,r){n.isInterleavedBufferAttribute&&(n=n.data);var i=t.get(n);void 0===i?t.set(n,function(t,n){var r=t.array,i=t.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW,a=e.createBuffer();e.bindBuffer(n,a),e.bufferData(n,r,i),t.onUploadCallback();var o=e.FLOAT;return r instanceof Float32Array?o=e.FLOAT:r instanceof Float64Array?console.warn(\"THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.\"):r instanceof Uint16Array?o=e.UNSIGNED_SHORT:r instanceof Int16Array?o=e.SHORT:r instanceof Uint32Array?o=e.UNSIGNED_INT:r instanceof Int32Array?o=e.INT:r instanceof Int8Array?o=e.BYTE:r instanceof Uint8Array&&(o=e.UNSIGNED_BYTE),{buffer:a,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}(n,r)):i.version<n.version&&(function(t,n,r){var i=n.array,a=n.updateRange;e.bindBuffer(r,t),!1===n.dynamic?e.bufferData(r,i,e.STATIC_DRAW):-1===a.count?e.bufferSubData(r,0,i):0===a.count?console.error(\"THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.\"):(e.bufferSubData(r,a.offset*i.BYTES_PER_ELEMENT,i.subarray(a.offset,a.offset+a.count)),a.count=-1)}(i.buffer,n,r),i.version=n.version)}}}function un(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._order=r||un.DefaultOrder}function ln(){this.mask=1}on.physical={uniforms:tn.merge([on.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:en.meshphysical_vert,fragmentShader:en.meshphysical_frag},un.RotationOrders=[\"XYZ\",\"YZX\",\"ZXY\",\"XZY\",\"YXZ\",\"ZYX\"],un.DefaultOrder=\"XYZ\",Object.defineProperties(un.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this.onChangeCallback()}}}),Object.assign(un.prototype,{isEuler:!0,set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._order=r||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,n){var r=Bt.clamp,i=e.elements,a=i[0],o=i[4],s=i[8],c=i[1],u=i[5],l=i[9],h=i[2],d=i[6],p=i[10];return\"XYZ\"===(t=t||this._order)?(this._y=Math.asin(r(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,p),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(d,u),this._z=0)):\"YXZ\"===t?(this._x=Math.asin(-r(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(s,p),this._z=Math.atan2(c,u)):(this._y=Math.atan2(-h,a),this._z=0)):\"ZXY\"===t?(this._x=Math.asin(r(d,-1,1)),Math.abs(d)<.99999?(this._y=Math.atan2(-h,p),this._z=Math.atan2(-o,u)):(this._y=0,this._z=Math.atan2(c,a))):\"ZYX\"===t?(this._y=Math.asin(-r(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,a)):(this._x=0,this._z=Math.atan2(-o,u))):\"YZX\"===t?(this._z=Math.asin(r(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(-l,u),this._y=Math.atan2(-h,a)):(this._x=0,this._y=Math.atan2(s,p))):\"XZY\"===t?(this._z=Math.asin(-r(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(d,u),this._y=Math.atan2(s,a)):(this._x=Math.atan2(-l,p),this._y=0)):console.warn(\"THREE.Euler: .setFromRotationMatrix() given unsupported order: \"+t),this._order=t,!1!==n&&this.onChangeCallback(),this},setFromQuaternion:function(){var e=new Gt;return function(t,n,r){return e.makeRotationFromQuaternion(t),this.setFromRotationMatrix(e,n,r)}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(){var e=new zt;return function(t){return e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new Ht(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(ln.prototype,{set:function(e){this.mask=1<<e|0},enable:function(e){this.mask|=1<<e|0},toggle:function(e){this.mask^=1<<e|0},disable:function(e){this.mask&=~(1<<e|0)},test:function(e){return 0!=(this.mask&e.mask)}});var hn=0;function dn(){Object.defineProperty(this,\"id\",{value:hn++}),this.uuid=Bt.generateUUID(),this.name=\"\",this.type=\"Object3D\",this.parent=null,this.children=[],this.up=dn.DefaultUp.clone();var e=new Ht,t=new un,n=new zt,r=new Ht(1,1,1);t.onChange(function(){n.setFromEuler(t,!1)}),n.onChange(function(){t.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:e},rotation:{enumerable:!0,value:t},quaternion:{enumerable:!0,value:n},scale:{enumerable:!0,value:r},modelViewMatrix:{value:new Gt},normalMatrix:{value:new kt}}),this.matrix=new Gt,this.matrixWorld=new Gt,this.matrixAutoUpdate=dn.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ln,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function pn(){dn.call(this),this.type=\"Camera\",this.matrixWorldInverse=new Gt,this.projectionMatrix=new Gt}function fn(e,t,n,r,i,a){pn.call(this),this.type=\"OrthographicCamera\",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=void 0!==i?i:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()}function mn(e,t,n,r,i,a){this.a=e,this.b=t,this.c=n,this.normal=r&&r.isVector3?r:new Ht,this.vertexNormals=Array.isArray(r)?r:[],this.color=i&&i.isColor?i:new rn,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=void 0!==a?a:0}dn.DefaultUp=new Ht(0,1,0),dn.DefaultMatrixAutoUpdate=!0,dn.prototype=Object.assign(Object.create(r.prototype),{constructor:dn,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new zt;return function(t,n){return e.setFromAxisAngle(t,n),this.quaternion.multiply(e),this}}(),rotateOnWorldAxis:function(){var e=new zt;return function(t,n){return e.setFromAxisAngle(t,n),this.quaternion.premultiply(e),this}}(),rotateX:function(){var e=new Ht(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new Ht(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new Ht(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new Ht;return function(t,n){return e.copy(t).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(n)),this}}(),translateX:function(){var e=new Ht(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new Ht(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new Ht(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new Gt;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new Gt,t=new Ht;return function(n,r,i){n.isVector3?t.copy(n):t.set(n,r,i),this.isCamera?e.lookAt(this.position,t,this.up):e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:\"added\"}),this.children.push(e)):console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\",e),this)},remove:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}var n=this.children.indexOf(e);return-1!==n&&(e.parent=null,e.dispatchEvent({type:\"removed\"}),this.children.splice(n,1)),this},getObjectById:function(e){return this.getObjectByProperty(\"id\",e)},getObjectByName:function(e){return this.getObjectByProperty(\"name\",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n].getObjectByProperty(e,t);if(void 0!==i)return i}},getWorldPosition:function(e){return void 0===e&&(console.warn(\"THREE.Object3D: .getWorldPosition() target is now required\"),e=new Ht),this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var e=new Ht,t=new Ht;return function(n){return void 0===n&&(console.warn(\"THREE.Object3D: .getWorldQuaternion() target is now required\"),n=new zt),this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,n,t),n}}(),getWorldScale:function(){var e=new Ht,t=new zt;return function(n){return void 0===n&&(console.warn(\"THREE.Object3D: .getWorldScale() target is now required\"),n=new Ht),this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,t,n),n}}(),getWorldDirection:function(){var e=new zt;return function(t){return void 0===t&&(console.warn(\"THREE.Object3D: .getWorldDirection() target is now required\"),t=new Ht),this.getWorldQuaternion(e),t.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(e){e(this);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)},toJSON:function(e){var t=void 0===e||\"string\"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:\"Object\",generator:\"Object3D.toJSON\"});var r={};function i(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,\"\"!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),\"{}\"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isMesh||this.isLine||this.isPoints){r.geometry=i(e.geometries,this.geometry);var a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){var o=a.shapes;if(Array.isArray(o))for(var s=0,c=o.length;s<c;s++){var u=o[s];i(e.shapes,u)}else i(e.shapes,o)}}if(void 0!==this.material)if(Array.isArray(this.material)){var l=[];for(s=0,c=this.material.length;s<c;s++)l.push(i(e.materials,this.material[s]));r.material=l}else r.material=i(e.materials,this.material);if(this.children.length>0){r.children=[];for(s=0;s<this.children.length;s++)r.children.push(this.children[s].toJSON(e).object)}if(t){var h=m(e.geometries),d=m(e.materials),p=m(e.textures),f=m(e.images);o=m(e.shapes);h.length>0&&(n.geometries=h),d.length>0&&(n.materials=d),p.length>0&&(n.textures=p),f.length>0&&(n.images=f),o.length>0&&(n.shapes=o)}return n.object=r,n;function m(e){var t=[];for(var n in e){var r=e[n];delete r.metadata,t.push(r)}return t}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var n=0;n<e.children.length;n++){var r=e.children[n];this.add(r.clone())}return this}}),pn.prototype=Object.assign(Object.create(dn.prototype),{constructor:pn,isCamera:!0,copy:function(e,t){return dn.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this},getWorldDirection:function(){var e=new zt;return function(t){return void 0===t&&(console.warn(\"THREE.Camera: .getWorldDirection() target is now required\"),t=new Ht),this.getWorldQuaternion(e),t.set(0,0,-1).applyQuaternion(e)}}(),updateMatrixWorld:function(e){dn.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),fn.prototype=Object.assign(Object.create(pn.prototype),{constructor:fn,isOrthographicCamera:!0,copy:function(e,t){return pn.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function(e,t,n,r,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2,i=n-e,a=n+e,o=r+t,s=r-t;if(null!==this.view&&this.view.enabled){var c=this.zoom/(this.view.width/this.view.fullWidth),u=this.zoom/(this.view.height/this.view.fullHeight),l=(this.right-this.left)/this.view.width,h=(this.top-this.bottom)/this.view.height;a=(i+=l*(this.view.offsetX/c))+l*(this.view.width/c),s=(o-=h*(this.view.offsetY/u))-h*(this.view.height/u)}this.projectionMatrix.makeOrthographic(i,a,o,s,this.near,this.far)},toJSON:function(e){var t=dn.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}),Object.assign(mn.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,n=e.vertexNormals.length;t<n;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(t=0,n=e.vertexColors.length;t<n;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}});var gn=0;function vn(){Object.defineProperty(this,\"id\",{value:gn+=2}),this.uuid=Bt.generateUUID(),this.name=\"\",this.type=\"Geometry\",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function yn(e,t,n){if(Array.isArray(e))throw new TypeError(\"THREE.BufferAttribute: array should be a Typed Array.\");this.name=\"\",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function xn(e,t,n){yn.call(this,new Int8Array(e),t,n)}function bn(e,t,n){yn.call(this,new Uint8Array(e),t,n)}function wn(e,t,n){yn.call(this,new Uint8ClampedArray(e),t,n)}function _n(e,t,n){yn.call(this,new Int16Array(e),t,n)}function Mn(e,t,n){yn.call(this,new Uint16Array(e),t,n)}function En(e,t,n){yn.call(this,new Int32Array(e),t,n)}function Tn(e,t,n){yn.call(this,new Uint32Array(e),t,n)}function Sn(e,t,n){yn.call(this,new Float32Array(e),t,n)}function An(e,t,n){yn.call(this,new Float64Array(e),t,n)}function Ln(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function Rn(e){if(0===e.length)return-1/0;for(var t=e[0],n=1,r=e.length;n<r;++n)e[n]>t&&(t=e[n]);return t}vn.prototype=Object.assign(Object.create(r.prototype),{constructor:vn,isGeometry:!0,applyMatrix:function(e){for(var t=(new kt).getNormalMatrix(e),n=0,r=this.vertices.length;n<r;n++){this.vertices[n].applyMatrix4(e)}for(n=0,r=this.faces.length;n<r;n++){var i=this.faces[n];i.normal.applyMatrix3(t).normalize();for(var a=0,o=i.vertexNormals.length;a<o;a++)i.vertexNormals[a].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var e=new Gt;return function(t){return e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e=new Gt;return function(t){return e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e=new Gt;return function(t){return e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e=new Gt;return function(t,n,r){return e.makeTranslation(t,n,r),this.applyMatrix(e),this}}(),scale:function(){var e=new Gt;return function(t,n,r){return e.makeScale(t,n,r),this.applyMatrix(e),this}}(),lookAt:function(){var e=new dn;return function(t){e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),fromBufferGeometry:function(e){var t=this,n=null!==e.index?e.index.array:void 0,r=e.attributes,i=r.position.array,a=void 0!==r.normal?r.normal.array:void 0,o=void 0!==r.color?r.color.array:void 0,s=void 0!==r.uv?r.uv.array:void 0,c=void 0!==r.uv2?r.uv2.array:void 0;void 0!==c&&(this.faceVertexUvs[1]=[]);for(var u=[],l=[],h=[],d=0,p=0;d<i.length;d+=3,p+=2)t.vertices.push(new Ht(i[d],i[d+1],i[d+2])),void 0!==a&&u.push(new Ht(a[d],a[d+1],a[d+2])),void 0!==o&&t.colors.push(new rn(o[d],o[d+1],o[d+2])),void 0!==s&&l.push(new Ft(s[p],s[p+1])),void 0!==c&&h.push(new Ft(c[p],c[p+1]));function f(e,n,r,i){var d=new mn(e,n,r,void 0!==a?[u[e].clone(),u[n].clone(),u[r].clone()]:[],void 0!==o?[t.colors[e].clone(),t.colors[n].clone(),t.colors[r].clone()]:[],i);t.faces.push(d),void 0!==s&&t.faceVertexUvs[0].push([l[e].clone(),l[n].clone(),l[r].clone()]),void 0!==c&&t.faceVertexUvs[1].push([h[e].clone(),h[n].clone(),h[r].clone()])}var m=e.groups;if(m.length>0)for(d=0;d<m.length;d++)for(var g=m[d],v=g.start,y=(p=v,v+g.count);p<y;p+=3)void 0!==n?f(n[p],n[p+1],n[p+2],g.materialIndex):f(p,p+1,p+2,g.materialIndex);else if(void 0!==n)for(d=0;d<n.length;d+=3)f(n[d],n[d+1],n[d+2]);else for(d=0;d<i.length/3;d+=3)f(d,d+1,d+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){var e=new Ht;return function(){return this.computeBoundingBox(),this.boundingBox.getCenter(e).negate(),this.translate(e.x,e.y,e.z),this}}(),normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,n=0===t?1:1/t,r=new Gt;return r.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix(r),this},computeFaceNormals:function(){for(var e=new Ht,t=new Ht,n=0,r=this.faces.length;n<r;n++){var i=this.faces[n],a=this.vertices[i.a],o=this.vertices[i.b],s=this.vertices[i.c];e.subVectors(s,o),t.subVectors(a,o),e.cross(t),e.normalize(),i.normal.copy(e)}},computeVertexNormals:function(e){var t,n,r,i,a,o;for(void 0===e&&(e=!0),o=new Array(this.vertices.length),t=0,n=this.vertices.length;t<n;t++)o[t]=new Ht;if(e){var s,c,u,l=new Ht,h=new Ht;for(r=0,i=this.faces.length;r<i;r++)a=this.faces[r],s=this.vertices[a.a],c=this.vertices[a.b],u=this.vertices[a.c],l.subVectors(u,c),h.subVectors(s,c),l.cross(h),o[a.a].add(l),o[a.b].add(l),o[a.c].add(l)}else for(this.computeFaceNormals(),r=0,i=this.faces.length;r<i;r++)o[(a=this.faces[r]).a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal);for(t=0,n=this.vertices.length;t<n;t++)o[t].normalize();for(r=0,i=this.faces.length;r<i;r++){var d=(a=this.faces[r]).vertexNormals;3===d.length?(d[0].copy(o[a.a]),d[1].copy(o[a.b]),d[2].copy(o[a.c])):(d[0]=o[a.a].clone(),d[1]=o[a.b].clone(),d[2]=o[a.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var e,t,n;for(this.computeFaceNormals(),e=0,t=this.faces.length;e<t;e++){var r=(n=this.faces[e]).vertexNormals;3===r.length?(r[0].copy(n.normal),r[1].copy(n.normal),r[2].copy(n.normal)):(r[0]=n.normal.clone(),r[1]=n.normal.clone(),r[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var e,t,n,r,i;for(n=0,r=this.faces.length;n<r;n++)for((i=this.faces[n]).__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),e=0,t=i.vertexNormals.length;e<t;e++)i.__originalVertexNormals[e]?i.__originalVertexNormals[e].copy(i.vertexNormals[e]):i.__originalVertexNormals[e]=i.vertexNormals[e].clone();var a=new vn;for(a.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var o=this.morphNormals[e].faceNormals,s=this.morphNormals[e].vertexNormals;for(n=0,r=this.faces.length;n<r;n++)c=new Ht,u={a:new Ht,b:new Ht,c:new Ht},o.push(c),s.push(u)}var c,u,l=this.morphNormals[e];for(a.vertices=this.morphTargets[e].vertices,a.computeFaceNormals(),a.computeVertexNormals(),n=0,r=this.faces.length;n<r;n++)i=this.faces[n],c=l.faceNormals[n],u=l.vertexNormals[n],c.copy(i.normal),u.a.copy(i.vertexNormals[0]),u.b.copy(i.vertexNormals[1]),u.c.copy(i.vertexNormals[2])}for(n=0,r=this.faces.length;n<r;n++)(i=this.faces[n]).normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Jt),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Kt),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n){if(e&&e.isGeometry){var r,i=this.vertices.length,a=this.vertices,o=e.vertices,s=this.faces,c=e.faces,u=this.faceVertexUvs[0],l=e.faceVertexUvs[0],h=this.colors,d=e.colors;void 0===n&&(n=0),void 0!==t&&(r=(new kt).getNormalMatrix(t));for(var p=0,f=o.length;p<f;p++){var m=o[p].clone();void 0!==t&&m.applyMatrix4(t),a.push(m)}for(p=0,f=d.length;p<f;p++)h.push(d[p].clone());for(p=0,f=c.length;p<f;p++){var g,v,y,x=c[p],b=x.vertexNormals,w=x.vertexColors;(g=new mn(x.a+i,x.b+i,x.c+i)).normal.copy(x.normal),void 0!==r&&g.normal.applyMatrix3(r).normalize();for(var _=0,M=b.length;_<M;_++)v=b[_].clone(),void 0!==r&&v.applyMatrix3(r).normalize(),g.vertexNormals.push(v);g.color.copy(x.color);for(_=0,M=w.length;_<M;_++)y=w[_],g.vertexColors.push(y.clone());g.materialIndex=x.materialIndex+n,s.push(g)}for(p=0,f=l.length;p<f;p++){var E=l[p],T=[];if(void 0!==E){for(_=0,M=E.length;_<M;_++)T.push(E[_].clone());u.push(T)}}}else console.error(\"THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.\",e)},mergeMesh:function(e){e&&e.isMesh?(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)):console.error(\"THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.\",e)},mergeVertices:function(){var e,t,n,r,i,a,o,s,c={},u=[],l=[],h=Math.pow(10,4);for(n=0,r=this.vertices.length;n<r;n++)e=this.vertices[n],void 0===c[t=Math.round(e.x*h)+\"_\"+Math.round(e.y*h)+\"_\"+Math.round(e.z*h)]?(c[t]=n,u.push(this.vertices[n]),l[n]=u.length-1):l[n]=l[c[t]];var d=[];for(n=0,r=this.faces.length;n<r;n++){(i=this.faces[n]).a=l[i.a],i.b=l[i.b],i.c=l[i.c],a=[i.a,i.b,i.c];for(var p=0;p<3;p++)if(a[p]===a[(p+1)%3]){d.push(n);break}}for(n=d.length-1;n>=0;n--){var f=d[n];for(this.faces.splice(f,1),o=0,s=this.faceVertexUvs.length;o<s;o++)this.faceVertexUvs[o].splice(f,1)}var m=this.vertices.length-u.length;return this.vertices=u,m},setFromPoints:function(e){this.vertices=[];for(var t=0,n=e.length;t<n;t++){var r=e[t];this.vertices.push(new Ht(r.x,r.y,r.z||0))}return this},sortFacesByMaterialIndex:function(){for(var e=this.faces,t=e.length,n=0;n<t;n++)e[n]._id=n;e.sort(function(e,t){return e.materialIndex-t.materialIndex});var r,i,a=this.faceVertexUvs[0],o=this.faceVertexUvs[1];a&&a.length===t&&(r=[]),o&&o.length===t&&(i=[]);for(n=0;n<t;n++){var s=e[n]._id;r&&r.push(a[s]),i&&i.push(o[s])}r&&(this.faceVertexUvs[0]=r),i&&(this.faceVertexUvs[1]=i)},toJSON:function(){var e={metadata:{version:4.5,type:\"Geometry\",generator:\"Geometry.toJSON\"}};if(e.uuid=this.uuid,e.type=this.type,\"\"!==this.name&&(e.name=this.name),void 0!==this.parameters){var t=this.parameters;for(var n in t)void 0!==t[n]&&(e[n]=t[n]);return e}for(var r=[],i=0;i<this.vertices.length;i++){var a=this.vertices[i];r.push(a.x,a.y,a.z)}var o=[],s=[],c={},u=[],l={},h=[],d={};for(i=0;i<this.faces.length;i++){var p=this.faces[i],f=void 0!==this.faceVertexUvs[0][i],m=p.normal.length()>0,g=p.vertexNormals.length>0,v=1!==p.color.r||1!==p.color.g||1!==p.color.b,y=p.vertexColors.length>0,x=0;if(x=M(x=M(x=M(x=M(x=M(x=M(x=M(x=M(x,0,0),1,!0),2,!1),3,f),4,m),5,g),6,v),7,y),o.push(x),o.push(p.a,p.b,p.c),o.push(p.materialIndex),f){var b=this.faceVertexUvs[0][i];o.push(S(b[0]),S(b[1]),S(b[2]))}if(m&&o.push(E(p.normal)),g){var w=p.vertexNormals;o.push(E(w[0]),E(w[1]),E(w[2]))}if(v&&o.push(T(p.color)),y){var _=p.vertexColors;o.push(T(_[0]),T(_[1]),T(_[2]))}}function M(e,t,n){return n?e|1<<t:e&~(1<<t)}function E(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==c[t]?c[t]:(c[t]=s.length/3,s.push(e.x,e.y,e.z),c[t])}function T(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==l[t]?l[t]:(l[t]=u.length,u.push(e.getHex()),l[t])}function S(e){var t=e.x.toString()+e.y.toString();return void 0!==d[t]?d[t]:(d[t]=h.length/2,h.push(e.x,e.y),d[t])}return e.data={},e.data.vertices=r,e.data.normals=s,u.length>0&&(e.data.colors=u),h.length>0&&(e.data.uvs=[h]),e.data.faces=o,e},clone:function(){return(new vn).copy(this)},copy:function(e){var t,n,r,i,a,o;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var s=e.vertices;for(t=0,n=s.length;t<n;t++)this.vertices.push(s[t].clone());var c=e.colors;for(t=0,n=c.length;t<n;t++)this.colors.push(c[t].clone());var u=e.faces;for(t=0,n=u.length;t<n;t++)this.faces.push(u[t].clone());for(t=0,n=e.faceVertexUvs.length;t<n;t++){var l=e.faceVertexUvs[t];for(void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]),r=0,i=l.length;r<i;r++){var h=l[r],d=[];for(a=0,o=h.length;a<o;a++){var p=h[a];d.push(p.clone())}this.faceVertexUvs[t].push(d)}}var f=e.morphTargets;for(t=0,n=f.length;t<n;t++){var m={};if(m.name=f[t].name,void 0!==f[t].vertices)for(m.vertices=[],r=0,i=f[t].vertices.length;r<i;r++)m.vertices.push(f[t].vertices[r].clone());if(void 0!==f[t].normals)for(m.normals=[],r=0,i=f[t].normals.length;r<i;r++)m.normals.push(f[t].normals[r].clone());this.morphTargets.push(m)}var g=e.morphNormals;for(t=0,n=g.length;t<n;t++){var v={};if(void 0!==g[t].vertexNormals)for(v.vertexNormals=[],r=0,i=g[t].vertexNormals.length;r<i;r++){var y=g[t].vertexNormals[r],x={};x.a=y.a.clone(),x.b=y.b.clone(),x.c=y.c.clone(),v.vertexNormals.push(x)}if(void 0!==g[t].faceNormals)for(v.faceNormals=[],r=0,i=g[t].faceNormals.length;r<i;r++)v.faceNormals.push(g[t].faceNormals[r].clone());this.morphNormals.push(v)}var b=e.skinWeights;for(t=0,n=b.length;t<n;t++)this.skinWeights.push(b[t].clone());var w=e.skinIndices;for(t=0,n=w.length;t<n;t++)this.skinIndices.push(w[t].clone());var _=e.lineDistances;for(t=0,n=_.length;t<n;t++)this.lineDistances.push(_[t]);var M=e.boundingBox;null!==M&&(this.boundingBox=M.clone());var E=e.boundingSphere;return null!==E&&(this.boundingSphere=E.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}}),Object.defineProperty(yn.prototype,\"needsUpdate\",{set:function(e){!0===e&&this.version++}}),Object.assign(yn.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setArray:function(e){if(Array.isArray(e))throw new TypeError(\"THREE.BufferAttribute: array should be a Typed Array.\");return this.count=void 0!==e?e.length/this.itemSize:0,this.array=e,this},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.dynamic=e.dynamic,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(var r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[n+r];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];void 0===a&&(console.warn(\"THREE.BufferAttribute.copyColorsArray(): color is undefined\",r),a=new rn),t[n++]=a.r,t[n++]=a.g,t[n++]=a.b}return this},copyVector2sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];void 0===a&&(console.warn(\"THREE.BufferAttribute.copyVector2sArray(): vector is undefined\",r),a=new Ft),t[n++]=a.x,t[n++]=a.y}return this},copyVector3sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];void 0===a&&(console.warn(\"THREE.BufferAttribute.copyVector3sArray(): vector is undefined\",r),a=new Ht),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z}return this},copyVector4sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];void 0===a&&(console.warn(\"THREE.BufferAttribute.copyVector4sArray(): vector is undefined\",r),a=new Xt),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z,t[n++]=a.w}return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}}),xn.prototype=Object.create(yn.prototype),xn.prototype.constructor=xn,bn.prototype=Object.create(yn.prototype),bn.prototype.constructor=bn,wn.prototype=Object.create(yn.prototype),wn.prototype.constructor=wn,_n.prototype=Object.create(yn.prototype),_n.prototype.constructor=_n,Mn.prototype=Object.create(yn.prototype),Mn.prototype.constructor=Mn,En.prototype=Object.create(yn.prototype),En.prototype.constructor=En,Tn.prototype=Object.create(yn.prototype),Tn.prototype.constructor=Tn,Sn.prototype=Object.create(yn.prototype),Sn.prototype.constructor=Sn,An.prototype=Object.create(yn.prototype),An.prototype.constructor=An,Object.assign(Ln.prototype,{computeGroups:function(e){for(var t,n=[],r=void 0,i=e.faces,a=0;a<i.length;a++){var o=i[a];o.materialIndex!==r&&(r=o.materialIndex,void 0!==t&&(t.count=3*a-t.start,n.push(t)),t={start:3*a,materialIndex:r})}void 0!==t&&(t.count=3*a-t.start,n.push(t)),this.groups=n},fromGeometry:function(e){var t,n=e.faces,r=e.vertices,i=e.faceVertexUvs,a=i[0]&&i[0].length>0,o=i[1]&&i[1].length>0,s=e.morphTargets,c=s.length;if(c>0){t=[];for(var u=0;u<c;u++)t[u]=[];this.morphTargets.position=t}var l,h=e.morphNormals,d=h.length;if(d>0){l=[];for(u=0;u<d;u++)l[u]=[];this.morphTargets.normal=l}var p=e.skinIndices,f=e.skinWeights,m=p.length===r.length,g=f.length===r.length;r.length>0&&0===n.length&&console.error(\"THREE.DirectGeometry: Faceless geometries are not supported.\");for(u=0;u<n.length;u++){var v=n[u];this.vertices.push(r[v.a],r[v.b],r[v.c]);var y=v.vertexNormals;if(3===y.length)this.normals.push(y[0],y[1],y[2]);else{var x=v.normal;this.normals.push(x,x,x)}var b,w=v.vertexColors;if(3===w.length)this.colors.push(w[0],w[1],w[2]);else{var _=v.color;this.colors.push(_,_,_)}if(!0===a)void 0!==(b=i[0][u])?this.uvs.push(b[0],b[1],b[2]):(console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv \",u),this.uvs.push(new Ft,new Ft,new Ft));if(!0===o)void 0!==(b=i[1][u])?this.uvs2.push(b[0],b[1],b[2]):(console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 \",u),this.uvs2.push(new Ft,new Ft,new Ft));for(var M=0;M<c;M++){var E=s[M].vertices;t[M].push(E[v.a],E[v.b],E[v.c])}for(M=0;M<d;M++){var T=h[M].vertexNormals[u];l[M].push(T.a,T.b,T.c)}m&&this.skinIndices.push(p[v.a],p[v.b],p[v.c]),g&&this.skinWeights.push(f[v.a],f[v.b],f[v.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this}});var Cn=1;function Pn(){Object.defineProperty(this,\"id\",{value:Cn+=2}),this.uuid=Bt.generateUUID(),this.name=\"\",this.type=\"BufferGeometry\",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}function On(e,t,n,r,i,a){vn.call(this),this.type=\"BoxGeometry\",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:a},this.fromBufferGeometry(new Nn(e,t,n,r,i,a)),this.mergeVertices()}function Nn(e,t,n,r,i,a){Pn.call(this),this.type=\"BoxBufferGeometry\",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:a};var o=this;e=e||1,t=t||1,n=n||1,r=Math.floor(r)||1,i=Math.floor(i)||1;var s=[],c=[],u=[],l=[],h=0,d=0;function p(e,t,n,r,i,a,p,f,m,g,v){var y,x,b=a/m,w=p/g,_=a/2,M=p/2,E=f/2,T=m+1,S=g+1,A=0,L=0,R=new Ht;for(x=0;x<S;x++){var C=x*w-M;for(y=0;y<T;y++){var P=y*b-_;R[e]=P*r,R[t]=C*i,R[n]=E,c.push(R.x,R.y,R.z),R[e]=0,R[t]=0,R[n]=f>0?1:-1,u.push(R.x,R.y,R.z),l.push(y/m),l.push(1-x/g),A+=1}}for(x=0;x<g;x++)for(y=0;y<m;y++){var O=h+y+T*x,N=h+y+T*(x+1),I=h+(y+1)+T*(x+1),D=h+(y+1)+T*x;s.push(O,N,D),s.push(N,I,D),L+=6}o.addGroup(d,L,v),d+=L,h+=A}p(\"z\",\"y\",\"x\",-1,-1,n,t,e,a=Math.floor(a)||1,i,0),p(\"z\",\"y\",\"x\",1,-1,n,t,-e,a,i,1),p(\"x\",\"z\",\"y\",1,1,e,n,t,r,a,2),p(\"x\",\"z\",\"y\",1,-1,e,n,-t,r,a,3),p(\"x\",\"y\",\"z\",1,-1,e,t,n,r,i,4),p(\"x\",\"y\",\"z\",-1,-1,e,t,-n,r,i,5),this.setIndex(s),this.addAttribute(\"position\",new Sn(c,3)),this.addAttribute(\"normal\",new Sn(u,3)),this.addAttribute(\"uv\",new Sn(l,2))}function In(e,t,n,r){vn.call(this),this.type=\"PlaneGeometry\",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r},this.fromBufferGeometry(new Dn(e,t,n,r)),this.mergeVertices()}function Dn(e,t,n,r){Pn.call(this),this.type=\"PlaneBufferGeometry\",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};var i,a,o=(e=e||1)/2,s=(t=t||1)/2,c=Math.floor(n)||1,u=Math.floor(r)||1,l=c+1,h=u+1,d=e/c,p=t/u,f=[],m=[],g=[],v=[];for(a=0;a<h;a++){var y=a*p-s;for(i=0;i<l;i++){var x=i*d-o;m.push(x,-y,0),g.push(0,0,1),v.push(i/c),v.push(1-a/u)}}for(a=0;a<u;a++)for(i=0;i<c;i++){var b=i+l*a,w=i+l*(a+1),_=i+1+l*(a+1),M=i+1+l*a;f.push(b,w,M),f.push(w,_,M)}this.setIndex(f),this.addAttribute(\"position\",new Sn(m,3)),this.addAttribute(\"normal\",new Sn(g,3)),this.addAttribute(\"uv\",new Sn(v,2))}Pn.prototype=Object.assign(Object.create(r.prototype),{constructor:Pn,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){Array.isArray(e)?this.index=new(Rn(e)>65535?Tn:Mn)(e,1):this.index=e},addAttribute:function(e,t){return t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?\"index\"===e?(console.warn(\"THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.\"),this.setIndex(t),this):(this.attributes[e]=t,this):(console.warn(\"THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).\"),this.addAttribute(e,new yn(arguments[1],arguments[2])))},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:void 0!==n?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToBufferAttribute(t),t.needsUpdate=!0);var n=this.attributes.normal;void 0!==n&&((new kt).getNormalMatrix(e).applyToBufferAttribute(n),n.needsUpdate=!0);return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var e=new Gt;return function(t){return e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e=new Gt;return function(t){return e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e=new Gt;return function(t){return e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e=new Gt;return function(t,n,r){return e.makeTranslation(t,n,r),this.applyMatrix(e),this}}(),scale:function(){var e=new Gt;return function(t,n,r){return e.makeScale(t,n,r),this.applyMatrix(e),this}}(),lookAt:function(){var e=new dn;return function(t){e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),center:function(){var e=new Ht;return function(){return this.computeBoundingBox(),this.boundingBox.getCenter(e).negate(),this.translate(e.x,e.y,e.z),this}}(),setFromObject:function(e){var t=e.geometry;if(e.isPoints||e.isLine){var n=new Sn(3*t.vertices.length,3),r=new Sn(3*t.colors.length,3);if(this.addAttribute(\"position\",n.copyVector3sArray(t.vertices)),this.addAttribute(\"color\",r.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){var i=new Sn(t.lineDistances.length,1);this.addAttribute(\"lineDistance\",i.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function(e){for(var t=[],n=0,r=e.length;n<r;n++){var i=e[n];t.push(i.x,i.y,i.z||0)}return this.addAttribute(\"position\",new Sn(t,3)),this},updateFromObject:function(e){var t,n=e.geometry;if(e.isMesh){var r=n.__directGeometry;if(!0===n.elementsNeedUpdate&&(r=void 0,n.elementsNeedUpdate=!1),void 0===r)return this.fromGeometry(n);r.verticesNeedUpdate=n.verticesNeedUpdate,r.normalsNeedUpdate=n.normalsNeedUpdate,r.colorsNeedUpdate=n.colorsNeedUpdate,r.uvsNeedUpdate=n.uvsNeedUpdate,r.groupsNeedUpdate=n.groupsNeedUpdate,n.verticesNeedUpdate=!1,n.normalsNeedUpdate=!1,n.colorsNeedUpdate=!1,n.uvsNeedUpdate=!1,n.groupsNeedUpdate=!1,n=r}return!0===n.verticesNeedUpdate&&(void 0!==(t=this.attributes.position)&&(t.copyVector3sArray(n.vertices),t.needsUpdate=!0),n.verticesNeedUpdate=!1),!0===n.normalsNeedUpdate&&(void 0!==(t=this.attributes.normal)&&(t.copyVector3sArray(n.normals),t.needsUpdate=!0),n.normalsNeedUpdate=!1),!0===n.colorsNeedUpdate&&(void 0!==(t=this.attributes.color)&&(t.copyColorsArray(n.colors),t.needsUpdate=!0),n.colorsNeedUpdate=!1),n.uvsNeedUpdate&&(void 0!==(t=this.attributes.uv)&&(t.copyVector2sArray(n.uvs),t.needsUpdate=!0),n.uvsNeedUpdate=!1),n.lineDistancesNeedUpdate&&(void 0!==(t=this.attributes.lineDistance)&&(t.copyArray(n.lineDistances),t.needsUpdate=!0),n.lineDistancesNeedUpdate=!1),n.groupsNeedUpdate&&(n.computeGroups(e.geometry),this.groups=n.groups,n.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new Ln).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){var t=new Float32Array(3*e.vertices.length);if(this.addAttribute(\"position\",new yn(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){var n=new Float32Array(3*e.normals.length);this.addAttribute(\"normal\",new yn(n,3).copyVector3sArray(e.normals))}if(e.colors.length>0){var r=new Float32Array(3*e.colors.length);this.addAttribute(\"color\",new yn(r,3).copyColorsArray(e.colors))}if(e.uvs.length>0){var i=new Float32Array(2*e.uvs.length);this.addAttribute(\"uv\",new yn(i,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){var a=new Float32Array(2*e.uvs2.length);this.addAttribute(\"uv2\",new yn(a,2).copyVector2sArray(e.uvs2))}for(var o in this.groups=e.groups,e.morphTargets){for(var s=[],c=e.morphTargets[o],u=0,l=c.length;u<l;u++){var h=c[u],d=new Sn(3*h.length,3);s.push(d.copyVector3sArray(h))}this.morphAttributes[o]=s}if(e.skinIndices.length>0){var p=new Sn(4*e.skinIndices.length,4);this.addAttribute(\"skinIndex\",p.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){var f=new Sn(4*e.skinWeights.length,4);this.addAttribute(\"skinWeight\",f.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Jt);var e=this.attributes.position;void 0!==e?this.boundingBox.setFromBufferAttribute(e):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var e=new Jt,t=new Ht;return function(){null===this.boundingSphere&&(this.boundingSphere=new Kt);var n=this.attributes.position;if(n){var r=this.boundingSphere.center;e.setFromBufferAttribute(n),e.getCenter(r);for(var i=0,a=0,o=n.count;a<o;a++)t.x=n.getX(a),t.y=n.getY(a),t.z=n.getZ(a),i=Math.max(i,r.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.index,t=this.attributes,n=this.groups;if(t.position){var r=t.position.array;if(void 0===t.normal)this.addAttribute(\"normal\",new yn(new Float32Array(r.length),3));else for(var i=t.normal.array,a=0,o=i.length;a<o;a++)i[a]=0;var s,c,u,l=t.normal.array,h=new Ht,d=new Ht,p=new Ht,f=new Ht,m=new Ht;if(e){var g=e.array;0===n.length&&this.addGroup(0,g.length);for(var v=0,y=n.length;v<y;++v){var x=n[v],b=x.start;for(a=b,o=b+x.count;a<o;a+=3)s=3*g[a+0],c=3*g[a+1],u=3*g[a+2],h.fromArray(r,s),d.fromArray(r,c),p.fromArray(r,u),f.subVectors(p,d),m.subVectors(h,d),f.cross(m),l[s]+=f.x,l[s+1]+=f.y,l[s+2]+=f.z,l[c]+=f.x,l[c+1]+=f.y,l[c+2]+=f.z,l[u]+=f.x,l[u+1]+=f.y,l[u+2]+=f.z}}else for(a=0,o=r.length;a<o;a+=9)h.fromArray(r,a),d.fromArray(r,a+3),p.fromArray(r,a+6),f.subVectors(p,d),m.subVectors(h,d),f.cross(m),l[a]=f.x,l[a+1]=f.y,l[a+2]=f.z,l[a+3]=f.x,l[a+4]=f.y,l[a+5]=f.z,l[a+6]=f.x,l[a+7]=f.y,l[a+8]=f.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},merge:function(e,t){if(e&&e.isBufferGeometry){void 0===t&&(t=0,console.warn(\"THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.\"));var n=this.attributes;for(var r in n)if(void 0!==e.attributes[r])for(var i=n[r].array,a=e.attributes[r],o=a.array,s=0,c=a.itemSize*t;s<o.length;s++,c++)i[c]=o[s];return this}console.error(\"THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.\",e)},normalizeNormals:function(){var e=new Ht;return function(){for(var t=this.attributes.normal,n=0,r=t.count;n<r;n++)e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.normalize(),t.setXYZ(n,e.x,e.y,e.z)}}(),toNonIndexed:function(){if(null===this.index)return console.warn(\"THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.\"),this;var e=new Pn,t=this.index.array,n=this.attributes;for(var r in n){for(var i=n[r],a=i.array,o=i.itemSize,s=new a.constructor(t.length*o),c=0,u=0,l=0,h=t.length;l<h;l++){c=t[l]*o;for(var d=0;d<o;d++)s[u++]=a[c++]}e.addAttribute(r,new yn(s,o))}var p=this.groups;for(l=0,h=p.length;l<h;l++){var f=p[l];e.addGroup(f.start,f.count,f.materialIndex)}return e},toJSON:function(){var e={metadata:{version:4.5,type:\"BufferGeometry\",generator:\"BufferGeometry.toJSON\"}};if(e.uuid=this.uuid,e.type=this.type,\"\"!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){var t=this.parameters;for(var n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};var r=this.index;if(null!==r){var i=Array.prototype.slice.call(r.array);e.data.index={type:r.array.constructor.name,array:i}}var a=this.attributes;for(var n in a){var o=a[n];i=Array.prototype.slice.call(o.array);e.data.attributes[n]={itemSize:o.itemSize,type:o.array.constructor.name,array:i,normalized:o.normalized}}var s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));var c=this.boundingSphere;return null!==c&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e},clone:function(){return(new Pn).copy(this)},copy:function(e){var t,n,r;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var i=e.index;null!==i&&this.setIndex(i.clone());var a=e.attributes;for(t in a){var o=a[t];this.addAttribute(t,o.clone())}var s=e.morphAttributes;for(t in s){var c=[],u=s[t];for(n=0,r=u.length;n<r;n++)c.push(u[n].clone());this.morphAttributes[t]=c}var l=e.groups;for(n=0,r=l.length;n<r;n++){var h=l[n];this.addGroup(h.start,h.count,h.materialIndex)}var d=e.boundingBox;null!==d&&(this.boundingBox=d.clone());var p=e.boundingSphere;return null!==p&&(this.boundingSphere=p.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}}),On.prototype=Object.create(vn.prototype),On.prototype.constructor=On,Nn.prototype=Object.create(Pn.prototype),Nn.prototype.constructor=Nn,In.prototype=Object.create(vn.prototype),In.prototype.constructor=In,Dn.prototype=Object.create(Pn.prototype),Dn.prototype.constructor=Dn;var Un=0;function Bn(){Object.defineProperty(this,\"id\",{value:Un++}),this.uuid=Bt.generateUUID(),this.name=\"\",this.type=\"Material\",this.fog=!0,this.lights=!0,this.blending=E,this.side=m,this.flatShading=!1,this.vertexColors=b,this.opacity=1,this.transparent=!1,this.blendSrc=F,this.blendDst=G,this.blendEquation=R,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Y,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this.userData={},this.needsUpdate=!0}function Fn(e){Bn.call(this),this.type=\"MeshBasicMaterial\",this.color=new rn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=$,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(e)}function Gn(e){Bn.call(this),this.type=\"ShaderMaterial\",this.defines={},this.uniforms={},this.vertexShader=\"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",this.fragmentShader=\"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==e&&(void 0!==e.attributes&&console.error(\"THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.\"),this.setValues(e))}function zn(e,t){this.origin=void 0!==e?e:new Ht,this.direction=void 0!==t?t:new Ht}function Hn(e,t,n){this.a=void 0!==e?e:new Ht,this.b=void 0!==t?t:new Ht,this.c=void 0!==n?n:new Ht}function kn(e,t){dn.call(this),this.type=\"Mesh\",this.geometry=void 0!==e?e:new Pn,this.material=void 0!==t?t:new Fn({color:16777215*Math.random()}),this.drawMode=_t,this.updateMorphTargets()}function jn(e,t){return Math.abs(t[1])-Math.abs(e[1])}function Vn(e,t,n,r,i,a,o,s,c,u){e=void 0!==e?e:[],t=void 0!==t?t:ce,Wt.call(this,e,t,n,r,i,a,o,s,c,u),this.flipY=!1}Bn.prototype=Object.assign(Object.create(r.prototype),{constructor:Bn,isMaterial:!0,onBeforeCompile:function(){},setValues:function(e){if(void 0!==e)for(var t in e){var n=e[t];if(void 0!==n)if(\"shading\"!==t){var r=this[t];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=\"overdraw\"===t?Number(n):n:console.warn(\"THREE.\"+this.type+\": '\"+t+\"' is not a property of this material.\")}else console.warn(\"THREE.\"+this.type+\": .shading has been removed. Use the boolean .flatShading instead.\"),this.flatShading=n===y;else console.warn(\"THREE.Material: '\"+t+\"' parameter is undefined.\")}},toJSON:function(e){var t=void 0===e||\"string\"==typeof e;t&&(e={textures:{},images:{}});var n={metadata:{version:4.5,type:\"Material\",generator:\"Material.toJSON\"}};function r(e){var t=[];for(var n in e){var r=e[n];delete r.metadata,t.push(r)}return t}if(n.uuid=this.uuid,n.type=this.type,\"\"!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearCoat&&(n.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(n.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==E&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),this.side!==m&&(n.side=this.side),this.vertexColors!==b&&(n.vertexColors=this.vertexColors),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,0!==this.rotation&&(n.rotation=this.rotation),1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),\"round\"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),\"round\"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),\"{}\"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){var i=r(e.textures),a=r(e.images);i.length>0&&(n.textures=i),a.length>0&&(n.images=a)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.lights=e.lights,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.overdraw=e.overdraw,this.visible=e.visible,this.userData=JSON.parse(JSON.stringify(e.userData)),this.clipShadows=e.clipShadows,this.clipIntersection=e.clipIntersection;var t=e.clippingPlanes,n=null;if(null!==t){var r=t.length;n=new Array(r);for(var i=0;i!==r;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this.shadowSide=e.shadowSide,this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}}),Fn.prototype=Object.create(Bn.prototype),Fn.prototype.constructor=Fn,Fn.prototype.isMeshBasicMaterial=!0,Fn.prototype.copy=function(e){return Bn.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this},Gn.prototype=Object.create(Bn.prototype),Gn.prototype.constructor=Gn,Gn.prototype.isShaderMaterial=!0,Gn.prototype.copy=function(e){return Bn.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=tn.clone(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=e.extensions,this},Gn.prototype.toJSON=function(e){var t=Bn.prototype.toJSON.call(this,e);return t.uniforms=this.uniforms,t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t},Object.assign(zn.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return void 0===t&&(console.warn(\"THREE.Ray: .at() target is now required\"),t=new Ht),t.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(){var e=new Ht;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){void 0===t&&(console.warn(\"THREE.Ray: .closestPointToPoint() target is now required\"),t=new Ht),t.subVectors(e,this.origin);var n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(){var e=new Ht;return function(t){var n=e.subVectors(t,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(t):(e.copy(this.direction).multiplyScalar(n).add(this.origin),e.distanceToSquared(t))}}(),distanceSqToSegment:function(){var e=new Ht,t=new Ht,n=new Ht;return function(r,i,a,o){e.copy(r).add(i).multiplyScalar(.5),t.copy(i).sub(r).normalize(),n.copy(this.origin).sub(e);var s,c,u,l,h=.5*r.distanceTo(i),d=-this.direction.dot(t),p=n.dot(this.direction),f=-n.dot(t),m=n.lengthSq(),g=Math.abs(1-d*d);if(g>0)if(c=d*p-f,l=h*g,(s=d*f-p)>=0)if(c>=-l)if(c<=l){var v=1/g;u=(s*=v)*(s+d*(c*=v)+2*p)+c*(d*s+c+2*f)+m}else c=h,u=-(s=Math.max(0,-(d*c+p)))*s+c*(c+2*f)+m;else c=-h,u=-(s=Math.max(0,-(d*c+p)))*s+c*(c+2*f)+m;else c<=-l?u=-(s=Math.max(0,-(-d*h+p)))*s+(c=s>0?-h:Math.min(Math.max(-h,-f),h))*(c+2*f)+m:c<=l?(s=0,u=(c=Math.min(Math.max(-h,-f),h))*(c+2*f)+m):u=-(s=Math.max(0,-(d*h+p)))*s+(c=s>0?h:Math.min(Math.max(-h,-f),h))*(c+2*f)+m;else c=d>0?-h:h,u=-(s=Math.max(0,-(d*c+p)))*s+c*(c+2*f)+m;return a&&a.copy(this.direction).multiplyScalar(s).add(this.origin),o&&o.copy(t).multiplyScalar(c).add(e),u}}(),intersectSphere:function(){var e=new Ht;return function(t,n){e.subVectors(t.center,this.origin);var r=e.dot(this.direction),i=e.dot(e)-r*r,a=t.radius*t.radius;if(i>a)return null;var o=Math.sqrt(a-i),s=r-o,c=r+o;return s<0&&c<0?null:s<0?this.at(c,n):this.at(s,n)}}(),intersectsSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;var n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null},intersectPlane:function(e,t){var n=this.distanceToPlane(e);return null===n?null:this.at(n,t)},intersectsPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0},intersectBox:function(e,t){var n,r,i,a,o,s,c=1/this.direction.x,u=1/this.direction.y,l=1/this.direction.z,h=this.origin;return c>=0?(n=(e.min.x-h.x)*c,r=(e.max.x-h.x)*c):(n=(e.max.x-h.x)*c,r=(e.min.x-h.x)*c),u>=0?(i=(e.min.y-h.y)*u,a=(e.max.y-h.y)*u):(i=(e.max.y-h.y)*u,a=(e.min.y-h.y)*u),n>a||i>r?null:((i>n||n!=n)&&(n=i),(a<r||r!=r)&&(r=a),l>=0?(o=(e.min.z-h.z)*l,s=(e.max.z-h.z)*l):(o=(e.max.z-h.z)*l,s=(e.min.z-h.z)*l),n>s||o>r?null:((o>n||n!=n)&&(n=o),(s<r||r!=r)&&(r=s),r<0?null:this.at(n>=0?n:r,t)))},intersectsBox:function(){var e=new Ht;return function(t){return null!==this.intersectBox(t,e)}}(),intersectTriangle:function(){var e=new Ht,t=new Ht,n=new Ht,r=new Ht;return function(i,a,o,s,c){t.subVectors(a,i),n.subVectors(o,i),r.crossVectors(t,n);var u,l=this.direction.dot(r);if(l>0){if(s)return null;u=1}else{if(!(l<0))return null;u=-1,l=-l}e.subVectors(this.origin,i);var h=u*this.direction.dot(n.crossVectors(e,n));if(h<0)return null;var d=u*this.direction.dot(t.cross(e));if(d<0)return null;if(h+d>l)return null;var p=-u*e.dot(r);return p<0?null:this.at(p/l,c)}}(),applyMatrix4:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}),Object.assign(Hn,{getNormal:function(){var e=new Ht;return function(t,n,r,i){void 0===i&&(console.warn(\"THREE.Triangle: .getNormal() target is now required\"),i=new Ht),i.subVectors(r,n),e.subVectors(t,n),i.cross(e);var a=i.lengthSq();return a>0?i.multiplyScalar(1/Math.sqrt(a)):i.set(0,0,0)}}(),getBarycoord:function(){var e=new Ht,t=new Ht,n=new Ht;return function(r,i,a,o,s){e.subVectors(o,i),t.subVectors(a,i),n.subVectors(r,i);var c=e.dot(e),u=e.dot(t),l=e.dot(n),h=t.dot(t),d=t.dot(n),p=c*h-u*u;if(void 0===s&&(console.warn(\"THREE.Triangle: .getBarycoord() target is now required\"),s=new Ht),0===p)return s.set(-2,-1,-1);var f=1/p,m=(h*l-u*d)*f,g=(c*d-u*l)*f;return s.set(1-m-g,g,m)}}(),containsPoint:function(){var e=new Ht;return function(t,n,r,i){return Hn.getBarycoord(t,n,r,i,e),e.x>=0&&e.y>=0&&e.x+e.y<=1}}()}),Object.assign(Hn.prototype,{set:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this},setFromPointsAndIndices:function(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},getArea:function(){var e=new Ht,t=new Ht;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),getMidpoint:function(e){return void 0===e&&(console.warn(\"THREE.Triangle: .getMidpoint() target is now required\"),e=new Ht),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(e){return Hn.getNormal(this.a,this.b,this.c,e)},getPlane:function(e){return void 0===e&&(console.warn(\"THREE.Triangle: .getPlane() target is now required\"),e=new Ht),e.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(e,t){return Hn.getBarycoord(e,this.a,this.b,this.c,t)},containsPoint:function(e){return Hn.containsPoint(e,this.a,this.b,this.c)},intersectsBox:function(e){return e.intersectsTriangle(this)},closestPointToPoint:function(){var e=new Ht,t=new Ht,n=new Ht,r=new Ht,i=new Ht,a=new Ht;return function(o,s){void 0===s&&(console.warn(\"THREE.Triangle: .closestPointToPoint() target is now required\"),s=new Ht);var c,u,l=this.a,h=this.b,d=this.c;e.subVectors(h,l),t.subVectors(d,l),r.subVectors(o,l);var p=e.dot(r),f=t.dot(r);if(p<=0&&f<=0)return s.copy(l);i.subVectors(o,h);var m=e.dot(i),g=t.dot(i);if(m>=0&&g<=m)return s.copy(h);var v=p*g-m*f;if(v<=0&&p>=0&&m<=0)return c=p/(p-m),s.copy(l).addScaledVector(e,c);a.subVectors(o,d);var y=e.dot(a),x=t.dot(a);if(x>=0&&y<=x)return s.copy(d);var b=y*f-p*x;if(b<=0&&f>=0&&x<=0)return u=f/(f-x),s.copy(l).addScaledVector(t,u);var w=m*x-y*g;if(w<=0&&g-m>=0&&y-x>=0)return n.subVectors(d,h),u=(g-m)/(g-m+(y-x)),s.copy(h).addScaledVector(n,u);var _=1/(w+b+v);return c=b*_,u=v*_,s.copy(l).addScaledVector(e,c).addScaledVector(t,u)}}(),equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}),kn.prototype=Object.assign(Object.create(dn.prototype),{constructor:kn,isMesh:!0,setDrawMode:function(e){this.drawMode=e},copy:function(e){return dn.prototype.copy.call(this,e),this.drawMode=e.drawMode,void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this},updateMorphTargets:function(){var e,t,n,r=this.geometry;if(r.isBufferGeometry){var i=r.morphAttributes,a=Object.keys(i);if(a.length>0){var o=i[a[0]];if(void 0!==o)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},e=0,t=o.length;e<t;e++)n=o[e].name||String(e),this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}else{var s=r.morphTargets;if(void 0!==s&&s.length>0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},e=0,t=s.length;e<t;e++)n=s[e].name||String(e),this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}},raycast:function(){var e=new Gt,t=new zn,n=new Kt,r=new Ht,i=new Ht,a=new Ht,o=new Ht,s=new Ht,c=new Ht,u=new Ft,l=new Ft,h=new Ft,d=new Ht,p=new Ht,f=new Ht;function m(e,t,n,r,i,a,o){return Hn.getBarycoord(e,t,n,r,d),i.multiplyScalar(d.x),a.multiplyScalar(d.y),o.multiplyScalar(d.z),i.add(a).add(o),i.clone()}function y(e,t,n,r,i,a,o,s){if(null===(t.side===g?r.intersectTriangle(o,a,i,!0,s):r.intersectTriangle(i,a,o,t.side!==v,s)))return null;f.copy(s),f.applyMatrix4(e.matrixWorld);var c=n.ray.origin.distanceTo(f);return c<n.near||c>n.far?null:{distance:c,point:f.clone(),object:e}}function x(e,t,n,o,s,c,d,f,g){r.fromBufferAttribute(s,d),i.fromBufferAttribute(s,f),a.fromBufferAttribute(s,g);var v=y(e,t,n,o,r,i,a,p);if(v){c&&(u.fromBufferAttribute(c,d),l.fromBufferAttribute(c,f),h.fromBufferAttribute(c,g),v.uv=m(p,r,i,a,u,l,h));var x=new mn(d,f,g);Hn.getNormal(r,i,a,x.normal),v.face=x}return v}return function(d,f){var g,v=this.geometry,b=this.material,w=this.matrixWorld;if(void 0!==b&&(null===v.boundingSphere&&v.computeBoundingSphere(),n.copy(v.boundingSphere),n.applyMatrix4(w),!1!==d.ray.intersectsSphere(n)&&(e.getInverse(w),t.copy(d.ray).applyMatrix4(e),null===v.boundingBox||!1!==t.intersectsBox(v.boundingBox))))if(v.isBufferGeometry){var _,M,E,T,S,A,L,R,C,P=v.index,O=v.attributes.position,N=v.attributes.uv,I=v.groups,D=v.drawRange;if(null!==P)if(Array.isArray(b))for(T=0,A=I.length;T<A;T++)for(C=b[(R=I[T]).materialIndex],S=Math.max(R.start,D.start),L=Math.min(R.start+R.count,D.start+D.count);S<L;S+=3)_=P.getX(S),M=P.getX(S+1),E=P.getX(S+2),(g=x(this,C,d,t,O,N,_,M,E))&&(g.faceIndex=Math.floor(S/3),f.push(g));else for(T=Math.max(0,D.start),A=Math.min(P.count,D.start+D.count);T<A;T+=3)_=P.getX(T),M=P.getX(T+1),E=P.getX(T+2),(g=x(this,b,d,t,O,N,_,M,E))&&(g.faceIndex=Math.floor(T/3),f.push(g));else if(void 0!==O)if(Array.isArray(b))for(T=0,A=I.length;T<A;T++)for(C=b[(R=I[T]).materialIndex],S=Math.max(R.start,D.start),L=Math.min(R.start+R.count,D.start+D.count);S<L;S+=3)(g=x(this,C,d,t,O,N,_=S,M=S+1,E=S+2))&&(g.faceIndex=Math.floor(S/3),f.push(g));else for(T=Math.max(0,D.start),A=Math.min(O.count,D.start+D.count);T<A;T+=3)(g=x(this,b,d,t,O,N,_=T,M=T+1,E=T+2))&&(g.faceIndex=Math.floor(T/3),f.push(g))}else if(v.isGeometry){var U,B,F,G,z=Array.isArray(b),H=v.vertices,k=v.faces,j=v.faceVertexUvs[0];j.length>0&&(G=j);for(var V=0,W=k.length;V<W;V++){var X=k[V],q=z?b[X.materialIndex]:b;if(void 0!==q){if(U=H[X.a],B=H[X.b],F=H[X.c],!0===q.morphTargets){var Y=v.morphTargets,Z=this.morphTargetInfluences;r.set(0,0,0),i.set(0,0,0),a.set(0,0,0);for(var J=0,K=Y.length;J<K;J++){var Q=Z[J];if(0!==Q){var $=Y[J].vertices;r.addScaledVector(o.subVectors($[X.a],U),Q),i.addScaledVector(s.subVectors($[X.b],B),Q),a.addScaledVector(c.subVectors($[X.c],F),Q)}}r.add(U),i.add(B),a.add(F),U=r,B=i,F=a}if(g=y(this,q,d,t,U,B,F,p)){if(G&&G[V]){var ee=G[V];u.copy(ee[0]),l.copy(ee[1]),h.copy(ee[2]),g.uv=m(p,U,B,F,u,l,h)}g.face=X,g.faceIndex=V,f.push(g)}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Vn.prototype=Object.create(Wt.prototype),Vn.prototype.constructor=Vn,Vn.prototype.isCubeTexture=!0,Object.defineProperty(Vn.prototype,\"images\",{get:function(){return this.image},set:function(e){this.image=e}});var Wn=new Wt,Xn=new Vn;function qn(){this.seq=[],this.map={}}var Yn=[],Zn=[],Jn=new Float32Array(16),Kn=new Float32Array(9),Qn=new Float32Array(4);function $n(e,t,n){var r=e[0];if(r<=0||r>0)return e;var i=t*n,a=Yn[i];if(void 0===a&&(a=new Float32Array(i),Yn[i]=a),0!==t){r.toArray(a,0);for(var o=1,s=0;o!==t;++o)s+=n,e[o].toArray(a,s)}return a}function er(e,t){if(e.length!==t.length)return!1;for(var n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0}function tr(e,t){for(var n=0,r=t.length;n<r;n++)e[n]=t[n]}function nr(e,t){var n=Zn[t];void 0===n&&(n=new Int32Array(t),Zn[t]=n);for(var r=0;r!==t;++r)n[r]=e.allocTextureUnit();return n}function rr(e,t){var n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function ir(e,t){var n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function ar(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(er(n,t))return;e.uniform2fv(this.addr,t),tr(n,t)}}function or(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(er(n,t))return;e.uniform3fv(this.addr,t),tr(n,t)}}function sr(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(er(n,t))return;e.uniform4fv(this.addr,t),tr(n,t)}}function cr(e,t){var n=this.cache,r=t.elements;if(void 0===r){if(er(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),tr(n,t)}else{if(er(n,r))return;Qn.set(r),e.uniformMatrix2fv(this.addr,!1,Qn),tr(n,r)}}function ur(e,t){var n=this.cache,r=t.elements;if(void 0===r){if(er(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),tr(n,t)}else{if(er(n,r))return;Kn.set(r),e.uniformMatrix3fv(this.addr,!1,Kn),tr(n,r)}}function lr(e,t){var n=this.cache,r=t.elements;if(void 0===r){if(er(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),tr(n,t)}else{if(er(n,r))return;Jn.set(r),e.uniformMatrix4fv(this.addr,!1,Jn),tr(n,r)}}function hr(e,t,n){var r=this.cache,i=n.allocTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2D(t||Wn,i)}function dr(e,t,n){var r=this.cache,i=n.allocTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTextureCube(t||Xn,i)}function pr(e,t){var n=this.cache;er(n,t)||(e.uniform2iv(this.addr,t),tr(n,t))}function fr(e,t){var n=this.cache;er(n,t)||(e.uniform3iv(this.addr,t),tr(n,t))}function mr(e,t){var n=this.cache;er(n,t)||(e.uniform4iv(this.addr,t),tr(n,t))}function gr(e,t){var n=this.cache;er(n,t)||(e.uniform1fv(this.addr,t),tr(n,t))}function vr(e,t){var n=this.cache;er(n,t)||(e.uniform1iv(this.addr,t),tr(n,t))}function yr(e,t){var n=this.cache,r=$n(t,this.size,2);er(n,r)||(e.uniform2fv(this.addr,r),this.updateCache(r))}function xr(e,t){var n=this.cache,r=$n(t,this.size,3);er(n,r)||(e.uniform3fv(this.addr,r),this.updateCache(r))}function br(e,t){var n=this.cache,r=$n(t,this.size,4);er(n,r)||(e.uniform4fv(this.addr,r),this.updateCache(r))}function wr(e,t){var n=this.cache,r=$n(t,this.size,4);er(n,r)||(e.uniformMatrix2fv(this.addr,!1,r),this.updateCache(r))}function _r(e,t){var n=this.cache,r=$n(t,this.size,9);er(n,r)||(e.uniformMatrix3fv(this.addr,!1,r),this.updateCache(r))}function Mr(e,t){var n=this.cache,r=$n(t,this.size,16);er(n,r)||(e.uniformMatrix4fv(this.addr,!1,r),this.updateCache(r))}function Er(e,t,n){var r=this.cache,i=t.length,a=nr(n,i);!1===er(r,a)&&(e.uniform1iv(this.addr,a),tr(r,a));for(var o=0;o!==i;++o)n.setTexture2D(t[o]||Wn,a[o])}function Tr(e,t,n){var r=this.cache,i=t.length,a=nr(n,i);!1===er(r,a)&&(e.uniform1iv(this.addr,a),tr(r,a));for(var o=0;o!==i;++o)n.setTextureCube(t[o]||Xn,a[o])}function Sr(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return rr;case 35664:return ar;case 35665:return or;case 35666:return sr;case 35674:return cr;case 35675:return ur;case 35676:return lr;case 35678:case 36198:return hr;case 35680:return dr;case 5124:case 35670:return ir;case 35667:case 35671:return pr;case 35668:case 35672:return fr;case 35669:case 35673:return mr}}(t.type)}function Ar(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return gr;case 35664:return yr;case 35665:return xr;case 35666:return br;case 35674:return wr;case 35675:return _r;case 35676:return Mr;case 35678:return Er;case 35680:return Tr;case 5124:case 35670:return vr;case 35667:case 35671:return pr;case 35668:case 35672:return fr;case 35669:case 35673:return mr}}(t.type)}function Lr(e){this.id=e,qn.call(this)}Ar.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),tr(t,e)},Lr.prototype.setValue=function(e,t,n){for(var r=this.seq,i=0,a=r.length;i!==a;++i){var o=r[i];o.setValue(e,t[o.id],n)}};var Rr=/([\\w\\d_]+)(\\])?(\\[|\\.)?/g;function Cr(e,t){e.seq.push(t),e.map[t.id]=t}function Pr(e,t,n){var r=e.name,i=r.length;for(Rr.lastIndex=0;;){var a=Rr.exec(r),o=Rr.lastIndex,s=a[1],c=\"]\"===a[2],u=a[3];if(c&&(s|=0),void 0===u||\"[\"===u&&o+2===i){Cr(n,void 0===u?new Sr(s,e,t):new Ar(s,e,t));break}var l=n.map[s];void 0===l&&Cr(n,l=new Lr(s)),n=l}}function Or(e,t,n){qn.call(this),this.renderer=n;for(var r=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),i=0;i<r;++i){var a=e.getActiveUniform(t,i);Pr(a,e.getUniformLocation(t,a.name),this)}}function Nr(e,t,n){var r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),!1===e.getShaderParameter(r,e.COMPILE_STATUS)&&console.error(\"THREE.WebGLShader: Shader couldn't compile.\"),\"\"!==e.getShaderInfoLog(r)&&console.warn(\"THREE.WebGLShader: gl.getShaderInfoLog()\",t===e.VERTEX_SHADER?\"vertex\":\"fragment\",e.getShaderInfoLog(r),function(e){for(var t=e.split(\"\\n\"),n=0;n<t.length;n++)t[n]=n+1+\": \"+t[n];return t.join(\"\\n\")}(n)),r}Or.prototype.setValue=function(e,t,n){var r=this.map[t];void 0!==r&&r.setValue(e,n,this.renderer)},Or.prototype.setOptional=function(e,t,n){var r=t[n];void 0!==r&&this.setValue(e,n,r)},Or.upload=function(e,t,n,r){for(var i=0,a=t.length;i!==a;++i){var o=t[i],s=n[o.id];!1!==s.needsUpdate&&o.setValue(e,s.value,r)}},Or.seqWithValue=function(e,t){for(var n=[],r=0,i=e.length;r!==i;++r){var a=e[r];a.id in t&&n.push(a)}return n};var Ir=0;function Dr(e){switch(e){case Tt:return[\"Linear\",\"( value )\"];case St:return[\"sRGB\",\"( value )\"];case Lt:return[\"RGBE\",\"( value )\"];case Ct:return[\"RGBM\",\"( value, 7.0 )\"];case Pt:return[\"RGBM\",\"( value, 16.0 )\"];case Ot:return[\"RGBD\",\"( value, 256.0 )\"];case At:return[\"Gamma\",\"( value, float( GAMMA_FACTOR ) )\"];default:throw new Error(\"unsupported encoding: \"+e)}}function Ur(e,t){var n=Dr(t);return\"vec4 \"+e+\"( vec4 value ) { return \"+n[0]+\"ToLinear\"+n[1]+\"; }\"}function Br(e){return\"\"!==e}function Fr(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights)}function Gr(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}function zr(e){return e.replace(/^[ \\t]*#include +<([\\w\\d./]+)>/gm,function(e,t){var n=en[t];if(void 0===n)throw new Error(\"Can not resolve #include <\"+t+\">\");return zr(n)})}function Hr(e){return e.replace(/#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g,function(e,t,n,r){for(var i=\"\",a=parseInt(t);a<parseInt(n);a++)i+=r.replace(/\\[ i \\]/g,\"[ \"+a+\" ]\");return i})}function kr(e,t,n,r,i,a,o){var s=e.context,c=r.defines,u=i.vertexShader,l=i.fragmentShader,h=\"SHADOWMAP_TYPE_BASIC\";a.shadowMapType===p?h=\"SHADOWMAP_TYPE_PCF\":a.shadowMapType===f&&(h=\"SHADOWMAP_TYPE_PCF_SOFT\");var d=\"ENVMAP_TYPE_CUBE\",m=\"ENVMAP_MODE_REFLECTION\",g=\"ENVMAP_BLENDING_MULTIPLY\";if(a.envMap){switch(r.envMap.mapping){case ce:case ue:d=\"ENVMAP_TYPE_CUBE\";break;case pe:case fe:d=\"ENVMAP_TYPE_CUBE_UV\";break;case le:case he:d=\"ENVMAP_TYPE_EQUIREC\";break;case de:d=\"ENVMAP_TYPE_SPHERE\"}switch(r.envMap.mapping){case ue:case he:m=\"ENVMAP_MODE_REFRACTION\"}switch(r.combine){case $:g=\"ENVMAP_BLENDING_MULTIPLY\";break;case ee:g=\"ENVMAP_BLENDING_MIX\";break;case te:g=\"ENVMAP_BLENDING_ADD\"}}var v,y,x=e.gammaFactor>0?e.gammaFactor:1,b=o.isWebGL2?\"\":function(e,t,n){return[(e=e||{}).derivatives||t.envMapCubeUV||t.bumpMap||t.normalMap&&!t.objectSpaceNormalMap||t.flatShading?\"#extension GL_OES_standard_derivatives : enable\":\"\",(e.fragDepth||t.logarithmicDepthBuffer)&&n.get(\"EXT_frag_depth\")?\"#extension GL_EXT_frag_depth : enable\":\"\",e.drawBuffers&&n.get(\"WEBGL_draw_buffers\")?\"#extension GL_EXT_draw_buffers : require\":\"\",(e.shaderTextureLOD||t.envMap)&&n.get(\"EXT_shader_texture_lod\")?\"#extension GL_EXT_shader_texture_lod : enable\":\"\"].filter(Br).join(\"\\n\")}(r.extensions,a,t),w=function(e){var t=[];for(var n in e){var r=e[n];!1!==r&&t.push(\"#define \"+n+\" \"+r)}return t.join(\"\\n\")}(c),_=s.createProgram();if(r.isRawShaderMaterial?((v=[w].filter(Br).join(\"\\n\")).length>0&&(v+=\"\\n\"),(y=[b,w].filter(Br).join(\"\\n\")).length>0&&(y+=\"\\n\")):(v=[\"precision \"+a.precision+\" float;\",\"precision \"+a.precision+\" int;\",\"#define SHADER_NAME \"+i.name,w,a.supportsVertexTextures?\"#define VERTEX_TEXTURES\":\"\",\"#define GAMMA_FACTOR \"+x,\"#define MAX_BONES \"+a.maxBones,a.useFog&&a.fog?\"#define USE_FOG\":\"\",a.useFog&&a.fogExp?\"#define FOG_EXP2\":\"\",a.map?\"#define USE_MAP\":\"\",a.envMap?\"#define USE_ENVMAP\":\"\",a.envMap?\"#define \"+m:\"\",a.lightMap?\"#define USE_LIGHTMAP\":\"\",a.aoMap?\"#define USE_AOMAP\":\"\",a.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",a.bumpMap?\"#define USE_BUMPMAP\":\"\",a.normalMap?\"#define USE_NORMALMAP\":\"\",a.normalMap&&a.objectSpaceNormalMap?\"#define OBJECTSPACE_NORMALMAP\":\"\",a.displacementMap&&a.supportsVertexTextures?\"#define USE_DISPLACEMENTMAP\":\"\",a.specularMap?\"#define USE_SPECULARMAP\":\"\",a.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",a.metalnessMap?\"#define USE_METALNESSMAP\":\"\",a.alphaMap?\"#define USE_ALPHAMAP\":\"\",a.vertexColors?\"#define USE_COLOR\":\"\",a.flatShading?\"#define FLAT_SHADED\":\"\",a.skinning?\"#define USE_SKINNING\":\"\",a.useVertexTexture?\"#define BONE_TEXTURE\":\"\",a.morphTargets?\"#define USE_MORPHTARGETS\":\"\",a.morphNormals&&!1===a.flatShading?\"#define USE_MORPHNORMALS\":\"\",a.doubleSided?\"#define DOUBLE_SIDED\":\"\",a.flipSided?\"#define FLIP_SIDED\":\"\",a.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",a.shadowMapEnabled?\"#define \"+h:\"\",a.sizeAttenuation?\"#define USE_SIZEATTENUATION\":\"\",a.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",a.logarithmicDepthBuffer&&(o.isWebGL2||t.get(\"EXT_frag_depth\"))?\"#define USE_LOGDEPTHBUF_EXT\":\"\",\"uniform mat4 modelMatrix;\",\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"uniform vec3 cameraPosition;\",\"attribute vec3 position;\",\"attribute vec3 normal;\",\"attribute vec2 uv;\",\"#ifdef USE_COLOR\",\"\\tattribute vec3 color;\",\"#endif\",\"#ifdef USE_MORPHTARGETS\",\"\\tattribute vec3 morphTarget0;\",\"\\tattribute vec3 morphTarget1;\",\"\\tattribute vec3 morphTarget2;\",\"\\tattribute vec3 morphTarget3;\",\"\\t#ifdef USE_MORPHNORMALS\",\"\\t\\tattribute vec3 morphNormal0;\",\"\\t\\tattribute vec3 morphNormal1;\",\"\\t\\tattribute vec3 morphNormal2;\",\"\\t\\tattribute vec3 morphNormal3;\",\"\\t#else\",\"\\t\\tattribute vec3 morphTarget4;\",\"\\t\\tattribute vec3 morphTarget5;\",\"\\t\\tattribute vec3 morphTarget6;\",\"\\t\\tattribute vec3 morphTarget7;\",\"\\t#endif\",\"#endif\",\"#ifdef USE_SKINNING\",\"\\tattribute vec4 skinIndex;\",\"\\tattribute vec4 skinWeight;\",\"#endif\",\"\\n\"].filter(Br).join(\"\\n\"),y=[b,\"precision \"+a.precision+\" float;\",\"precision \"+a.precision+\" int;\",\"#define SHADER_NAME \"+i.name,w,a.alphaTest?\"#define ALPHATEST \"+a.alphaTest+(a.alphaTest%1?\"\":\".0\"):\"\",\"#define GAMMA_FACTOR \"+x,a.useFog&&a.fog?\"#define USE_FOG\":\"\",a.useFog&&a.fogExp?\"#define FOG_EXP2\":\"\",a.map?\"#define USE_MAP\":\"\",a.envMap?\"#define USE_ENVMAP\":\"\",a.envMap?\"#define \"+d:\"\",a.envMap?\"#define \"+m:\"\",a.envMap?\"#define \"+g:\"\",a.lightMap?\"#define USE_LIGHTMAP\":\"\",a.aoMap?\"#define USE_AOMAP\":\"\",a.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",a.bumpMap?\"#define USE_BUMPMAP\":\"\",a.normalMap?\"#define USE_NORMALMAP\":\"\",a.normalMap&&a.objectSpaceNormalMap?\"#define OBJECTSPACE_NORMALMAP\":\"\",a.specularMap?\"#define USE_SPECULARMAP\":\"\",a.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",a.metalnessMap?\"#define USE_METALNESSMAP\":\"\",a.alphaMap?\"#define USE_ALPHAMAP\":\"\",a.vertexColors?\"#define USE_COLOR\":\"\",a.gradientMap?\"#define USE_GRADIENTMAP\":\"\",a.flatShading?\"#define FLAT_SHADED\":\"\",a.doubleSided?\"#define DOUBLE_SIDED\":\"\",a.flipSided?\"#define FLIP_SIDED\":\"\",a.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",a.shadowMapEnabled?\"#define \"+h:\"\",a.premultipliedAlpha?\"#define PREMULTIPLIED_ALPHA\":\"\",a.physicallyCorrectLights?\"#define PHYSICALLY_CORRECT_LIGHTS\":\"\",a.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",a.logarithmicDepthBuffer&&(o.isWebGL2||t.get(\"EXT_frag_depth\"))?\"#define USE_LOGDEPTHBUF_EXT\":\"\",a.envMap&&(o.isWebGL2||t.get(\"EXT_shader_texture_lod\"))?\"#define TEXTURE_LOD_EXT\":\"\",\"uniform mat4 viewMatrix;\",\"uniform vec3 cameraPosition;\",a.toneMapping!==ne?\"#define TONE_MAPPING\":\"\",a.toneMapping!==ne?en.tonemapping_pars_fragment:\"\",a.toneMapping!==ne?function(e,t){var n;switch(t){case re:n=\"Linear\";break;case ie:n=\"Reinhard\";break;case ae:n=\"Uncharted2\";break;case oe:n=\"OptimizedCineon\";break;default:throw new Error(\"unsupported toneMapping: \"+t)}return\"vec3 \"+e+\"( vec3 color ) { return \"+n+\"ToneMapping( color ); }\"}(\"toneMapping\",a.toneMapping):\"\",a.dithering?\"#define DITHERING\":\"\",a.outputEncoding||a.mapEncoding||a.envMapEncoding||a.emissiveMapEncoding?en.encodings_pars_fragment:\"\",a.mapEncoding?Ur(\"mapTexelToLinear\",a.mapEncoding):\"\",a.envMapEncoding?Ur(\"envMapTexelToLinear\",a.envMapEncoding):\"\",a.emissiveMapEncoding?Ur(\"emissiveMapTexelToLinear\",a.emissiveMapEncoding):\"\",a.outputEncoding?function(e,t){var n=Dr(t);return\"vec4 \"+e+\"( vec4 value ) { return LinearTo\"+n[0]+n[1]+\"; }\"}(\"linearToOutputTexel\",a.outputEncoding):\"\",a.depthPacking?\"#define DEPTH_PACKING \"+r.depthPacking:\"\",\"\\n\"].filter(Br).join(\"\\n\")),u=Gr(u=Fr(u=zr(u),a),a),l=Gr(l=Fr(l=zr(l),a),a),u=Hr(u),l=Hr(l),o.isWebGL2&&!r.isRawShaderMaterial){var M=!1,E=/^\\s*#version\\s+300\\s+es\\s*\\n/;r.isShaderMaterial&&null!==u.match(E)&&null!==l.match(E)&&(M=!0,u=u.replace(E,\"\"),l=l.replace(E,\"\")),v=[\"#version 300 es\\n\",\"#define attribute in\",\"#define varying out\",\"#define texture2D texture\"].join(\"\\n\")+\"\\n\"+v,y=[\"#version 300 es\\n\",\"#define varying in\",M?\"\":\"out highp vec4 pc_fragColor;\",M?\"\":\"#define gl_FragColor pc_fragColor\",\"#define gl_FragDepthEXT gl_FragDepth\",\"#define texture2D texture\",\"#define textureCube texture\",\"#define texture2DProj textureProj\",\"#define texture2DLodEXT textureLod\",\"#define texture2DProjLodEXT textureProjLod\",\"#define textureCubeLodEXT textureLod\",\"#define texture2DGradEXT textureGrad\",\"#define texture2DProjGradEXT textureProjGrad\",\"#define textureCubeGradEXT textureGrad\"].join(\"\\n\")+\"\\n\"+y}var T=v+u,S=y+l,A=Nr(s,s.VERTEX_SHADER,T),L=Nr(s,s.FRAGMENT_SHADER,S);s.attachShader(_,A),s.attachShader(_,L),void 0!==r.index0AttributeName?s.bindAttribLocation(_,0,r.index0AttributeName):!0===a.morphTargets&&s.bindAttribLocation(_,0,\"position\"),s.linkProgram(_);var R,C,P=s.getProgramInfoLog(_).trim(),O=s.getShaderInfoLog(A).trim(),N=s.getShaderInfoLog(L).trim(),I=!0,D=!0;return!1===s.getProgramParameter(_,s.LINK_STATUS)?(I=!1,console.error(\"THREE.WebGLProgram: shader error: \",s.getError(),\"gl.VALIDATE_STATUS\",s.getProgramParameter(_,s.VALIDATE_STATUS),\"gl.getProgramInfoLog\",P,O,N)):\"\"!==P?console.warn(\"THREE.WebGLProgram: gl.getProgramInfoLog()\",P):\"\"!==O&&\"\"!==N||(D=!1),D&&(this.diagnostics={runnable:I,material:r,programLog:P,vertexShader:{log:O,prefix:v},fragmentShader:{log:N,prefix:y}}),s.deleteShader(A),s.deleteShader(L),this.getUniforms=function(){return void 0===R&&(R=new Or(s,_,e)),R},this.getAttributes=function(){return void 0===C&&(C=function(e,t){for(var n={},r=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),i=0;i<r;i++){var a=e.getActiveAttrib(t,i).name;n[a]=e.getAttribLocation(t,a)}return n}(s,_)),C},this.destroy=function(){s.deleteProgram(_),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn(\"THREE.WebGLProgram: .uniforms is now .getUniforms().\"),this.getUniforms()}},attributes:{get:function(){return console.warn(\"THREE.WebGLProgram: .attributes is now .getAttributes().\"),this.getAttributes()}}}),this.name=i.name,this.id=Ir++,this.code=n,this.usedTimes=1,this.program=_,this.vertexShader=A,this.fragmentShader=L,this}function jr(e,t,n){var r=[],i={MeshDepthMaterial:\"depth\",MeshDistanceMaterial:\"distanceRGBA\",MeshNormalMaterial:\"normal\",MeshBasicMaterial:\"basic\",MeshLambertMaterial:\"lambert\",MeshPhongMaterial:\"phong\",MeshToonMaterial:\"phong\",MeshStandardMaterial:\"physical\",MeshPhysicalMaterial:\"physical\",LineBasicMaterial:\"basic\",LineDashedMaterial:\"dashed\",PointsMaterial:\"points\",ShadowMaterial:\"shadow\",SpriteMaterial:\"sprite\"},a=[\"precision\",\"supportsVertexTextures\",\"map\",\"mapEncoding\",\"envMap\",\"envMapMode\",\"envMapEncoding\",\"lightMap\",\"aoMap\",\"emissiveMap\",\"emissiveMapEncoding\",\"bumpMap\",\"normalMap\",\"objectSpaceNormalMap\",\"displacementMap\",\"specularMap\",\"roughnessMap\",\"metalnessMap\",\"gradientMap\",\"alphaMap\",\"combine\",\"vertexColors\",\"fog\",\"useFog\",\"fogExp\",\"flatShading\",\"sizeAttenuation\",\"logarithmicDepthBuffer\",\"skinning\",\"maxBones\",\"useVertexTexture\",\"morphTargets\",\"morphNormals\",\"maxMorphTargets\",\"maxMorphNormals\",\"premultipliedAlpha\",\"numDirLights\",\"numPointLights\",\"numSpotLights\",\"numHemiLights\",\"numRectAreaLights\",\"shadowMapEnabled\",\"shadowMapType\",\"toneMapping\",\"physicallyCorrectLights\",\"alphaTest\",\"doubleSided\",\"flipSided\",\"numClippingPlanes\",\"numClipIntersection\",\"depthPacking\",\"dithering\"];function o(e,t){var n;return e?e.isTexture?n=e.encoding:e.isWebGLRenderTarget&&(console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\"),n=e.texture.encoding):n=Tt,n===Tt&&t&&(n=At),n}this.getParameters=function(t,r,a,s,c,u,l){var h=i[t.type],d=l.isSkinnedMesh?function(e){var t=e.skeleton.bones;if(n.floatVertexTextures)return 1024;var r=n.maxVertexUniforms,i=Math.floor((r-20)/4),a=Math.min(i,t.length);return a<t.length?(console.warn(\"THREE.WebGLRenderer: Skeleton has \"+t.length+\" bones. This GPU supports \"+a+\".\"),0):a}(l):0,p=n.precision;null!==t.precision&&(p=n.getMaxPrecision(t.precision))!==t.precision&&console.warn(\"THREE.WebGLProgram.getParameters:\",t.precision,\"not supported, using\",p,\"instead.\");var f=e.getRenderTarget();return{shaderID:h,precision:p,supportsVertexTextures:n.vertexTextures,outputEncoding:o(f?f.texture:null,e.gammaOutput),map:!!t.map,mapEncoding:o(t.map,e.gammaInput),envMap:!!t.envMap,envMapMode:t.envMap&&t.envMap.mapping,envMapEncoding:o(t.envMap,e.gammaInput),envMapCubeUV:!!t.envMap&&(t.envMap.mapping===pe||t.envMap.mapping===fe),lightMap:!!t.lightMap,aoMap:!!t.aoMap,emissiveMap:!!t.emissiveMap,emissiveMapEncoding:o(t.emissiveMap,e.gammaInput),bumpMap:!!t.bumpMap,normalMap:!!t.normalMap,objectSpaceNormalMap:t.normalMapType===Ut,displacementMap:!!t.displacementMap,roughnessMap:!!t.roughnessMap,metalnessMap:!!t.metalnessMap,specularMap:!!t.specularMap,alphaMap:!!t.alphaMap,gradientMap:!!t.gradientMap,combine:t.combine,vertexColors:t.vertexColors,fog:!!s,useFog:t.fog,fogExp:s&&s.isFogExp2,flatShading:t.flatShading,sizeAttenuation:t.sizeAttenuation,logarithmicDepthBuffer:n.logarithmicDepthBuffer,skinning:t.skinning&&d>0,maxBones:d,useVertexTexture:n.floatVertexTextures,morphTargets:t.morphTargets,morphNormals:t.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:r.directional.length,numPointLights:r.point.length,numSpotLights:r.spot.length,numRectAreaLights:r.rectArea.length,numHemiLights:r.hemi.length,numClippingPlanes:c,numClipIntersection:u,dithering:t.dithering,shadowMapEnabled:e.shadowMap.enabled&&l.receiveShadow&&a.length>0,shadowMapType:e.shadowMap.type,toneMapping:e.toneMapping,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:t.premultipliedAlpha,alphaTest:t.alphaTest,doubleSided:t.side===v,flipSided:t.side===g,depthPacking:void 0!==t.depthPacking&&t.depthPacking}},this.getProgramCode=function(t,n){var r=[];if(n.shaderID?r.push(n.shaderID):(r.push(t.fragmentShader),r.push(t.vertexShader)),void 0!==t.defines)for(var i in t.defines)r.push(i),r.push(t.defines[i]);for(var o=0;o<a.length;o++)r.push(n[a[o]]);return r.push(t.onBeforeCompile.toString()),r.push(e.gammaOutput),r.join()},this.acquireProgram=function(i,a,o,s){for(var c,u=0,l=r.length;u<l;u++){var h=r[u];if(h.code===s){++(c=h).usedTimes;break}}return void 0===c&&(c=new kr(e,t,s,i,a,o,n),r.push(c)),c},this.releaseProgram=function(e){if(0==--e.usedTimes){var t=r.indexOf(e);r[t]=r[r.length-1],r.pop(),e.destroy()}},this.programs=r}function Vr(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program&&t.program&&e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Wr(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Xr(){var e={};return{get:function(t,n){var r=t.id+\",\"+n.id,i=e[r];return void 0===i&&(i=new function(){var e=[],t=0,n=[],r=[];return{opaque:n,transparent:r,init:function(){t=0,n.length=0,r.length=0},push:function(i,a,o,s,c){var u=e[t];void 0===u?(u={id:i.id,object:i,geometry:a,material:o,program:o.program,renderOrder:i.renderOrder,z:s,group:c},e[t]=u):(u.id=i.id,u.object=i,u.geometry=a,u.material=o,u.program=o.program,u.renderOrder=i.renderOrder,u.z=s,u.group=c),(!0===o.transparent?r:n).push(u),t++},sort:function(){n.length>1&&n.sort(Vr),r.length>1&&r.sort(Wr)}}},e[r]=i),i},dispose:function(){e={}}}}var qr,Yr=0;function Zr(){var e=new function(){var e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];var n;switch(t.type){case\"DirectionalLight\":n={direction:new Ht,color:new rn,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Ft};break;case\"SpotLight\":n={position:new Ht,direction:new Ht,color:new rn,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Ft};break;case\"PointLight\":n={position:new Ht,color:new rn,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Ft,shadowCameraNear:1,shadowCameraFar:1e3};break;case\"HemisphereLight\":n={direction:new Ht,skyColor:new rn,groundColor:new rn};break;case\"RectAreaLight\":n={color:new rn,position:new Ht,halfWidth:new Ht,halfHeight:new Ht}}return e[t.id]=n,n}}},t={id:Yr++,hash:{stateID:-1,directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,shadowsLength:-1},ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},n=new Ht,r=new Gt,i=new Gt;return{setup:function(a,o,s){for(var c=0,u=0,l=0,h=0,d=0,p=0,f=0,m=0,g=s.matrixWorldInverse,v=0,y=a.length;v<y;v++){var x=a[v],b=x.color,w=x.intensity,_=x.distance,M=x.shadow&&x.shadow.map?x.shadow.map.texture:null;if(x.isAmbientLight)c+=b.r*w,u+=b.g*w,l+=b.b*w;else if(x.isDirectionalLight){if((T=e.get(x)).color.copy(x.color).multiplyScalar(x.intensity),T.direction.setFromMatrixPosition(x.matrixWorld),n.setFromMatrixPosition(x.target.matrixWorld),T.direction.sub(n),T.direction.transformDirection(g),T.shadow=x.castShadow,x.castShadow){var E=x.shadow;T.shadowBias=E.bias,T.shadowRadius=E.radius,T.shadowMapSize=E.mapSize}t.directionalShadowMap[h]=M,t.directionalShadowMatrix[h]=x.shadow.matrix,t.directional[h]=T,h++}else if(x.isSpotLight)(T=e.get(x)).position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(g),T.color.copy(b).multiplyScalar(w),T.distance=_,T.direction.setFromMatrixPosition(x.matrixWorld),n.setFromMatrixPosition(x.target.matrixWorld),T.direction.sub(n),T.direction.transformDirection(g),T.coneCos=Math.cos(x.angle),T.penumbraCos=Math.cos(x.angle*(1-x.penumbra)),T.decay=0===x.distance?0:x.decay,T.shadow=x.castShadow,x.castShadow&&(E=x.shadow,T.shadowBias=E.bias,T.shadowRadius=E.radius,T.shadowMapSize=E.mapSize),t.spotShadowMap[p]=M,t.spotShadowMatrix[p]=x.shadow.matrix,t.spot[p]=T,p++;else if(x.isRectAreaLight)(T=e.get(x)).color.copy(b).multiplyScalar(w),T.position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(g),i.identity(),r.copy(x.matrixWorld),r.premultiply(g),i.extractRotation(r),T.halfWidth.set(.5*x.width,0,0),T.halfHeight.set(0,.5*x.height,0),T.halfWidth.applyMatrix4(i),T.halfHeight.applyMatrix4(i),t.rectArea[f]=T,f++;else if(x.isPointLight)(T=e.get(x)).position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(g),T.color.copy(x.color).multiplyScalar(x.intensity),T.distance=x.distance,T.decay=0===x.distance?0:x.decay,T.shadow=x.castShadow,x.castShadow&&(E=x.shadow,T.shadowBias=E.bias,T.shadowRadius=E.radius,T.shadowMapSize=E.mapSize,T.shadowCameraNear=E.camera.near,T.shadowCameraFar=E.camera.far),t.pointShadowMap[d]=M,t.pointShadowMatrix[d]=x.shadow.matrix,t.point[d]=T,d++;else if(x.isHemisphereLight){var T;(T=e.get(x)).direction.setFromMatrixPosition(x.matrixWorld),T.direction.transformDirection(g),T.direction.normalize(),T.skyColor.copy(x.color).multiplyScalar(w),T.groundColor.copy(x.groundColor).multiplyScalar(w),t.hemi[m]=T,m++}}t.ambient[0]=c,t.ambient[1]=u,t.ambient[2]=l,t.directional.length=h,t.spot.length=p,t.rectArea.length=f,t.point.length=d,t.hemi.length=m,t.hash.stateID=t.id,t.hash.directionalLength=h,t.hash.pointLength=d,t.hash.spotLength=p,t.hash.rectAreaLength=f,t.hash.hemiLength=m,t.hash.shadowsLength=o.length},state:t}}function Jr(){var e=new Zr,t=[],n=[];return{init:function(){t.length=0,n.length=0},state:{lightsArray:t,shadowsArray:n,lights:e},setupLights:function(r){e.setup(t,n,r)},pushLight:function(e){t.push(e)},pushShadow:function(e){n.push(e)}}}function Kr(e){Bn.call(this),this.type=\"MeshDepthMaterial\",this.depthPacking=Nt,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(e)}function Qr(e){Bn.call(this),this.type=\"MeshDistanceMaterial\",this.referencePosition=new Ht,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.lights=!1,this.setValues(e)}function $r(e,t,n){for(var r=new $t,i=new Gt,a=new Ft,o=new Ft(n,n),s=new Ht,c=new Ht,u=1,l=2,h=1+(u|l),d=new Array(h),f=new Array(h),y={},x={0:g,1:m,2:v},b=[new Ht(1,0,0),new Ht(-1,0,0),new Ht(0,0,1),new Ht(0,0,-1),new Ht(0,1,0),new Ht(0,-1,0)],w=[new Ht(0,1,0),new Ht(0,1,0),new Ht(0,1,0),new Ht(0,1,0),new Ht(0,0,1),new Ht(0,0,-1)],_=[new Xt,new Xt,new Xt,new Xt,new Xt,new Xt],M=0;M!==h;++M){var E=0!=(M&u),T=0!=(M&l),S=new Kr({depthPacking:It,morphTargets:E,skinning:T});d[M]=S;var A=new Qr({morphTargets:E,skinning:T});f[M]=A}var L=this;function R(t,n,r,i,a,o){var s=t.geometry,c=null,h=d,p=t.customDepthMaterial;if(r&&(h=f,p=t.customDistanceMaterial),p)c=p;else{var m=!1;n.morphTargets&&(s&&s.isBufferGeometry?m=s.morphAttributes&&s.morphAttributes.position&&s.morphAttributes.position.length>0:s&&s.isGeometry&&(m=s.morphTargets&&s.morphTargets.length>0)),t.isSkinnedMesh&&!1===n.skinning&&console.warn(\"THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:\",t);var g=t.isSkinnedMesh&&n.skinning,v=0;m&&(v|=u),g&&(v|=l),c=h[v]}if(e.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length){var b=c.uuid,w=n.uuid,_=y[b];void 0===_&&(_={},y[b]=_);var M=_[w];void 0===M&&(M=c.clone(),_[w]=M),c=M}return c.visible=n.visible,c.wireframe=n.wireframe,c.side=null!=n.shadowSide?n.shadowSide:x[n.side],c.clipShadows=n.clipShadows,c.clippingPlanes=n.clippingPlanes,c.clipIntersection=n.clipIntersection,c.wireframeLinewidth=n.wireframeLinewidth,c.linewidth=n.linewidth,r&&c.isMeshDistanceMaterial&&(c.referencePosition.copy(i),c.nearDistance=a,c.farDistance=o),c}function C(n,i,a,o){if(!1!==n.visible){if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&n.castShadow&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);var s=t.update(n),u=n.material;if(Array.isArray(u))for(var l=s.groups,h=0,d=l.length;h<d;h++){var p=l[h],f=u[p.materialIndex];if(f&&f.visible){var m=R(n,f,o,c,a.near,a.far);e.renderBufferDirect(a,null,s,m,n,p)}}else if(u.visible){m=R(n,u,o,c,a.near,a.far);e.renderBufferDirect(a,null,s,m,n,null)}}for(var g=n.children,v=0,y=g.length;v<y;v++)C(g[v],i,a,o)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=p,this.render=function(t,n,u){if(!1!==L.enabled&&(!1!==L.autoUpdate||!1!==L.needsUpdate)&&0!==t.length){var l,h=e.context,d=e.state;d.disable(h.BLEND),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(var p=0,f=t.length;p<f;p++){var m=t[p],g=m.shadow,v=m&&m.isPointLight;if(void 0!==g){var y=g.camera;if(a.copy(g.mapSize),a.min(o),v){var x=a.x,M=a.y;_[0].set(2*x,M,x,M),_[1].set(0,M,x,M),_[2].set(3*x,M,x,M),_[3].set(x,M,x,M),_[4].set(3*x,0,x,M),_[5].set(x,0,x,M),a.x*=4,a.y*=2}if(null===g.map){var E={minFilter:ye,magFilter:ye,format:Fe};g.map=new qt(a.x,a.y,E),g.map.texture.name=m.name+\".shadowMap\",y.updateProjectionMatrix()}g.isSpotLightShadow&&g.update(m);var T=g.map,S=g.matrix;c.setFromMatrixPosition(m.matrixWorld),y.position.copy(c),v?(l=6,S.makeTranslation(-c.x,-c.y,-c.z)):(l=1,s.setFromMatrixPosition(m.target.matrixWorld),y.lookAt(s),y.updateMatrixWorld(),S.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),S.multiply(y.projectionMatrix),S.multiply(y.matrixWorldInverse)),e.setRenderTarget(T),e.clear();for(var A=0;A<l;A++){if(v){s.copy(y.position),s.add(b[A]),y.up.copy(w[A]),y.lookAt(s),y.updateMatrixWorld();var R=_[A];d.viewport(R)}i.multiplyMatrices(y.projectionMatrix,y.matrixWorldInverse),r.setFromMatrix(i),C(n,u,y,v)}}else console.warn(\"THREE.WebGLShadowMap:\",m,\"has no shadow.\")}L.needsUpdate=!1}}}function ei(e,t,n,r,i,a,o){var s,c={};function u(e,t){if(e.width>t||e.height>t){if(\"data\"in e)return void console.warn(\"THREE.WebGLRenderer: image in DataTexture is too big (\"+e.width+\"x\"+e.height+\").\");var n=t/Math.max(e.width,e.height),r=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");return r.width=Math.floor(e.width*n),r.height=Math.floor(e.height*n),r.getContext(\"2d\").drawImage(e,0,0,e.width,e.height,0,0,r.width,r.height),console.warn(\"THREE.WebGLRenderer: image is too big (\"+e.width+\"x\"+e.height+\"). Resized to \"+r.width+\"x\"+r.height),r}return e}function l(e){return Bt.isPowerOfTwo(e.width)&&Bt.isPowerOfTwo(e.height)}function h(e,t){return e.generateMipmaps&&t&&e.minFilter!==ye&&e.minFilter!==we}function d(t,n,i,a){e.generateMipmap(t),r.get(n).__maxMipLevel=Math.log(Math.max(i,a))*Math.LOG2E}function p(t,n){if(!i.isWebGL2)return t;if(t===e.RGB){if(n===e.FLOAT)return e.RGB32F;if(n===e.HALF_FLOAT)return e.RGB16F;if(n===e.UNSIGNED_BYTE)return e.RGB8}if(t===e.RGBA){if(n===e.FLOAT)return e.RGBA32F;if(n===e.HALF_FLOAT)return e.RGBA16F;if(n===e.UNSIGNED_BYTE)return e.RGBA8}return t}function f(t){return t===ye||t===xe||t===be?e.NEAREST:e.LINEAR}function m(t){var n=t.target;n.removeEventListener(\"dispose\",m),function(t){var n=r.get(t);if(t.image&&n.__image__webglTextureCube)e.deleteTexture(n.__image__webglTextureCube);else{if(void 0===n.__webglInit)return;e.deleteTexture(n.__webglTexture)}r.remove(t)}(n),n.isVideoTexture&&delete c[n.id],o.memory.textures--}function g(t){var n=t.target;n.removeEventListener(\"dispose\",g),function(t){var n=r.get(t),i=r.get(t.texture);if(!t)return;void 0!==i.__webglTexture&&e.deleteTexture(i.__webglTexture);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLRenderTargetCube)for(var a=0;a<6;a++)e.deleteFramebuffer(n.__webglFramebuffer[a]),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer[a]);else e.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer);r.remove(t.texture),r.remove(t)}(n),o.memory.textures--}function v(t,f){var g=r.get(t);if(t.isVideoTexture&&function(e){var t=e.id,n=o.render.frame;c[t]!==n&&(c[t]=n,e.update())}(t),t.version>0&&g.__version!==t.version){var v=t.image;if(void 0===v)console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is undefined\");else{if(!1!==v.complete)return void function(t,r,c){void 0===t.__webglInit&&(t.__webglInit=!0,r.addEventListener(\"dispose\",m),t.__webglTexture=e.createTexture(),o.memory.textures++);n.activeTexture(e.TEXTURE0+c),n.bindTexture(e.TEXTURE_2D,t.__webglTexture),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,r.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,r.unpackAlignment);var f=u(r.image,i.maxTextureSize);(function(e){return!i.isWebGL2&&(e.wrapS!==ge||e.wrapT!==ge||e.minFilter!==ye&&e.minFilter!==we)})(r)&&!1===l(f)&&(f=function(e){return e instanceof HTMLImageElement||e instanceof HTMLCanvasElement||e instanceof ImageBitmap?(void 0===s&&(s=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\")),s.width=Bt.floorPowerOfTwo(e.width),s.height=Bt.floorPowerOfTwo(e.height),s.getContext(\"2d\").drawImage(e,0,0,s.width,s.height),console.warn(\"THREE.WebGLRenderer: image is not power of two (\"+e.width+\"x\"+e.height+\"). Resized to \"+s.width+\"x\"+s.height),s):e}(f));var g=l(f),v=a.convert(r.format),x=a.convert(r.type),b=p(v,x);y(e.TEXTURE_2D,r,g);var w,_=r.mipmaps;if(r.isDepthTexture){if(b=e.DEPTH_COMPONENT,r.type===Ce){if(!i.isWebGL2)throw new Error(\"Float Depth Texture only supported in WebGL2.0\");b=e.DEPTH_COMPONENT32F}else i.isWebGL2&&(b=e.DEPTH_COMPONENT16);r.format===ke&&b===e.DEPTH_COMPONENT&&r.type!==Ae&&r.type!==Re&&(console.warn(\"THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.\"),r.type=Ae,x=a.convert(r.type)),r.format===je&&(b=e.DEPTH_STENCIL,r.type!==De&&(console.warn(\"THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.\"),r.type=De,x=a.convert(r.type))),n.texImage2D(e.TEXTURE_2D,0,b,f.width,f.height,0,v,x,null)}else if(r.isDataTexture)if(_.length>0&&g){for(var M=0,E=_.length;M<E;M++)w=_[M],n.texImage2D(e.TEXTURE_2D,M,b,w.width,w.height,0,v,x,w.data);r.generateMipmaps=!1,t.__maxMipLevel=_.length-1}else n.texImage2D(e.TEXTURE_2D,0,b,f.width,f.height,0,v,x,f.data),t.__maxMipLevel=0;else if(r.isCompressedTexture){for(var M=0,E=_.length;M<E;M++)w=_[M],r.format!==Fe&&r.format!==Be?n.getCompressedTextureFormats().indexOf(v)>-1?n.compressedTexImage2D(e.TEXTURE_2D,M,b,w.width,w.height,0,w.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\"):n.texImage2D(e.TEXTURE_2D,M,b,w.width,w.height,0,v,x,w.data);t.__maxMipLevel=_.length-1}else if(_.length>0&&g){for(var M=0,E=_.length;M<E;M++)w=_[M],n.texImage2D(e.TEXTURE_2D,M,b,v,x,w);r.generateMipmaps=!1,t.__maxMipLevel=_.length-1}else n.texImage2D(e.TEXTURE_2D,0,b,v,x,f),t.__maxMipLevel=0;h(r,g)&&d(e.TEXTURE_2D,r,f.width,f.height);t.__version=r.version,r.onUpdate&&r.onUpdate(r)}(g,t,f);console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is incomplete\")}}n.activeTexture(e.TEXTURE0+f),n.bindTexture(e.TEXTURE_2D,g.__webglTexture)}function y(n,o,s){var c;if(s?(e.texParameteri(n,e.TEXTURE_WRAP_S,a.convert(o.wrapS)),e.texParameteri(n,e.TEXTURE_WRAP_T,a.convert(o.wrapT)),e.texParameteri(n,e.TEXTURE_MAG_FILTER,a.convert(o.magFilter)),e.texParameteri(n,e.TEXTURE_MIN_FILTER,a.convert(o.minFilter))):(e.texParameteri(n,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(n,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),o.wrapS===ge&&o.wrapT===ge||console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.\"),e.texParameteri(n,e.TEXTURE_MAG_FILTER,f(o.magFilter)),e.texParameteri(n,e.TEXTURE_MIN_FILTER,f(o.minFilter)),o.minFilter!==ye&&o.minFilter!==we&&console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.\")),c=t.get(\"EXT_texture_filter_anisotropic\")){if(o.type===Ce&&null===t.get(\"OES_texture_float_linear\"))return;if(o.type===Pe&&null===(i.isWebGL2||t.get(\"OES_texture_half_float_linear\")))return;(o.anisotropy>1||r.get(o).__currentAnisotropy)&&(e.texParameterf(n,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,i.getMaxAnisotropy())),r.get(o).__currentAnisotropy=o.anisotropy)}}function x(t,i,o,s){var c=a.convert(i.texture.format),u=a.convert(i.texture.type),l=p(c,u);n.texImage2D(s,0,l,i.width,i.height,0,c,u,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,o,s,r.get(i.texture).__webglTexture,0),e.bindFramebuffer(e.FRAMEBUFFER,null)}function b(t,n){e.bindRenderbuffer(e.RENDERBUFFER,t),n.depthBuffer&&!n.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)):n.depthBuffer&&n.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)):e.renderbufferStorage(e.RENDERBUFFER,e.RGBA4,n.width,n.height),e.bindRenderbuffer(e.RENDERBUFFER,null)}function w(t){var n=r.get(t),i=!0===t.isWebGLRenderTargetCube;if(t.depthTexture){if(i)throw new Error(\"target.depthTexture not supported in Cube render targets\");!function(t,n){if(n&&n.isWebGLRenderTargetCube)throw new Error(\"Depth Texture with cube render targets is not supported\");if(e.bindFramebuffer(e.FRAMEBUFFER,t),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error(\"renderTarget.depthTexture must be an instance of THREE.DepthTexture\");r.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),v(n.depthTexture,0);var i=r.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===ke)e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,i,0);else{if(n.depthTexture.format!==je)throw new Error(\"Unknown depthTexture format\");e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,i,0)}}(n.__webglFramebuffer,t)}else if(i){n.__webglDepthbuffer=[];for(var a=0;a<6;a++)e.bindFramebuffer(e.FRAMEBUFFER,n.__webglFramebuffer[a]),n.__webglDepthbuffer[a]=e.createRenderbuffer(),b(n.__webglDepthbuffer[a],t)}else e.bindFramebuffer(e.FRAMEBUFFER,n.__webglFramebuffer),n.__webglDepthbuffer=e.createRenderbuffer(),b(n.__webglDepthbuffer,t);e.bindFramebuffer(e.FRAMEBUFFER,null)}this.setTexture2D=v,this.setTextureCube=function(t,s){var c=r.get(t);if(6===t.image.length)if(t.version>0&&c.__version!==t.version){c.__image__webglTextureCube||(t.addEventListener(\"dispose\",m),c.__image__webglTextureCube=e.createTexture(),o.memory.textures++),n.activeTexture(e.TEXTURE0+s),n.bindTexture(e.TEXTURE_CUBE_MAP,c.__image__webglTextureCube),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,t.flipY);for(var f=t&&t.isCompressedTexture,g=t.image[0]&&t.image[0].isDataTexture,v=[],x=0;x<6;x++)v[x]=f||g?g?t.image[x].image:t.image[x]:u(t.image[x],i.maxCubemapSize);var b=v[0],w=l(b),_=a.convert(t.format),M=a.convert(t.type),E=p(_,M);for(y(e.TEXTURE_CUBE_MAP,t,w),x=0;x<6;x++)if(f)for(var T,S=v[x].mipmaps,A=0,L=S.length;A<L;A++)T=S[A],t.format!==Fe&&t.format!==Be?n.getCompressedTextureFormats().indexOf(_)>-1?n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+x,A,E,T.width,T.height,0,T.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\"):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+x,A,E,T.width,T.height,0,_,M,T.data);else g?n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+x,0,E,v[x].width,v[x].height,0,_,M,v[x].data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+x,0,E,_,M,v[x]);c.__maxMipLevel=f?S.length-1:0,h(t,w)&&d(e.TEXTURE_CUBE_MAP,t,b.width,b.height),c.__version=t.version,t.onUpdate&&t.onUpdate(t)}else n.activeTexture(e.TEXTURE0+s),n.bindTexture(e.TEXTURE_CUBE_MAP,c.__image__webglTextureCube)},this.setTextureCubeDynamic=function(t,i){n.activeTexture(e.TEXTURE0+i),n.bindTexture(e.TEXTURE_CUBE_MAP,r.get(t).__webglTexture)},this.setupRenderTarget=function(t){var i=r.get(t),a=r.get(t.texture);t.addEventListener(\"dispose\",g),a.__webglTexture=e.createTexture(),o.memory.textures++;var s=!0===t.isWebGLRenderTargetCube,c=l(t);if(s){i.__webglFramebuffer=[];for(var u=0;u<6;u++)i.__webglFramebuffer[u]=e.createFramebuffer()}else i.__webglFramebuffer=e.createFramebuffer();if(s){for(n.bindTexture(e.TEXTURE_CUBE_MAP,a.__webglTexture),y(e.TEXTURE_CUBE_MAP,t.texture,c),u=0;u<6;u++)x(i.__webglFramebuffer[u],t,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+u);h(t.texture,c)&&d(e.TEXTURE_CUBE_MAP,t.texture,t.width,t.height),n.bindTexture(e.TEXTURE_CUBE_MAP,null)}else n.bindTexture(e.TEXTURE_2D,a.__webglTexture),y(e.TEXTURE_2D,t.texture,c),x(i.__webglFramebuffer,t,e.COLOR_ATTACHMENT0,e.TEXTURE_2D),h(t.texture,c)&&d(e.TEXTURE_2D,t.texture,t.width,t.height),n.bindTexture(e.TEXTURE_2D,null);t.depthBuffer&&w(t)},this.updateRenderTargetMipmap=function(t){var i=t.texture;if(h(i,l(t))){var a=t.isWebGLRenderTargetCube?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,o=r.get(i).__webglTexture;n.bindTexture(a,o),d(a,i,t.width,t.height),n.bindTexture(a,null)}}}function ti(e,t,n){return{convert:function(r){var i;if(r===me)return e.REPEAT;if(r===ge)return e.CLAMP_TO_EDGE;if(r===ve)return e.MIRRORED_REPEAT;if(r===ye)return e.NEAREST;if(r===xe)return e.NEAREST_MIPMAP_NEAREST;if(r===be)return e.NEAREST_MIPMAP_LINEAR;if(r===we)return e.LINEAR;if(r===_e)return e.LINEAR_MIPMAP_NEAREST;if(r===Me)return e.LINEAR_MIPMAP_LINEAR;if(r===Ee)return e.UNSIGNED_BYTE;if(r===Oe)return e.UNSIGNED_SHORT_4_4_4_4;if(r===Ne)return e.UNSIGNED_SHORT_5_5_5_1;if(r===Ie)return e.UNSIGNED_SHORT_5_6_5;if(r===Te)return e.BYTE;if(r===Se)return e.SHORT;if(r===Ae)return e.UNSIGNED_SHORT;if(r===Le)return e.INT;if(r===Re)return e.UNSIGNED_INT;if(r===Ce)return e.FLOAT;if(r===Pe){if(n.isWebGL2)return e.HALF_FLOAT;if(null!==(i=t.get(\"OES_texture_half_float\")))return i.HALF_FLOAT_OES}if(r===Ue)return e.ALPHA;if(r===Be)return e.RGB;if(r===Fe)return e.RGBA;if(r===Ge)return e.LUMINANCE;if(r===ze)return e.LUMINANCE_ALPHA;if(r===ke)return e.DEPTH_COMPONENT;if(r===je)return e.DEPTH_STENCIL;if(r===R)return e.FUNC_ADD;if(r===C)return e.FUNC_SUBTRACT;if(r===P)return e.FUNC_REVERSE_SUBTRACT;if(r===I)return e.ZERO;if(r===D)return e.ONE;if(r===U)return e.SRC_COLOR;if(r===B)return e.ONE_MINUS_SRC_COLOR;if(r===F)return e.SRC_ALPHA;if(r===G)return e.ONE_MINUS_SRC_ALPHA;if(r===z)return e.DST_ALPHA;if(r===H)return e.ONE_MINUS_DST_ALPHA;if(r===k)return e.DST_COLOR;if(r===j)return e.ONE_MINUS_DST_COLOR;if(r===V)return e.SRC_ALPHA_SATURATE;if((r===Ve||r===We||r===Xe||r===qe)&&null!==(i=t.get(\"WEBGL_compressed_texture_s3tc\"))){if(r===Ve)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===We)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Xe)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===qe)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((r===Ye||r===Ze||r===Je||r===Ke)&&null!==(i=t.get(\"WEBGL_compressed_texture_pvrtc\"))){if(r===Ye)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Ze)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Je)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Ke)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(r===Qe&&null!==(i=t.get(\"WEBGL_compressed_texture_etc1\")))return i.COMPRESSED_RGB_ETC1_WEBGL;if((r===$e||r===et||r===tt||r===nt||r===rt||r===it||r===at||r===ot||r===st||r===ct||r===ut||r===lt||r===ht||r===dt)&&null!==(i=t.get(\"WEBGL_compressed_texture_astc\")))return r;if(r===O||r===N){if(n.isWebGL2){if(r===O)return e.MIN;if(r===N)return e.MAX}if(null!==(i=t.get(\"EXT_blend_minmax\"))){if(r===O)return i.MIN_EXT;if(r===N)return i.MAX_EXT}}if(r===De){if(n.isWebGL2)return e.UNSIGNED_INT_24_8;if(null!==(i=t.get(\"WEBGL_depth_texture\")))return i.UNSIGNED_INT_24_8_WEBGL}return 0}}}function ni(){dn.call(this),this.type=\"Group\"}function ri(e,t,n,r){pn.call(this),this.type=\"PerspectiveCamera\",this.fov=void 0!==e?e:50,this.zoom=1,this.near=void 0!==n?n:.1,this.far=void 0!==r?r:2e3,this.focus=10,this.aspect=void 0!==t?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function ii(e){ri.call(this),this.cameras=e||[]}function ai(e){var t=this,n=null,r=null,i=null,a=[],o=new Gt,s=new Gt;\"undefined\"!=typeof window&&\"VRFrameData\"in window&&(r=new window.VRFrameData,window.addEventListener(\"vrdisplaypresentchange\",v,!1));var c=new Gt,u=new zt,l=new Ht,h=new ri;h.bounds=new Xt(0,0,.5,1),h.layers.enable(1);var d=new ri;d.bounds=new Xt(.5,0,.5,1),d.layers.enable(2);var p,f,m=new ii([h,d]);function g(){return null!==n&&!0===n.isPresenting}function v(){if(g()){var r=n.getEyeParameters(\"left\"),i=r.renderWidth,a=r.renderHeight;f=e.getPixelRatio(),p=e.getSize(),e.setDrawingBufferSize(2*i,a,1),b.start()}else t.enabled&&(e.setDrawingBufferSize(p.width,p.height,f),b.stop())}m.layers.enable(1),m.layers.enable(2);var y=[];function x(e){for(var t=navigator.getGamepads&&navigator.getGamepads(),n=0,r=0,i=t.length;n<i;n++){var a=t[n];if(a&&(\"Daydream Controller\"===a.id||\"Gear VR Controller\"===a.id||\"Oculus Go Controller\"===a.id||\"OpenVR Gamepad\"===a.id||a.id.startsWith(\"Oculus Touch\")||a.id.startsWith(\"Spatial Controller\"))){if(r===e)return a;r++}}}this.enabled=!1,this.userHeight=1.6,this.getController=function(e){var t=a[e];return void 0===t&&((t=new ni).matrixAutoUpdate=!1,t.visible=!1,a[e]=t),t},this.getDevice=function(){return n},this.setDevice=function(e){void 0!==e&&(n=e),b.setContext(e)},this.setPoseTarget=function(e){void 0!==e&&(i=e)},this.getCamera=function(e){if(null===n)return e.position.set(0,t.userHeight,0),e;n.depthNear=e.near,n.depthFar=e.far,n.getFrameData(r);var p=n.stageParameters;p?o.fromArray(p.sittingToStandingTransform):o.makeTranslation(0,t.userHeight,0);var f=r.pose,g=null!==i?i:e;if(g.matrix.copy(o),g.matrix.decompose(g.position,g.quaternion,g.scale),null!==f.orientation&&(u.fromArray(f.orientation),g.quaternion.multiply(u)),null!==f.position&&(u.setFromRotationMatrix(o),l.fromArray(f.position),l.applyQuaternion(u),g.position.add(l)),g.updateMatrixWorld(),!1===n.isPresenting)return e;h.near=e.near,d.near=e.near,h.far=e.far,d.far=e.far,m.matrixWorld.copy(e.matrixWorld),m.matrixWorldInverse.copy(e.matrixWorldInverse),h.matrixWorldInverse.fromArray(r.leftViewMatrix),d.matrixWorldInverse.fromArray(r.rightViewMatrix),s.getInverse(o),h.matrixWorldInverse.multiply(s),d.matrixWorldInverse.multiply(s);var v=g.parent;null!==v&&(c.getInverse(v.matrixWorld),h.matrixWorldInverse.multiply(c),d.matrixWorldInverse.multiply(c)),h.matrixWorld.getInverse(h.matrixWorldInverse),d.matrixWorld.getInverse(d.matrixWorldInverse),h.projectionMatrix.fromArray(r.leftProjectionMatrix),d.projectionMatrix.fromArray(r.rightProjectionMatrix),m.projectionMatrix.copy(h.projectionMatrix);var b=n.getLayers();if(b.length){var w=b[0];null!==w.leftBounds&&4===w.leftBounds.length&&h.bounds.fromArray(w.leftBounds),null!==w.rightBounds&&4===w.rightBounds.length&&d.bounds.fromArray(w.rightBounds)}return function(){for(var e=0;e<a.length;e++){var t=a[e],n=x(e);if(void 0!==n&&void 0!==n.pose){if(null===n.pose)return;var r=n.pose;!1===r.hasPosition&&t.position.set(.2,-.6,-.05),null!==r.position&&t.position.fromArray(r.position),null!==r.orientation&&t.quaternion.fromArray(r.orientation),t.matrix.compose(t.position,t.quaternion,t.scale),t.matrix.premultiply(o),t.matrix.decompose(t.position,t.quaternion,t.scale),t.matrixWorldNeedsUpdate=!0,t.visible=!0;var i=\"Daydream Controller\"===n.id?0:1;y[e]!==n.buttons[i].pressed&&(y[e]=n.buttons[i].pressed,!0===y[e]?t.dispatchEvent({type:\"selectstart\"}):(t.dispatchEvent({type:\"selectend\"}),t.dispatchEvent({type:\"select\"})))}else t.visible=!1}}(),m},this.getStandingMatrix=function(){return o},this.isPresenting=g;var b=new sn;this.setAnimationLoop=function(e){b.setAnimationLoop(e)},this.submitFrame=function(){g()&&n.submitFrame()},this.dispose=function(){\"undefined\"!=typeof window&&window.removeEventListener(\"vrdisplaypresentchange\",v)}}function oi(e){console.log(\"THREE.WebGLRenderer\",i);var t=void 0!==(e=e||{}).canvas?e.canvas:document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\"),n=void 0!==e.context?e.context:null,r=void 0!==e.alpha&&e.alpha,a=void 0===e.depth||e.depth,u=void 0===e.stencil||e.stencil,l=void 0!==e.antialias&&e.antialias,h=void 0===e.premultipliedAlpha||e.premultipliedAlpha,d=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,p=void 0!==e.powerPreference?e.powerPreference:\"default\",f=null,m=null;this.domElement=t,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=re,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var y,x,b,w,_,R,C,P,O,N,I,D,U,B,F,G,z,H,k=this,j=!1,V=null,$=null,ee=null,te=-1,ne={geometry:null,program:null,wireframe:!1},ie=null,ae=null,oe=new Xt,se=new Xt,ce=null,ue=0,le=t.width,he=t.height,de=1,pe=new Xt(0,0,le,he),fe=new Xt(0,0,le,he),me=!1,ge=new $t,ve=new function(){var e=this,t=null,n=0,r=!1,i=!1,a=new Qt,o=new kt,s={value:null,needsUpdate:!1};function c(){s.value!==t&&(s.value=t,s.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(t,n,r,i){var c=null!==t?t.length:0,u=null;if(0!==c){if(u=s.value,!0!==i||null===u){var l=r+4*c,h=n.matrixWorldInverse;o.getNormalMatrix(h),(null===u||u.length<l)&&(u=new Float32Array(l));for(var d=0,p=r;d!==c;++d,p+=4)a.copy(t[d]).applyMatrix4(h,o),a.normal.toArray(u,p),u[p+3]=a.constant}s.value=u,s.needsUpdate=!0}return e.numPlanes=c,u}this.uniform=s,this.numPlanes=0,this.numIntersection=0,this.init=function(e,i,a){var o=0!==e.length||i||0!==n||r;return r=i,t=u(e,a,0),n=e.length,o},this.beginShadows=function(){i=!0,u(null)},this.endShadows=function(){i=!1,c()},this.setState=function(e,a,o,l,h,d){if(!r||null===e||0===e.length||i&&!o)i?u(null):c();else{var p=i?0:n,f=4*p,m=h.clippingState||null;s.value=m,m=u(e,l,f,d);for(var g=0;g!==f;++g)m[g]=t[g];h.clippingState=m,this.numIntersection=a?this.numPlanes:0,this.numPlanes+=p}}},ye=!1,xe=!1,be=new Gt,we=new Ht;function _e(){return null===$?de:1}try{var Me={alpha:r,depth:a,stencil:u,antialias:l,premultipliedAlpha:h,preserveDrawingBuffer:d,powerPreference:p};if(t.addEventListener(\"webglcontextlost\",Le,!1),t.addEventListener(\"webglcontextrestored\",Re,!1),null===(y=n||t.getContext(\"webgl\",Me)||t.getContext(\"experimental-webgl\",Me)))throw null!==t.getContext(\"webgl\")?new Error(\"Error creating WebGL context with your selected attributes.\"):new Error(\"Error creating WebGL context.\");void 0===y.getShaderPrecisionFormat&&(y.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){console.error(\"THREE.WebGLRenderer: \"+e.message)}function Te(){x=new function(e){var t={};return{get:function(n){if(void 0!==t[n])return t[n];var r;switch(n){case\"WEBGL_depth_texture\":r=e.getExtension(\"WEBGL_depth_texture\")||e.getExtension(\"MOZ_WEBGL_depth_texture\")||e.getExtension(\"WEBKIT_WEBGL_depth_texture\");break;case\"EXT_texture_filter_anisotropic\":r=e.getExtension(\"EXT_texture_filter_anisotropic\")||e.getExtension(\"MOZ_EXT_texture_filter_anisotropic\")||e.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");break;case\"WEBGL_compressed_texture_s3tc\":r=e.getExtension(\"WEBGL_compressed_texture_s3tc\")||e.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\")||e.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");break;case\"WEBGL_compressed_texture_pvrtc\":r=e.getExtension(\"WEBGL_compressed_texture_pvrtc\")||e.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\");break;default:r=e.getExtension(n)}return null===r&&console.warn(\"THREE.WebGLRenderer: \"+n+\" extension not supported.\"),t[n]=r,r}}}(y),(b=new function(e,t,n){var r;function i(t){if(\"highp\"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return\"highp\";t=\"mediump\"}return\"mediump\"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?\"mediump\":\"lowp\"}var a=\"undefined\"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext,o=void 0!==n.precision?n.precision:\"highp\",s=i(o);s!==o&&(console.warn(\"THREE.WebGLRenderer:\",o,\"not supported, using\",s,\"instead.\"),o=s);var c=!0===n.logarithmicDepthBuffer,u=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),l=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),h=e.getParameter(e.MAX_TEXTURE_SIZE),d=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),p=e.getParameter(e.MAX_VERTEX_ATTRIBS),f=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),m=e.getParameter(e.MAX_VARYING_VECTORS),g=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),v=l>0,y=a||!!t.get(\"OES_texture_float\");return{isWebGL2:a,getMaxAnisotropy:function(){if(void 0!==r)return r;var n=t.get(\"EXT_texture_filter_anisotropic\");return r=null!==n?e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:i,precision:o,logarithmicDepthBuffer:c,maxTextures:u,maxVertexTextures:l,maxTextureSize:h,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:v&&y}}(y,x,e)).isWebGL2||(x.get(\"WEBGL_depth_texture\"),x.get(\"OES_texture_float\"),x.get(\"OES_texture_half_float\"),x.get(\"OES_texture_half_float_linear\"),x.get(\"OES_standard_derivatives\"),x.get(\"OES_element_index_uint\"),x.get(\"ANGLE_instanced_arrays\")),x.get(\"OES_texture_float_linear\"),H=new ti(y,x,b),(w=new function(e,t,n,r){var i=new function(){var t=!1,n=new Xt,r=null,i=new Xt(0,0,0,0);return{setMask:function(n){r===n||t||(e.colorMask(n,n,n,n),r=n)},setLocked:function(e){t=e},setClear:function(t,r,a,o,s){!0===s&&(t*=o,r*=o,a*=o),n.set(t,r,a,o),!1===i.equals(n)&&(e.clearColor(t,r,a,o),i.copy(n))},reset:function(){t=!1,r=null,i.set(-1,0,0,0)}}},a=new function(){var t=!1,n=null,r=null,i=null;return{setTest:function(t){t?re(e.DEPTH_TEST):ie(e.DEPTH_TEST)},setMask:function(r){n===r||t||(e.depthMask(r),n=r)},setFunc:function(t){if(r!==t){if(t)switch(t){case W:e.depthFunc(e.NEVER);break;case X:e.depthFunc(e.ALWAYS);break;case q:e.depthFunc(e.LESS);break;case Y:e.depthFunc(e.LEQUAL);break;case Z:e.depthFunc(e.EQUAL);break;case J:e.depthFunc(e.GEQUAL);break;case K:e.depthFunc(e.GREATER);break;case Q:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}else e.depthFunc(e.LEQUAL);r=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,n=null,r=null,i=null}}},u=new function(){var t=!1,n=null,r=null,i=null,a=null,o=null,s=null,c=null,u=null;return{setTest:function(t){t?re(e.STENCIL_TEST):ie(e.STENCIL_TEST)},setMask:function(r){n===r||t||(e.stencilMask(r),n=r)},setFunc:function(t,n,o){r===t&&i===n&&a===o||(e.stencilFunc(t,n,o),r=t,i=n,a=o)},setOp:function(t,n,r){o===t&&s===n&&c===r||(e.stencilOp(t,n,r),o=t,s=n,c=r)},setLocked:function(e){t=e},setClear:function(t){u!==t&&(e.clearStencil(t),u=t)},reset:function(){t=!1,n=null,r=null,i=null,a=null,o=null,s=null,c=null,u=null}}},l=e.getParameter(e.MAX_VERTEX_ATTRIBS),h=new Uint8Array(l),d=new Uint8Array(l),p=new Uint8Array(l),f={},m=null,y=null,x=null,b=null,w=null,_=null,R=null,C=null,P=null,O=!1,N=null,I=null,D=null,U=null,B=null,F=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),G=!1,z=0,H=e.getParameter(e.VERSION);-1!==H.indexOf(\"WebGL\")?(z=parseFloat(/^WebGL\\ ([0-9])/.exec(H)[1]),G=z>=1):-1!==H.indexOf(\"OpenGL ES\")&&(z=parseFloat(/^OpenGL\\ ES\\ ([0-9])/.exec(H)[1]),G=z>=2);var k=null,j={},V=new Xt,$=new Xt;function ee(t,n,r){var i=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(var o=0;o<r;o++)e.texImage2D(n+o,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,i);return a}var te={};function ne(n,i){h[n]=1,0===d[n]&&(e.enableVertexAttribArray(n),d[n]=1),p[n]!==i&&((r.isWebGL2?e:t.get(\"ANGLE_instanced_arrays\"))[r.isWebGL2?\"vertexAttribDivisor\":\"vertexAttribDivisorANGLE\"](n,i),p[n]=i)}function re(t){!0!==f[t]&&(e.enable(t),f[t]=!0)}function ie(t){!1!==f[t]&&(e.disable(t),f[t]=!1)}function ae(t,r,i,a,o,s,c,u){if(t!==M?re(e.BLEND):ie(e.BLEND),t!==L){if(t!==x||u!==O)switch(t){case T:u?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE));break;case S:u?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR));break;case A:u?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.SRC_COLOR));break;default:u?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA))}b=null,w=null,_=null,R=null,C=null,P=null}else o=o||r,s=s||i,c=c||a,r===b&&o===R||(e.blendEquationSeparate(n.convert(r),n.convert(o)),b=r,R=o),i===w&&a===_&&s===C&&c===P||(e.blendFuncSeparate(n.convert(i),n.convert(a),n.convert(s),n.convert(c)),w=i,_=a,C=s,P=c);x=t,O=u}function oe(t){N!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),N=t)}function se(t){t!==o?(re(e.CULL_FACE),t!==I&&(t===s?e.cullFace(e.BACK):t===c?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):ie(e.CULL_FACE),I=t}function ce(t,n,r){t?(re(e.POLYGON_OFFSET_FILL),U===n&&B===r||(e.polygonOffset(n,r),U=n,B=r)):ie(e.POLYGON_OFFSET_FILL)}function ue(t){void 0===t&&(t=e.TEXTURE0+F-1),k!==t&&(e.activeTexture(t),k=t)}return te[e.TEXTURE_2D]=ee(e.TEXTURE_2D,e.TEXTURE_2D,1),te[e.TEXTURE_CUBE_MAP]=ee(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),i.setClear(0,0,0,1),a.setClear(1),u.setClear(0),re(e.DEPTH_TEST),a.setFunc(Y),oe(!1),se(s),re(e.CULL_FACE),re(e.BLEND),ae(E),{buffers:{color:i,depth:a,stencil:u},initAttributes:function(){for(var e=0,t=h.length;e<t;e++)h[e]=0},enableAttribute:function(e){ne(e,0)},enableAttributeAndDivisor:ne,disableUnusedAttributes:function(){for(var t=0,n=d.length;t!==n;++t)d[t]!==h[t]&&(e.disableVertexAttribArray(t),d[t]=0)},enable:re,disable:ie,getCompressedTextureFormats:function(){if(null===m&&(m=[],t.get(\"WEBGL_compressed_texture_pvrtc\")||t.get(\"WEBGL_compressed_texture_s3tc\")||t.get(\"WEBGL_compressed_texture_etc1\")||t.get(\"WEBGL_compressed_texture_astc\")))for(var n=e.getParameter(e.COMPRESSED_TEXTURE_FORMATS),r=0;r<n.length;r++)m.push(n[r]);return m},useProgram:function(t){return y!==t&&(e.useProgram(t),y=t,!0)},setBlending:ae,setMaterial:function(t,n){t.side===v?ie(e.CULL_FACE):re(e.CULL_FACE);var r=t.side===g;n&&(r=!r),oe(r),t.blending===E&&!1===t.transparent?ae(M):ae(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),a.setFunc(t.depthFunc),a.setTest(t.depthTest),a.setMask(t.depthWrite),i.setMask(t.colorWrite),ce(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)},setFlipSided:oe,setCullFace:se,setLineWidth:function(t){t!==D&&(G&&e.lineWidth(t),D=t)},setPolygonOffset:ce,setScissorTest:function(t){t?re(e.SCISSOR_TEST):ie(e.SCISSOR_TEST)},activeTexture:ue,bindTexture:function(t,n){null===k&&ue();var r=j[k];void 0===r&&(r={type:void 0,texture:void 0},j[k]=r),r.type===t&&r.texture===n||(e.bindTexture(t,n||te[t]),r.type=t,r.texture=n)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error(\"THREE.WebGLState:\",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error(\"THREE.WebGLState:\",e)}},scissor:function(t){!1===V.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),V.copy(t))},viewport:function(t){!1===$.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),$.copy(t))},reset:function(){for(var t=0;t<d.length;t++)1===d[t]&&(e.disableVertexAttribArray(t),d[t]=0);f={},m=null,k=null,j={},y=null,x=null,N=null,I=null,i.reset(),a.reset(),u.reset()}}}(y,x,H,b)).scissor(se.copy(fe).multiplyScalar(de)),w.viewport(oe.copy(pe).multiplyScalar(de)),_=new function(e){var t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(n,r,i){switch(i=i||1,t.calls++,r){case e.TRIANGLES:t.triangles+=i*(n/3);break;case e.TRIANGLE_STRIP:case e.TRIANGLE_FAN:t.triangles+=i*(n-2);break;case e.LINES:t.lines+=i*(n/2);break;case e.LINE_STRIP:t.lines+=i*(n-1);break;case e.LINE_LOOP:t.lines+=i*n;break;case e.POINTS:t.points+=i*n;break;default:console.error(\"THREE.WebGLInfo: Unknown draw mode:\",r)}}}}(y),R=new function(){var e=new WeakMap;return{get:function(t){var n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,r){e.get(t)[n]=r},dispose:function(){e=new WeakMap}}},C=new ei(y,x,w,R,b,H,_),P=new cn(y),O=new function(e,t,n){var r={},i={};function a(e){var o=e.target,s=r[o.id];for(var c in null!==s.index&&t.remove(s.index),s.attributes)t.remove(s.attributes[c]);o.removeEventListener(\"dispose\",a),delete r[o.id];var u=i[s.id];u&&(t.remove(u),delete i[s.id]),n.memory.geometries--}return{get:function(e,t){var i=r[t.id];return i||(t.addEventListener(\"dispose\",a),t.isBufferGeometry?i=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=(new Pn).setFromObject(e)),i=t._bufferGeometry),r[t.id]=i,n.memory.geometries++,i)},update:function(n){var r=n.index,i=n.attributes;for(var a in null!==r&&t.update(r,e.ELEMENT_ARRAY_BUFFER),i)t.update(i[a],e.ARRAY_BUFFER);var o=n.morphAttributes;for(var a in o)for(var s=o[a],c=0,u=s.length;c<u;c++)t.update(s[c],e.ARRAY_BUFFER)},getWireframeAttribute:function(n){var r=i[n.id];if(r)return r;var a,o=[],s=n.index,c=n.attributes;if(null!==s)for(var u=0,l=(a=s.array).length;u<l;u+=3){var h=a[u+0],d=a[u+1],p=a[u+2];o.push(h,d,d,p,p,h)}else for(u=0,l=(a=c.position.array).length/3-1;u<l;u+=3)h=u+0,d=u+1,p=u+2,o.push(h,d,d,p,p,h);return r=new(Rn(o)>65535?Tn:Mn)(o,1),t.update(r,e.ELEMENT_ARRAY_BUFFER),i[n.id]=r,r}}}(y,P,_),N=new function(e,t){var n={};return{update:function(r){var i=t.render.frame,a=r.geometry,o=e.get(r,a);return n[o.id]!==i&&(a.isGeometry&&o.updateFromObject(r),e.update(o),n[o.id]=i),o},dispose:function(){n={}}}}(O,_),F=new function(e){var t={},n=new Float32Array(8);return{update:function(r,i,a,o){var s=r.morphTargetInfluences,c=s.length,u=t[i.id];if(void 0===u){u=[];for(var l=0;l<c;l++)u[l]=[l,0];t[i.id]=u}var h=a.morphTargets&&i.morphAttributes.position,d=a.morphNormals&&i.morphAttributes.normal;for(l=0;l<c;l++)0!==(p=u[l])[1]&&(h&&i.removeAttribute(\"morphTarget\"+l),d&&i.removeAttribute(\"morphNormal\"+l));for(l=0;l<c;l++)(p=u[l])[0]=l,p[1]=s[l];for(u.sort(jn),l=0;l<8;l++){var p;if(p=u[l]){var f=p[0],m=p[1];if(m){h&&i.addAttribute(\"morphTarget\"+l,h[f]),d&&i.addAttribute(\"morphNormal\"+l,d[f]),n[l]=m;continue}}n[l]=0}o.getUniforms().setValue(e,\"morphTargetInfluences\",n)}}}(y),I=new jr(k,x,b),D=new Xr,U=new function(){var e={};return{get:function(t,n){var r;return void 0===e[t.id]?(r=new Jr,e[t.id]={},e[t.id][n.id]=r):void 0===e[t.id][n.id]?(r=new Jr,e[t.id][n.id]=r):r=e[t.id][n.id],r},dispose:function(){e={}}}},B=new function(e,t,n,r){var i,a,o,s=new rn(0),c=0;function u(e,n){t.buffers.color.setClear(e.r,e.g,e.b,n,r)}return{getClearColor:function(){return s},setClearColor:function(e,t){s.set(e),u(s,c=void 0!==t?t:1)},getClearAlpha:function(){return c},setClearAlpha:function(e){u(s,c=e)},render:function(t,r,l,h){var d=r.background;null===d?u(s,c):d&&d.isColor&&(u(d,1),h=!0),(e.autoClear||h)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),d&&d.isCubeTexture?(void 0===o&&((o=new kn(new Nn(1,1,1),new Gn({uniforms:on.cube.uniforms,vertexShader:on.cube.vertexShader,fragmentShader:on.cube.fragmentShader,side:g,depthTest:!0,depthWrite:!1,fog:!1}))).geometry.removeAttribute(\"normal\"),o.geometry.removeAttribute(\"uv\"),o.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},n.update(o)),o.material.uniforms.tCube.value=d,t.push(o,o.geometry,o.material,0,null)):d&&d.isTexture&&(void 0===i&&(i=new fn(-1,1,1,-1,0,1),a=new kn(new Dn(2,2),new Fn({depthTest:!1,depthWrite:!1,fog:!1})),n.update(a)),a.material.map=d,e.renderBufferDirect(i,null,a.geometry,a.material,a,null))}}}(k,w,N,h),G=new function(e,t,n,r){var i;this.setMode=function(e){i=e},this.render=function(t,r){e.drawArrays(i,t,r),n.update(r,i)},this.renderInstances=function(a,o,s){var c;if(r.isWebGL2)c=e;else if(null===(c=t.get(\"ANGLE_instanced_arrays\")))return void console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");c[r.isWebGL2?\"drawArraysInstanced\":\"drawArraysInstancedANGLE\"](i,o,s,a.maxInstancedCount),n.update(s,i,a.maxInstancedCount)}}(y,x,_,b),z=new function(e,t,n,r){var i,a,o;this.setMode=function(e){i=e},this.setIndex=function(e){a=e.type,o=e.bytesPerElement},this.render=function(t,r){e.drawElements(i,r,a,t*o),n.update(r,i)},this.renderInstances=function(s,c,u){var l;if(r.isWebGL2)l=e;else if(null===(l=t.get(\"ANGLE_instanced_arrays\")))return void console.error(\"THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");l[r.isWebGL2?\"drawElementsInstanced\":\"drawElementsInstancedANGLE\"](i,u,a,c*o,s.maxInstancedCount),n.update(u,i,s.maxInstancedCount)}}(y,x,_,b),_.programs=I.programs,k.context=y,k.capabilities=b,k.extensions=x,k.properties=R,k.renderLists=D,k.state=w,k.info=_}Te();var Se=\"xr\"in navigator?new function(e){var t=e.context,n=null,r=null,i=null,a=null,o=[],s=[];function c(){return null!==r&&null!==i}var u=new ri;u.layers.enable(1),u.viewport=new Xt;var l=new ri;l.layers.enable(2),l.viewport=new Xt;var h=new ii([u,l]);function d(e){var t=o[s.indexOf(e.inputSource)];t&&t.dispatchEvent({type:e.type})}function p(){e.setFramebuffer(null),g.stop()}function f(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.getInverse(e.matrixWorld)}h.layers.enable(1),h.layers.enable(2),this.enabled=!1,this.getController=function(e){var t=o[e];return void 0===t&&((t=new ni).matrixAutoUpdate=!1,t.visible=!1,o[e]=t),t},this.getDevice=function(){return n},this.setDevice=function(e){void 0!==e&&(n=e),e instanceof XRDevice&&t.setCompatibleXRDevice(e)},this.setSession=function(n,a){null!==(r=n)&&(r.addEventListener(\"select\",d),r.addEventListener(\"selectstart\",d),r.addEventListener(\"selectend\",d),r.addEventListener(\"end\",p),r.baseLayer=new XRWebGLLayer(r,t),r.requestFrameOfReference(a.frameOfReferenceType).then(function(t){i=t,e.setFramebuffer(r.baseLayer.framebuffer),g.setContext(r),g.start()}),s=r.getInputSources(),r.addEventListener(\"inputsourceschange\",function(){s=r.getInputSources(),console.log(s)}))},this.getCamera=function(e){if(c()){var t=e.parent,n=h.cameras;f(h,t);for(var r=0;r<n.length;r++)f(n[r],t);e.matrixWorld.copy(h.matrixWorld);for(var i=e.children,a=(r=0,i.length);r<a;r++)i[r].updateMatrixWorld(!0);return h}return e},this.isPresenting=c;var m=null,g=new sn;g.setAnimationLoop(function(e,t){if(null!==(a=t.getDevicePose(i)))for(var n=r.baseLayer,c=t.views,u=0;u<c.length;u++){var l=c[u],d=n.getViewport(l),p=a.getViewMatrix(l),f=h.cameras[u];f.matrix.fromArray(p).getInverse(f.matrix),f.projectionMatrix.fromArray(l.projectionMatrix),f.viewport.set(d.x,d.y,d.width,d.height),0===u&&(h.matrix.copy(f.matrix),h.projectionMatrix.copy(f.projectionMatrix))}for(u=0;u<o.length;u++){var g=o[u],v=s[u];if(v){var y=t.getInputPose(v,i);if(null!==y){g.matrix.elements=y.pointerMatrix,g.matrix.decompose(g.position,g.rotation,g.scale),g.visible=!0;continue}}g.visible=!1}m&&m(e)}),this.setAnimationLoop=function(e){m=e},this.dispose=function(){},this.getStandingMatrix=function(){return console.warn(\"THREE.WebXRManager: getStandingMatrix() is no longer needed.\"),new THREE.Matrix4},this.submitFrame=function(){}}(k):new ai(k);this.vr=Se;var Ae=new $r(k,N,b.maxTextureSize);function Le(e){e.preventDefault(),console.log(\"THREE.WebGLRenderer: Context Lost.\"),j=!0}function Re(){console.log(\"THREE.WebGLRenderer: Context Restored.\"),j=!1,Te()}function Oe(e){var t=e.target;t.removeEventListener(\"dispose\",Oe),function(e){Ne(e),R.remove(e)}(t)}function Ne(e){var t=R.get(e).program;e.program=void 0,void 0!==t&&I.releaseProgram(t)}this.shadowMap=Ae,this.getContext=function(){return y},this.getContextAttributes=function(){return y.getContextAttributes()},this.forceContextLoss=function(){var e=x.get(\"WEBGL_lose_context\");e&&e.loseContext()},this.forceContextRestore=function(){var e=x.get(\"WEBGL_lose_context\");e&&e.restoreContext()},this.getPixelRatio=function(){return de},this.setPixelRatio=function(e){void 0!==e&&(de=e,this.setSize(le,he,!1))},this.getSize=function(){return{width:le,height:he}},this.setSize=function(e,n,r){Se.isPresenting()?console.warn(\"THREE.WebGLRenderer: Can't change size while VR device is presenting.\"):(le=e,he=n,t.width=e*de,t.height=n*de,!1!==r&&(t.style.width=e+\"px\",t.style.height=n+\"px\"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(){return{width:le*de,height:he*de}},this.setDrawingBufferSize=function(e,n,r){le=e,he=n,de=r,t.width=e*r,t.height=n*r,this.setViewport(0,0,e,n)},this.getCurrentViewport=function(){return oe},this.setViewport=function(e,t,n,r){pe.set(e,he-t-r,n,r),w.viewport(oe.copy(pe).multiplyScalar(de))},this.setScissor=function(e,t,n,r){fe.set(e,he-t-r,n,r),w.scissor(se.copy(fe).multiplyScalar(de))},this.setScissorTest=function(e){w.setScissorTest(me=e)},this.getClearColor=function(){return B.getClearColor()},this.setClearColor=function(){B.setClearColor.apply(B,arguments)},this.getClearAlpha=function(){return B.getClearAlpha()},this.setClearAlpha=function(){B.setClearAlpha.apply(B,arguments)},this.clear=function(e,t,n){var r=0;(void 0===e||e)&&(r|=y.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=y.DEPTH_BUFFER_BIT),(void 0===n||n)&&(r|=y.STENCIL_BUFFER_BIT),y.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(e,t,n,r){this.setRenderTarget(e),this.clear(t,n,r)},this.dispose=function(){t.removeEventListener(\"webglcontextlost\",Le,!1),t.removeEventListener(\"webglcontextrestored\",Re,!1),D.dispose(),U.dispose(),R.dispose(),N.dispose(),Se.dispose(),De.stop()},this.renderBufferImmediate=function(e,t){w.initAttributes();var n=R.get(e);e.hasPositions&&!n.position&&(n.position=y.createBuffer()),e.hasNormals&&!n.normal&&(n.normal=y.createBuffer()),e.hasUvs&&!n.uv&&(n.uv=y.createBuffer()),e.hasColors&&!n.color&&(n.color=y.createBuffer());var r=t.getAttributes();e.hasPositions&&(y.bindBuffer(y.ARRAY_BUFFER,n.position),y.bufferData(y.ARRAY_BUFFER,e.positionArray,y.DYNAMIC_DRAW),w.enableAttribute(r.position),y.vertexAttribPointer(r.position,3,y.FLOAT,!1,0,0)),e.hasNormals&&(y.bindBuffer(y.ARRAY_BUFFER,n.normal),y.bufferData(y.ARRAY_BUFFER,e.normalArray,y.DYNAMIC_DRAW),w.enableAttribute(r.normal),y.vertexAttribPointer(r.normal,3,y.FLOAT,!1,0,0)),e.hasUvs&&(y.bindBuffer(y.ARRAY_BUFFER,n.uv),y.bufferData(y.ARRAY_BUFFER,e.uvArray,y.DYNAMIC_DRAW),w.enableAttribute(r.uv),y.vertexAttribPointer(r.uv,2,y.FLOAT,!1,0,0)),e.hasColors&&(y.bindBuffer(y.ARRAY_BUFFER,n.color),y.bufferData(y.ARRAY_BUFFER,e.colorArray,y.DYNAMIC_DRAW),w.enableAttribute(r.color),y.vertexAttribPointer(r.color,3,y.FLOAT,!1,0,0)),w.disableUnusedAttributes(),y.drawArrays(y.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,r,i,a){var o=i.isMesh&&i.normalMatrix.determinant()<0;w.setMaterial(r,o);var s=ze(e,t,r,i),c=!1;ne.geometry===n.id&&ne.program===s.id&&ne.wireframe===(!0===r.wireframe)||(ne.geometry=n.id,ne.program=s.id,ne.wireframe=!0===r.wireframe,c=!0),i.morphTargetInfluences&&(F.update(i,n,r,s),c=!0);var u,l=n.index,h=n.attributes.position,d=1;!0===r.wireframe&&(l=O.getWireframeAttribute(n),d=2);var p=G;null!==l&&(u=P.get(l),(p=z).setIndex(u)),c&&(!function(e,t,n){if(n&&n.isInstancedBufferGeometry&!b.isWebGL2&&null===x.get(\"ANGLE_instanced_arrays\"))return void console.error(\"THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");w.initAttributes();var r=n.attributes,i=t.getAttributes(),a=e.defaultAttributeValues;for(var o in i){var s=i[o];if(s>=0){var c=r[o];if(void 0!==c){var u=c.normalized,l=c.itemSize,h=P.get(c);if(void 0===h)continue;var d=h.buffer,p=h.type,f=h.bytesPerElement;if(c.isInterleavedBufferAttribute){var m=c.data,g=m.stride,v=c.offset;m&&m.isInstancedInterleavedBuffer?(w.enableAttributeAndDivisor(s,m.meshPerAttribute),void 0===n.maxInstancedCount&&(n.maxInstancedCount=m.meshPerAttribute*m.count)):w.enableAttribute(s),y.bindBuffer(y.ARRAY_BUFFER,d),y.vertexAttribPointer(s,l,p,u,g*f,v*f)}else c.isInstancedBufferAttribute?(w.enableAttributeAndDivisor(s,c.meshPerAttribute),void 0===n.maxInstancedCount&&(n.maxInstancedCount=c.meshPerAttribute*c.count)):w.enableAttribute(s),y.bindBuffer(y.ARRAY_BUFFER,d),y.vertexAttribPointer(s,l,p,u,0,0)}else if(void 0!==a){var _=a[o];if(void 0!==_)switch(_.length){case 2:y.vertexAttrib2fv(s,_);break;case 3:y.vertexAttrib3fv(s,_);break;case 4:y.vertexAttrib4fv(s,_);break;default:y.vertexAttrib1fv(s,_)}}}}w.disableUnusedAttributes()}(r,s,n),null!==l&&y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,u.buffer));var f=1/0;null!==l?f=l.count:void 0!==h&&(f=h.count);var m=n.drawRange.start*d,g=n.drawRange.count*d,v=null!==a?a.start*d:0,_=null!==a?a.count*d:1/0,M=Math.max(m,v),E=Math.min(f,m+g,v+_)-1,T=Math.max(0,E-M+1);if(0!==T){if(i.isMesh)if(!0===r.wireframe)w.setLineWidth(r.wireframeLinewidth*_e()),p.setMode(y.LINES);else switch(i.drawMode){case _t:p.setMode(y.TRIANGLES);break;case Mt:p.setMode(y.TRIANGLE_STRIP);break;case Et:p.setMode(y.TRIANGLE_FAN)}else if(i.isLine){var S=r.linewidth;void 0===S&&(S=1),w.setLineWidth(S*_e()),i.isLineSegments?p.setMode(y.LINES):i.isLineLoop?p.setMode(y.LINE_LOOP):p.setMode(y.LINE_STRIP)}else i.isPoints?p.setMode(y.POINTS):i.isSprite&&p.setMode(y.TRIANGLES);n&&n.isInstancedBufferGeometry?n.maxInstancedCount>0&&p.renderInstances(n,M,T):p.render(M,T)}},this.compile=function(e,t){(m=U.get(e,t)).init(),e.traverse(function(e){e.isLight&&(m.pushLight(e),e.castShadow&&m.pushShadow(e))}),m.setupLights(t),e.traverse(function(t){if(t.material)if(Array.isArray(t.material))for(var n=0;n<t.material.length;n++)Ge(t.material[n],e.fog,t);else Ge(t.material,e.fog,t)})};var Ie=null;var De=new sn;function Ue(e,t,n,r){for(var i=0,a=e.length;i<a;i++){var o=e[i],s=o.object,c=o.geometry,u=void 0===r?o.material:r,l=o.group;if(n.isArrayCamera){ae=n;for(var h=n.cameras,d=0,p=h.length;d<p;d++){var f=h[d];if(s.layers.test(f.layers)){if(\"viewport\"in f)w.viewport(oe.copy(f.viewport));else{var m=f.bounds,g=m.x*le,v=m.y*he,y=m.z*le,x=m.w*he;w.viewport(oe.set(g,v,y,x).multiplyScalar(de))}Be(s,t,f,c,u,l)}}}else ae=null,Be(s,t,n,c,u,l)}}function Be(e,t,n,r,i,a){if(e.onBeforeRender(k,t,n,r,i,a),m=U.get(t,ae||n),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){w.setMaterial(i);var o=ze(n,t.fog,i,e);ne.geometry=null,ne.program=null,ne.wireframe=!1,function(e,t){e.render(function(e){k.renderBufferImmediate(e,t)})}(e,o)}else k.renderBufferDirect(n,t.fog,r,i,e,a);e.onAfterRender(k,t,n,r,i,a),m=U.get(t,ae||n)}function Ge(e,t,n){var r=R.get(e),i=m.state.lights,a=m.state.shadowsArray,o=r.lightsHash,s=i.state.hash,c=I.getParameters(e,i.state,a,t,ve.numPlanes,ve.numIntersection,n),u=I.getProgramCode(e,c),l=r.program,h=!0;if(void 0===l)e.addEventListener(\"dispose\",Oe);else if(l.code!==u)Ne(e);else if(o.stateID!==s.stateID||o.directionalLength!==s.directionalLength||o.pointLength!==s.pointLength||o.spotLength!==s.spotLength||o.rectAreaLength!==s.rectAreaLength||o.hemiLength!==s.hemiLength||o.shadowsLength!==s.shadowsLength)o.stateID=s.stateID,o.directionalLength=s.directionalLength,o.pointLength=s.pointLength,o.spotLength=s.spotLength,o.rectAreaLength=s.rectAreaLength,o.hemiLength=s.hemiLength,o.shadowsLength=s.shadowsLength,h=!1;else{if(void 0!==c.shaderID)return;h=!1}if(h){if(c.shaderID){var d=on[c.shaderID];r.shader={name:e.type,uniforms:tn.clone(d.uniforms),vertexShader:d.vertexShader,fragmentShader:d.fragmentShader}}else r.shader={name:e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};e.onBeforeCompile(r.shader,k),u=I.getProgramCode(e,c),l=I.acquireProgram(e,r.shader,c,u),r.program=l,e.program=l}var p=l.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(var f=0;f<k.maxMorphTargets;f++)p[\"morphTarget\"+f]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;for(f=0;f<k.maxMorphNormals;f++)p[\"morphNormal\"+f]>=0&&e.numSupportedMorphNormals++}var g=r.shader.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(r.numClippingPlanes=ve.numPlanes,r.numIntersection=ve.numIntersection,g.clippingPlanes=ve.uniform),r.fog=t,void 0===o&&(r.lightsHash=o={}),o.stateID=s.stateID,o.directionalLength=s.directionalLength,o.pointLength=s.pointLength,o.spotLength=s.spotLength,o.rectAreaLength=s.rectAreaLength,o.hemiLength=s.hemiLength,o.shadowsLength=s.shadowsLength,e.lights&&(g.ambientLightColor.value=i.state.ambient,g.directionalLights.value=i.state.directional,g.spotLights.value=i.state.spot,g.rectAreaLights.value=i.state.rectArea,g.pointLights.value=i.state.point,g.hemisphereLights.value=i.state.hemi,g.directionalShadowMap.value=i.state.directionalShadowMap,g.directionalShadowMatrix.value=i.state.directionalShadowMatrix,g.spotShadowMap.value=i.state.spotShadowMap,g.spotShadowMatrix.value=i.state.spotShadowMatrix,g.pointShadowMap.value=i.state.pointShadowMap,g.pointShadowMatrix.value=i.state.pointShadowMatrix);var v=r.program.getUniforms(),y=Or.seqWithValue(v.seq,g);r.uniformsList=y}function ze(e,t,n,r){ue=0;var i=R.get(n),a=m.state.lights,o=i.lightsHash,s=a.state.hash;if(ye&&(xe||e!==ie)){var c=e===ie&&n.id===te;ve.setState(n.clippingPlanes,n.clipIntersection,n.clipShadows,e,i,c)}!1===n.needsUpdate&&(void 0===i.program?n.needsUpdate=!0:n.fog&&i.fog!==t?n.needsUpdate=!0:(!n.lights||o.stateID===s.stateID&&o.directionalLength===s.directionalLength&&o.pointLength===s.pointLength&&o.spotLength===s.spotLength&&o.rectAreaLength===s.rectAreaLength&&o.hemiLength===s.hemiLength&&o.shadowsLength===s.shadowsLength)&&(void 0===i.numClippingPlanes||i.numClippingPlanes===ve.numPlanes&&i.numIntersection===ve.numIntersection)||(n.needsUpdate=!0)),n.needsUpdate&&(Ge(n,t,r),n.needsUpdate=!1);var u=!1,l=!1,h=!1,d=i.program,p=d.getUniforms(),f=i.shader.uniforms;if(w.useProgram(d.program)&&(u=!0,l=!0,h=!0),n.id!==te&&(te=n.id,l=!0),u||e!==ie){if(p.setValue(y,\"projectionMatrix\",e.projectionMatrix),b.logarithmicDepthBuffer&&p.setValue(y,\"logDepthBufFC\",2/(Math.log(e.far+1)/Math.LN2)),ie!==(ae||e)&&(ie=ae||e,l=!0,h=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshStandardMaterial||n.envMap){var v=p.map.cameraPosition;void 0!==v&&v.setValue(y,we.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.skinning)&&p.setValue(y,\"viewMatrix\",e.matrixWorldInverse)}if(n.skinning){p.setOptional(y,r,\"bindMatrix\"),p.setOptional(y,r,\"bindMatrixInverse\");var x=r.skeleton;if(x){var _=x.bones;if(b.floatVertexTextures){if(void 0===x.boneTexture){var M=Math.sqrt(4*_.length);M=Bt.ceilPowerOfTwo(M),M=Math.max(M,4);var E=new Float32Array(M*M*4);E.set(x.boneMatrices);var T=new Zt(E,M,M,Fe,Ce);T.needsUpdate=!0,x.boneMatrices=E,x.boneTexture=T,x.boneTextureSize=M}p.setValue(y,\"boneTexture\",x.boneTexture),p.setValue(y,\"boneTextureSize\",x.boneTextureSize)}else p.setOptional(y,x,\"boneMatrices\")}}return l&&(p.setValue(y,\"toneMappingExposure\",k.toneMappingExposure),p.setValue(y,\"toneMappingWhitePoint\",k.toneMappingWhitePoint),n.lights&&function(e,t){e.ambientLightColor.needsUpdate=t,e.directionalLights.needsUpdate=t,e.pointLights.needsUpdate=t,e.spotLights.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}(f,h),t&&n.fog&&function(e,t){e.fogColor.value=t.color,t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)}(f,t),n.isMeshBasicMaterial?He(f,n):n.isMeshLambertMaterial?(He(f,n),function(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(f,n)):n.isMeshPhongMaterial?(He(f,n),n.isMeshToonMaterial?function(e,t){ke(e,t),t.gradientMap&&(e.gradientMap.value=t.gradientMap)}(f,n):ke(f,n)):n.isMeshStandardMaterial?(He(f,n),n.isMeshPhysicalMaterial?function(e,t){je(e,t),e.reflectivity.value=t.reflectivity,e.clearCoat.value=t.clearCoat,e.clearCoatRoughness.value=t.clearCoatRoughness}(f,n):je(f,n)):n.isMeshDepthMaterial?(He(f,n),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(f,n)):n.isMeshDistanceMaterial?(He(f,n),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias);e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(f,n)):n.isMeshNormalMaterial?(He(f,n),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===g&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===g&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(f,n)):n.isLineBasicMaterial?(function(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}(f,n),n.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(f,n)):n.isPointsMaterial?function(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity,e.size.value=t.size*de,e.scale.value=.5*he,e.map.value=t.map,null!==t.map&&(!0===t.map.matrixAutoUpdate&&t.map.updateMatrix(),e.uvTransform.value.copy(t.map.matrix))}(f,n):n.isSpriteMaterial?function(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity,e.rotation.value=t.rotation,e.map.value=t.map,null!==t.map&&(!0===t.map.matrixAutoUpdate&&t.map.updateMatrix(),e.uvTransform.value.copy(t.map.matrix))}(f,n):n.isShadowMaterial&&(f.color.value=n.color,f.opacity.value=n.opacity),void 0!==f.ltc_1&&(f.ltc_1.value=an.LTC_1),void 0!==f.ltc_2&&(f.ltc_2.value=an.LTC_2),Or.upload(y,i.uniformsList,f,k)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(Or.upload(y,i.uniformsList,f,k),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&p.setValue(y,\"center\",r.center),p.setValue(y,\"modelViewMatrix\",r.modelViewMatrix),p.setValue(y,\"normalMatrix\",r.normalMatrix),p.setValue(y,\"modelMatrix\",r.matrixWorld),d}function He(e,t){var n;e.opacity.value=t.opacity,t.color&&(e.diffuse.value=t.color),t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.specularMap&&(e.specularMap.value=t.specularMap),t.envMap&&(e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap&&t.envMap.isCubeTexture?-1:1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio,e.maxMipLevel.value=R.get(t.envMap).__maxMipLevel),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity),t.map?n=t.map:t.specularMap?n=t.specularMap:t.displacementMap?n=t.displacementMap:t.normalMap?n=t.normalMap:t.bumpMap?n=t.bumpMap:t.roughnessMap?n=t.roughnessMap:t.metalnessMap?n=t.metalnessMap:t.alphaMap?n=t.alphaMap:t.emissiveMap&&(n=t.emissiveMap),void 0!==n&&(n.isWebGLRenderTarget&&(n=n.texture),!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}function ke(e,t){e.specular.value=t.specular,e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===g&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===g&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function je(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===g&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===g&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),t.envMap&&(e.envMapIntensity.value=t.envMapIntensity)}De.setAnimationLoop(function(e){Se.isPresenting()||Ie&&Ie(e)}),\"undefined\"!=typeof window&&De.setContext(window),this.setAnimationLoop=function(e){Ie=e,Se.setAnimationLoop(e),De.start()},this.render=function(e,t,n,r){if(t&&t.isCamera){if(!j){ne.geometry=null,ne.program=null,ne.wireframe=!1,te=-1,ie=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),Se.enabled&&(t=Se.getCamera(t)),(m=U.get(e,t)).init(),e.onBeforeRender(k,e,t,n),be.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),ge.setFromMatrix(be),xe=this.localClippingEnabled,ye=ve.init(this.clippingPlanes,xe,t),(f=D.get(e,t)).init(),function e(t,n,r){if(!1===t.visible)return;var i=t.layers.test(n.layers);if(i)if(t.isLight)m.pushLight(t),t.castShadow&&m.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||ge.intersectsSprite(t)){r&&we.setFromMatrixPosition(t.matrixWorld).applyMatrix4(be);var a=N.update(t),o=t.material;f.push(t,a,o,we.z,null)}}else if(t.isImmediateRenderObject)r&&we.setFromMatrixPosition(t.matrixWorld).applyMatrix4(be),f.push(t,null,t.material,we.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.update(),!t.frustumCulled||ge.intersectsObject(t))){r&&we.setFromMatrixPosition(t.matrixWorld).applyMatrix4(be);var a=N.update(t),o=t.material;if(Array.isArray(o))for(var s=a.groups,c=0,u=s.length;c<u;c++){var l=s[c],h=o[l.materialIndex];h&&h.visible&&f.push(t,a,h,we.z,l)}else o.visible&&f.push(t,a,o,we.z,null)}var d=t.children;for(var c=0,u=d.length;c<u;c++)e(d[c],n,r)}(e,t,k.sortObjects),!0===k.sortObjects&&f.sort(),ye&&ve.beginShadows();var i=m.state.shadowsArray;Ae.render(i,e,t),m.setupLights(t),ye&&ve.endShadows(),this.info.autoReset&&this.info.reset(),void 0===n&&(n=null),this.setRenderTarget(n),B.render(f,e,t,r);var a=f.opaque,o=f.transparent;if(e.overrideMaterial){var s=e.overrideMaterial;a.length&&Ue(a,e,t,s),o.length&&Ue(o,e,t,s)}else a.length&&Ue(a,e,t),o.length&&Ue(o,e,t);n&&C.updateRenderTargetMipmap(n),w.buffers.depth.setTest(!0),w.buffers.depth.setMask(!0),w.buffers.color.setMask(!0),w.setPolygonOffset(!1),e.onAfterRender(k,e,t),Se.enabled&&Se.submitFrame(),f=null,m=null}}else console.error(\"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\")},this.allocTextureUnit=function(){var e=ue;return e>=b.maxTextures&&console.warn(\"THREE.WebGLRenderer: Trying to use \"+e+\" texture units while this GPU supports only \"+b.maxTextures),ue+=1,e},this.setTexture2D=function(){var e=!1;return function(t,n){t&&t.isWebGLRenderTarget&&(e||(console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\"),e=!0),t=t.texture),C.setTexture2D(t,n)}}(),this.setTexture=function(){var e=!1;return function(t,n){e||(console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\"),e=!0),C.setTexture2D(t,n)}}(),this.setTextureCube=function(){var e=!1;return function(t,n){t&&t.isWebGLRenderTargetCube&&(e||(console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\"),e=!0),t=t.texture),t&&t.isCubeTexture||Array.isArray(t.image)&&6===t.image.length?C.setTextureCube(t,n):C.setTextureCubeDynamic(t,n)}}(),this.setFramebuffer=function(e){V=e},this.getRenderTarget=function(){return $},this.setRenderTarget=function(e){$=e,e&&void 0===R.get(e).__webglFramebuffer&&C.setupRenderTarget(e);var t=V,n=!1;if(e){var r=R.get(e).__webglFramebuffer;e.isWebGLRenderTargetCube?(t=r[e.activeCubeFace],n=!0):t=r,oe.copy(e.viewport),se.copy(e.scissor),ce=e.scissorTest}else oe.copy(pe).multiplyScalar(de),se.copy(fe).multiplyScalar(de),ce=me;if(ee!==t&&(y.bindFramebuffer(y.FRAMEBUFFER,t),ee=t),w.viewport(oe),w.scissor(se),w.setScissorTest(ce),n){var i=R.get(e.texture);y.framebufferTexture2D(y.FRAMEBUFFER,y.COLOR_ATTACHMENT0,y.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,i.__webglTexture,e.activeMipMapLevel)}},this.readRenderTargetPixels=function(e,t,n,r,i,a){if(e&&e.isWebGLRenderTarget){var o=R.get(e).__webglFramebuffer;if(o){var s=!1;o!==ee&&(y.bindFramebuffer(y.FRAMEBUFFER,o),s=!0);try{var c=e.texture,u=c.format,l=c.type;if(u!==Fe&&H.convert(u)!==y.getParameter(y.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.\");if(!(l===Ee||H.convert(l)===y.getParameter(y.IMPLEMENTATION_COLOR_READ_TYPE)||l===Ce&&(b.isWebGL2||x.get(\"OES_texture_float\")||x.get(\"WEBGL_color_buffer_float\"))||l===Pe&&(b.isWebGL2?x.get(\"EXT_color_buffer_float\"):x.get(\"EXT_color_buffer_half_float\"))))return void console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.\");y.checkFramebufferStatus(y.FRAMEBUFFER)===y.FRAMEBUFFER_COMPLETE?t>=0&&t<=e.width-r&&n>=0&&n<=e.height-i&&y.readPixels(t,n,r,i,H.convert(u),H.convert(l),a):console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.\")}finally{s&&y.bindFramebuffer(y.FRAMEBUFFER,ee)}}}else console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\")},this.copyFramebufferToTexture=function(e,t,n){var r=t.image.width,i=t.image.height,a=H.convert(t.format);this.setTexture2D(t,0),y.copyTexImage2D(y.TEXTURE_2D,n||0,a,e.x,e.y,r,i,0)},this.copyTextureToTexture=function(e,t,n,r){var i=t.image.width,a=t.image.height,o=H.convert(n.format),s=H.convert(n.type);this.setTexture2D(n,0),t.isDataTexture?y.texSubImage2D(y.TEXTURE_2D,r||0,e.x,e.y,i,a,o,s,t.image.data):y.texSubImage2D(y.TEXTURE_2D,r||0,e.x,e.y,o,s,t.image)}}function si(e,t){this.name=\"\",this.color=new rn(e),this.density=void 0!==t?t:25e-5}function ci(e,t,n){this.name=\"\",this.color=new rn(e),this.near=void 0!==t?t:1,this.far=void 0!==n?n:1e3}function ui(){dn.call(this),this.type=\"Scene\",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}function li(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function hi(e,t,n,r){this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===r}function di(e){Bn.call(this),this.type=\"SpriteMaterial\",this.color=new rn(16777215),this.map=null,this.rotation=0,this.lights=!1,this.transparent=!0,this.setValues(e)}function pi(e){if(dn.call(this),this.type=\"Sprite\",void 0===qr){qr=new Pn;var t=new li(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);qr.setIndex([0,1,2,0,2,3]),qr.addAttribute(\"position\",new hi(t,3,0,!1)),qr.addAttribute(\"uv\",new hi(t,2,3,!1))}this.geometry=qr,this.material=void 0!==e?e:new di,this.center=new Ft(.5,.5)}function fi(){dn.call(this),this.type=\"LOD\",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}function mi(e,t){if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn(\"THREE.Skeleton boneInverses is the wrong length.\"),this.boneInverses=[];for(var n=0,r=this.bones.length;n<r;n++)this.boneInverses.push(new Gt)}}function gi(){dn.call(this),this.type=\"Bone\"}function vi(e,t){kn.call(this,e,t),this.type=\"SkinnedMesh\",this.bindMode=\"attached\",this.bindMatrix=new Gt,this.bindMatrixInverse=new Gt;var n=new mi(this.initBones());this.bind(n,this.matrixWorld),this.normalizeSkinWeights()}function yi(e){Bn.call(this),this.type=\"LineBasicMaterial\",this.color=new rn(16777215),this.linewidth=1,this.linecap=\"round\",this.linejoin=\"round\",this.lights=!1,this.setValues(e)}function xi(e,t,n){1===n&&console.error(\"THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.\"),dn.call(this),this.type=\"Line\",this.geometry=void 0!==e?e:new Pn,this.material=void 0!==t?t:new yi({color:16777215*Math.random()})}function bi(e,t){xi.call(this,e,t),this.type=\"LineSegments\"}function wi(e,t){xi.call(this,e,t),this.type=\"LineLoop\"}function _i(e){Bn.call(this),this.type=\"PointsMaterial\",this.color=new rn(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.lights=!1,this.setValues(e)}function Mi(e,t){dn.call(this),this.type=\"Points\",this.geometry=void 0!==e?e:new Pn,this.material=void 0!==t?t:new _i({color:16777215*Math.random()})}function Ei(e,t,n,r,i,a,o,s,c){Wt.call(this,e,t,n,r,i,a,o,s,c),this.generateMipmaps=!1}function Ti(e,t,n,r,i,a,o,s,c,u,l,h){Wt.call(this,null,a,o,s,c,u,r,i,l,h),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}function Si(e,t,n,r,i,a,o,s,c){Wt.call(this,e,t,n,r,i,a,o,s,c),this.needsUpdate=!0}function Ai(e,t,n,r,i,a,o,s,c,u){if((u=void 0!==u?u:ke)!==ke&&u!==je)throw new Error(\"DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat\");void 0===n&&u===ke&&(n=Ae),void 0===n&&u===je&&(n=De),Wt.call(this,null,r,i,a,o,s,u,n,c),this.image={width:e,height:t},this.magFilter=void 0!==o?o:ye,this.minFilter=void 0!==s?s:ye,this.flipY=!1,this.generateMipmaps=!1}function Li(e){Pn.call(this),this.type=\"WireframeGeometry\";var t,n,r,i,a,o,s,c,u,l,h=[],d=[0,0],p={},f=[\"a\",\"b\",\"c\"];if(e&&e.isGeometry){var m=e.faces;for(t=0,r=m.length;t<r;t++){var g=m[t];for(n=0;n<3;n++)s=g[f[n]],c=g[f[(n+1)%3]],d[0]=Math.min(s,c),d[1]=Math.max(s,c),void 0===p[u=d[0]+\",\"+d[1]]&&(p[u]={index1:d[0],index2:d[1]})}for(u in p)o=p[u],l=e.vertices[o.index1],h.push(l.x,l.y,l.z),l=e.vertices[o.index2],h.push(l.x,l.y,l.z)}else if(e&&e.isBufferGeometry){var v,y,x,b,w,_,M;if(l=new Ht,null!==e.index){for(v=e.attributes.position,y=e.index,0===(x=e.groups).length&&(x=[{start:0,count:y.count,materialIndex:0}]),i=0,a=x.length;i<a;++i)for(t=w=(b=x[i]).start,r=w+b.count;t<r;t+=3)for(n=0;n<3;n++)s=y.getX(t+n),c=y.getX(t+(n+1)%3),d[0]=Math.min(s,c),d[1]=Math.max(s,c),void 0===p[u=d[0]+\",\"+d[1]]&&(p[u]={index1:d[0],index2:d[1]});for(u in p)o=p[u],l.fromBufferAttribute(v,o.index1),h.push(l.x,l.y,l.z),l.fromBufferAttribute(v,o.index2),h.push(l.x,l.y,l.z)}else for(t=0,r=(v=e.attributes.position).count/3;t<r;t++)for(n=0;n<3;n++)_=3*t+n,l.fromBufferAttribute(v,_),h.push(l.x,l.y,l.z),M=3*t+(n+1)%3,l.fromBufferAttribute(v,M),h.push(l.x,l.y,l.z)}this.addAttribute(\"position\",new Sn(h,3))}function Ri(e,t,n){vn.call(this),this.type=\"ParametricGeometry\",this.parameters={func:e,slices:t,stacks:n},this.fromBufferGeometry(new Ci(e,t,n)),this.mergeVertices()}function Ci(e,t,n){Pn.call(this),this.type=\"ParametricBufferGeometry\",this.parameters={func:e,slices:t,stacks:n};var r,i,a=[],o=[],s=[],c=[],u=new Ht,l=new Ht,h=new Ht,d=new Ht,p=new Ht;e.length<3&&console.error(\"THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.\");var f=t+1;for(r=0;r<=n;r++){var m=r/n;for(i=0;i<=t;i++){var g=i/t;e(g,m,l),o.push(l.x,l.y,l.z),g-1e-5>=0?(e(g-1e-5,m,h),d.subVectors(l,h)):(e(g+1e-5,m,h),d.subVectors(h,l)),m-1e-5>=0?(e(g,m-1e-5,h),p.subVectors(l,h)):(e(g,m+1e-5,h),p.subVectors(h,l)),u.crossVectors(d,p).normalize(),s.push(u.x,u.y,u.z),c.push(g,m)}}for(r=0;r<n;r++)for(i=0;i<t;i++){var v=r*f+i,y=r*f+i+1,x=(r+1)*f+i+1,b=(r+1)*f+i;a.push(v,y,b),a.push(y,x,b)}this.setIndex(a),this.addAttribute(\"position\",new Sn(o,3)),this.addAttribute(\"normal\",new Sn(s,3)),this.addAttribute(\"uv\",new Sn(c,2))}function Pi(e,t,n,r){vn.call(this),this.type=\"PolyhedronGeometry\",this.parameters={vertices:e,indices:t,radius:n,detail:r},this.fromBufferGeometry(new Oi(e,t,n,r)),this.mergeVertices()}function Oi(e,t,n,r){Pn.call(this),this.type=\"PolyhedronBufferGeometry\",this.parameters={vertices:e,indices:t,radius:n,detail:r},n=n||1;var i=[],a=[];function o(e,t,n,r){var i,a,o=Math.pow(2,r),c=[];for(i=0;i<=o;i++){c[i]=[];var u=e.clone().lerp(n,i/o),l=t.clone().lerp(n,i/o),h=o-i;for(a=0;a<=h;a++)c[i][a]=0===a&&i===o?u:u.clone().lerp(l,a/h)}for(i=0;i<o;i++)for(a=0;a<2*(o-i)-1;a++){var d=Math.floor(a/2);a%2==0?(s(c[i][d+1]),s(c[i+1][d]),s(c[i][d])):(s(c[i][d+1]),s(c[i+1][d+1]),s(c[i+1][d]))}}function s(e){i.push(e.x,e.y,e.z)}function c(t,n){var r=3*t;n.x=e[r+0],n.y=e[r+1],n.z=e[r+2]}function u(e,t,n,r){r<0&&1===e.x&&(a[t]=e.x-1),0===n.x&&0===n.z&&(a[t]=r/2/Math.PI+.5)}function l(e){return Math.atan2(e.z,-e.x)}function h(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}!function(e){for(var n=new Ht,r=new Ht,i=new Ht,a=0;a<t.length;a+=3)c(t[a+0],n),c(t[a+1],r),c(t[a+2],i),o(n,r,i,e)}(r=r||0),function(e){for(var t=new Ht,n=0;n<i.length;n+=3)t.x=i[n+0],t.y=i[n+1],t.z=i[n+2],t.normalize().multiplyScalar(e),i[n+0]=t.x,i[n+1]=t.y,i[n+2]=t.z}(n),function(){for(var e=new Ht,t=0;t<i.length;t+=3){e.x=i[t+0],e.y=i[t+1],e.z=i[t+2];var n=l(e)/2/Math.PI+.5,r=h(e)/Math.PI+.5;a.push(n,1-r)}(function(){for(var e=new Ht,t=new Ht,n=new Ht,r=new Ht,o=new Ft,s=new Ft,c=new Ft,h=0,d=0;h<i.length;h+=9,d+=6){e.set(i[h+0],i[h+1],i[h+2]),t.set(i[h+3],i[h+4],i[h+5]),n.set(i[h+6],i[h+7],i[h+8]),o.set(a[d+0],a[d+1]),s.set(a[d+2],a[d+3]),c.set(a[d+4],a[d+5]),r.copy(e).add(t).add(n).divideScalar(3);var p=l(r);u(o,d+0,e,p),u(s,d+2,t,p),u(c,d+4,n,p)}})(),function(){for(var e=0;e<a.length;e+=6){var t=a[e+0],n=a[e+2],r=a[e+4],i=Math.max(t,n,r),o=Math.min(t,n,r);i>.9&&o<.1&&(t<.2&&(a[e+0]+=1),n<.2&&(a[e+2]+=1),r<.2&&(a[e+4]+=1))}}()}(),this.addAttribute(\"position\",new Sn(i,3)),this.addAttribute(\"normal\",new Sn(i.slice(),3)),this.addAttribute(\"uv\",new Sn(a,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}function Ni(e,t){vn.call(this),this.type=\"TetrahedronGeometry\",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Ii(e,t)),this.mergeVertices()}function Ii(e,t){Oi.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type=\"TetrahedronBufferGeometry\",this.parameters={radius:e,detail:t}}function Di(e,t){vn.call(this),this.type=\"OctahedronGeometry\",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Ui(e,t)),this.mergeVertices()}function Ui(e,t){Oi.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type=\"OctahedronBufferGeometry\",this.parameters={radius:e,detail:t}}function Bi(e,t){vn.call(this),this.type=\"IcosahedronGeometry\",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Fi(e,t)),this.mergeVertices()}function Fi(e,t){var n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1];Oi.call(this,r,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type=\"IcosahedronBufferGeometry\",this.parameters={radius:e,detail:t}}function Gi(e,t){vn.call(this),this.type=\"DodecahedronGeometry\",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new zi(e,t)),this.mergeVertices()}function zi(e,t){var n=(1+Math.sqrt(5))/2,r=1/n,i=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r];Oi.call(this,i,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type=\"DodecahedronBufferGeometry\",this.parameters={radius:e,detail:t}}function Hi(e,t,n,r,i,a){vn.call(this),this.type=\"TubeGeometry\",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:i},void 0!==a&&console.warn(\"THREE.TubeGeometry: taper has been removed.\");var o=new ki(e,t,n,r,i);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}function ki(e,t,n,r,i){Pn.call(this),this.type=\"TubeBufferGeometry\",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:i},t=t||64,n=n||1,r=r||8,i=i||!1;var a=e.computeFrenetFrames(t,i);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;var o,s,c=new Ht,u=new Ht,l=new Ft,h=new Ht,d=[],p=[],f=[],m=[];function g(i){h=e.getPointAt(i/t,h);var o=a.normals[i],l=a.binormals[i];for(s=0;s<=r;s++){var f=s/r*Math.PI*2,m=Math.sin(f),g=-Math.cos(f);u.x=g*o.x+m*l.x,u.y=g*o.y+m*l.y,u.z=g*o.z+m*l.z,u.normalize(),p.push(u.x,u.y,u.z),c.x=h.x+n*u.x,c.y=h.y+n*u.y,c.z=h.z+n*u.z,d.push(c.x,c.y,c.z)}}!function(){for(o=0;o<t;o++)g(o);g(!1===i?t:0),function(){for(o=0;o<=t;o++)for(s=0;s<=r;s++)l.x=o/t,l.y=s/r,f.push(l.x,l.y)}(),function(){for(s=1;s<=t;s++)for(o=1;o<=r;o++){var e=(r+1)*(s-1)+(o-1),n=(r+1)*s+(o-1),i=(r+1)*s+o,a=(r+1)*(s-1)+o;m.push(e,n,a),m.push(n,i,a)}}()}(),this.setIndex(m),this.addAttribute(\"position\",new Sn(d,3)),this.addAttribute(\"normal\",new Sn(p,3)),this.addAttribute(\"uv\",new Sn(f,2))}function ji(e,t,n,r,i,a,o){vn.call(this),this.type=\"TorusKnotGeometry\",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:i,q:a},void 0!==o&&console.warn(\"THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.\"),this.fromBufferGeometry(new Vi(e,t,n,r,i,a)),this.mergeVertices()}function Vi(e,t,n,r,i,a){Pn.call(this),this.type=\"TorusKnotBufferGeometry\",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:i,q:a},e=e||1,t=t||.4,n=Math.floor(n)||64,r=Math.floor(r)||8,i=i||2,a=a||3;var o,s,c=[],u=[],l=[],h=[],d=new Ht,p=new Ht,f=new Ht,m=new Ht,g=new Ht,v=new Ht,y=new Ht;for(o=0;o<=n;++o){var x=o/n*i*Math.PI*2;for(A(x,i,a,e,f),A(x+.01,i,a,e,m),v.subVectors(m,f),y.addVectors(m,f),g.crossVectors(v,y),y.crossVectors(g,v),g.normalize(),y.normalize(),s=0;s<=r;++s){var b=s/r*Math.PI*2,w=-t*Math.cos(b),_=t*Math.sin(b);d.x=f.x+(w*y.x+_*g.x),d.y=f.y+(w*y.y+_*g.y),d.z=f.z+(w*y.z+_*g.z),u.push(d.x,d.y,d.z),p.subVectors(d,f).normalize(),l.push(p.x,p.y,p.z),h.push(o/n),h.push(s/r)}}for(s=1;s<=n;s++)for(o=1;o<=r;o++){var M=(r+1)*(s-1)+(o-1),E=(r+1)*s+(o-1),T=(r+1)*s+o,S=(r+1)*(s-1)+o;c.push(M,E,S),c.push(E,T,S)}function A(e,t,n,r,i){var a=Math.cos(e),o=Math.sin(e),s=n/t*e,c=Math.cos(s);i.x=r*(2+c)*.5*a,i.y=r*(2+c)*o*.5,i.z=r*Math.sin(s)*.5}this.setIndex(c),this.addAttribute(\"position\",new Sn(u,3)),this.addAttribute(\"normal\",new Sn(l,3)),this.addAttribute(\"uv\",new Sn(h,2))}function Wi(e,t,n,r,i){vn.call(this),this.type=\"TorusGeometry\",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i},this.fromBufferGeometry(new Xi(e,t,n,r,i)),this.mergeVertices()}function Xi(e,t,n,r,i){Pn.call(this),this.type=\"TorusBufferGeometry\",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i},e=e||1,t=t||.4,n=Math.floor(n)||8,r=Math.floor(r)||6,i=i||2*Math.PI;var a,o,s=[],c=[],u=[],l=[],h=new Ht,d=new Ht,p=new Ht;for(a=0;a<=n;a++)for(o=0;o<=r;o++){var f=o/r*i,m=a/n*Math.PI*2;d.x=(e+t*Math.cos(m))*Math.cos(f),d.y=(e+t*Math.cos(m))*Math.sin(f),d.z=t*Math.sin(m),c.push(d.x,d.y,d.z),h.x=e*Math.cos(f),h.y=e*Math.sin(f),p.subVectors(d,h).normalize(),u.push(p.x,p.y,p.z),l.push(o/r),l.push(a/n)}for(a=1;a<=n;a++)for(o=1;o<=r;o++){var g=(r+1)*a+o-1,v=(r+1)*(a-1)+o-1,y=(r+1)*(a-1)+o,x=(r+1)*a+o;s.push(g,v,x),s.push(v,y,x)}this.setIndex(s),this.addAttribute(\"position\",new Sn(c,3)),this.addAttribute(\"normal\",new Sn(u,3)),this.addAttribute(\"uv\",new Sn(l,2))}Kr.prototype=Object.create(Bn.prototype),Kr.prototype.constructor=Kr,Kr.prototype.isMeshDepthMaterial=!0,Kr.prototype.copy=function(e){return Bn.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},Qr.prototype=Object.create(Bn.prototype),Qr.prototype.constructor=Qr,Qr.prototype.isMeshDistanceMaterial=!0,Qr.prototype.copy=function(e){return Bn.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this},ni.prototype=Object.assign(Object.create(dn.prototype),{constructor:ni,isGroup:!0}),ri.prototype=Object.assign(Object.create(pn.prototype),{constructor:ri,isPerspectiveCamera:!0,copy:function(e,t){return pn.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){var t=.5*this.getFilmHeight()/e;this.fov=2*Bt.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){var e=Math.tan(.5*Bt.DEG2RAD*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*Bt.RAD2DEG*Math.atan(Math.tan(.5*Bt.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,r,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=this.near,t=e*Math.tan(.5*Bt.DEG2RAD*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r,a=this.view;if(null!==this.view&&this.view.enabled){var o=a.fullWidth,s=a.fullHeight;i+=a.offsetX*r/o,t-=a.offsetY*n/s,r*=a.width/o,n*=a.height/s}var c=this.filmOffset;0!==c&&(i+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far)},toJSON:function(e){var t=dn.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}),ii.prototype=Object.assign(Object.create(ri.prototype),{constructor:ii,isArrayCamera:!0}),si.prototype.isFogExp2=!0,si.prototype.clone=function(){return new si(this.color,this.density)},si.prototype.toJSON=function(){return{type:\"FogExp2\",color:this.color.getHex(),density:this.density}},ci.prototype.isFog=!0,ci.prototype.clone=function(){return new ci(this.color,this.near,this.far)},ci.prototype.toJSON=function(){return{type:\"Fog\",color:this.color.getHex(),near:this.near,far:this.far}},ui.prototype=Object.assign(Object.create(dn.prototype),{constructor:ui,copy:function(e,t){return dn.prototype.copy.call(this,e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},toJSON:function(e){var t=dn.prototype.toJSON.call(this,e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}),Object.defineProperty(li.prototype,\"needsUpdate\",{set:function(e){!0===e&&this.version++}}),Object.assign(li.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setArray:function(e){if(Array.isArray(e))throw new TypeError(\"THREE.BufferAttribute: array should be a Typed Array.\");return this.count=void 0!==e?e.length/this.stride:0,this.array=e,this},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.dynamic=e.dynamic,this},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(var r=0,i=this.stride;r<i;r++)this.array[e+r]=t.array[n+r];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(e){return this.onUploadCallback=e,this}}),Object.defineProperties(hi.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(hi.prototype,{isInterleavedBufferAttribute:!0,setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=i,this}}),di.prototype=Object.create(Bn.prototype),di.prototype.constructor=di,di.prototype.isSpriteMaterial=!0,di.prototype.copy=function(e){return Bn.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.rotation=e.rotation,this},pi.prototype=Object.assign(Object.create(dn.prototype),{constructor:pi,isSprite:!0,raycast:function(){var e=new Ht,t=new Ht,n=new Ht,r=new Ft,i=new Ft,a=new Gt,o=new Ht,s=new Ht,c=new Ht;function u(e,t,n,o,s,c){r.subVectors(e,n).addScalar(.5).multiply(o),void 0!==s?(i.x=c*r.x-s*r.y,i.y=s*r.x+c*r.y):i.copy(r),e.copy(t),e.x+=i.x,e.y+=i.y,e.applyMatrix4(a)}return function(r,i){t.setFromMatrixScale(this.matrixWorld),a.getInverse(this.modelViewMatrix).premultiply(this.matrixWorld),n.setFromMatrixPosition(this.modelViewMatrix);var l,h,d=this.material.rotation;0!==d&&(h=Math.cos(d),l=Math.sin(d));var p=this.center;u(o.set(-.5,-.5,0),n,p,t,l,h),u(s.set(.5,-.5,0),n,p,t,l,h),u(c.set(.5,.5,0),n,p,t,l,h);var f=r.ray.intersectTriangle(o,s,c,!1,e);if(null!==f||(u(s.set(-.5,.5,0),n,p,t,l,h),null!==(f=r.ray.intersectTriangle(o,c,s,!1,e)))){var m=r.ray.origin.distanceTo(e);m<r.near||m>r.far||i.push({distance:m,point:e.clone(),face:null,object:this})}}}(),clone:function(){return new this.constructor(this.material).copy(this)},copy:function(e){return dn.prototype.copy.call(this,e),void 0!==e.center&&this.center.copy(e.center),this}}),fi.prototype=Object.assign(Object.create(dn.prototype),{constructor:fi,copy:function(e){dn.prototype.copy.call(this,e,!1);for(var t=e.levels,n=0,r=t.length;n<r;n++){var i=t[n];this.addLevel(i.object.clone(),i.distance)}return this},addLevel:function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var n=this.levels,r=0;r<n.length&&!(t<n[r].distance);r++);n.splice(r,0,{distance:t,object:e}),this.add(e)},getObjectForDistance:function(e){for(var t=this.levels,n=1,r=t.length;n<r&&!(e<t[n].distance);n++);return t[n-1].object},raycast:function(){var e=new Ht;return function(t,n){e.setFromMatrixPosition(this.matrixWorld);var r=t.ray.origin.distanceTo(e);this.getObjectForDistance(r).raycast(t,n)}}(),update:function(){var e=new Ht,t=new Ht;return function(n){var r=this.levels;if(r.length>1){e.setFromMatrixPosition(n.matrixWorld),t.setFromMatrixPosition(this.matrixWorld);var i=e.distanceTo(t);r[0].object.visible=!0;for(var a=1,o=r.length;a<o&&i>=r[a].distance;a++)r[a-1].object.visible=!1,r[a].object.visible=!0;for(;a<o;a++)r[a].object.visible=!1}}}(),toJSON:function(e){var t=dn.prototype.toJSON.call(this,e);t.object.levels=[];for(var n=this.levels,r=0,i=n.length;r<i;r++){var a=n[r];t.object.levels.push({object:a.object.uuid,distance:a.distance})}return t}}),Object.assign(mi.prototype,{calculateInverses:function(){this.boneInverses=[];for(var e=0,t=this.bones.length;e<t;e++){var n=new Gt;this.bones[e]&&n.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(n)}},pose:function(){var e,t,n;for(t=0,n=this.bones.length;t<n;t++)(e=this.bones[t])&&e.matrixWorld.getInverse(this.boneInverses[t]);for(t=0,n=this.bones.length;t<n;t++)(e=this.bones[t])&&(e.parent&&e.parent.isBone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},update:function(){var e=new Gt,t=new Gt;return function(){for(var n=this.bones,r=this.boneInverses,i=this.boneMatrices,a=this.boneTexture,o=0,s=n.length;o<s;o++){var c=n[o]?n[o].matrixWorld:t;e.multiplyMatrices(c,r[o]),e.toArray(i,16*o)}void 0!==a&&(a.needsUpdate=!0)}}(),clone:function(){return new mi(this.bones,this.boneInverses)},getBoneByName:function(e){for(var t=0,n=this.bones.length;t<n;t++){var r=this.bones[t];if(r.name===e)return r}}}),gi.prototype=Object.assign(Object.create(dn.prototype),{constructor:gi,isBone:!0}),vi.prototype=Object.assign(Object.create(kn.prototype),{constructor:vi,isSkinnedMesh:!0,initBones:function(){var e,t,n,r,i=[];if(this.geometry&&void 0!==this.geometry.bones){for(n=0,r=this.geometry.bones.length;n<r;n++)t=this.geometry.bones[n],e=new gi,i.push(e),e.name=t.name,e.position.fromArray(t.pos),e.quaternion.fromArray(t.rotq),void 0!==t.scl&&e.scale.fromArray(t.scl);for(n=0,r=this.geometry.bones.length;n<r;n++)-1!==(t=this.geometry.bones[n]).parent&&null!==t.parent&&void 0!==i[t.parent]?i[t.parent].add(i[n]):this.add(i[n])}return this.updateMatrixWorld(!0),i},bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){var e,t;if(this.geometry&&this.geometry.isGeometry)for(t=0;t<this.geometry.skinWeights.length;t++){var n=this.geometry.skinWeights[t];(e=1/n.manhattanLength())!==1/0?n.multiplyScalar(e):n.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry){var r=new Xt,i=this.geometry.attributes.skinWeight;for(t=0;t<i.count;t++)r.x=i.getX(t),r.y=i.getY(t),r.z=i.getZ(t),r.w=i.getW(t),(e=1/r.manhattanLength())!==1/0?r.multiplyScalar(e):r.set(1,0,0,0),i.setXYZW(t,r.x,r.y,r.z,r.w)}},updateMatrixWorld:function(e){kn.prototype.updateMatrixWorld.call(this,e),\"attached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):\"detached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn(\"THREE.SkinnedMesh: Unrecognized bindMode: \"+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),yi.prototype=Object.create(Bn.prototype),yi.prototype.constructor=yi,yi.prototype.isLineBasicMaterial=!0,yi.prototype.copy=function(e){return Bn.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this},xi.prototype=Object.assign(Object.create(dn.prototype),{constructor:xi,isLine:!0,computeLineDistances:function(){var e=new Ht,t=new Ht;return function(){var n=this.geometry;if(n.isBufferGeometry)if(null===n.index){for(var r=n.attributes.position,i=[0],a=1,o=r.count;a<o;a++)e.fromBufferAttribute(r,a-1),t.fromBufferAttribute(r,a),i[a]=i[a-1],i[a]+=e.distanceTo(t);n.addAttribute(\"lineDistance\",new Sn(i,1))}else console.warn(\"THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.\");else if(n.isGeometry){var s=n.vertices;(i=n.lineDistances)[0]=0;for(a=1,o=s.length;a<o;a++)i[a]=i[a-1],i[a]+=s[a-1].distanceTo(s[a])}return this}}(),raycast:function(){var e=new Gt,t=new zn,n=new Kt;return function(r,i){var a=r.linePrecision,o=a*a,s=this.geometry,c=this.matrixWorld;if(null===s.boundingSphere&&s.computeBoundingSphere(),n.copy(s.boundingSphere),n.applyMatrix4(c),!1!==r.ray.intersectsSphere(n)){e.getInverse(c),t.copy(r.ray).applyMatrix4(e);var u=new Ht,l=new Ht,h=new Ht,d=new Ht,p=this&&this.isLineSegments?2:1;if(s.isBufferGeometry){var f=s.index,m=s.attributes.position.array;if(null!==f)for(var g=f.array,v=0,y=g.length-1;v<y;v+=p){var x=g[v],b=g[v+1];if(u.fromArray(m,3*x),l.fromArray(m,3*b),!(t.distanceSqToSegment(u,l,d,h)>o))d.applyMatrix4(this.matrixWorld),(M=r.ray.origin.distanceTo(d))<r.near||M>r.far||i.push({distance:M,point:h.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}else for(v=0,y=m.length/3-1;v<y;v+=p){if(u.fromArray(m,3*v),l.fromArray(m,3*v+3),!(t.distanceSqToSegment(u,l,d,h)>o))d.applyMatrix4(this.matrixWorld),(M=r.ray.origin.distanceTo(d))<r.near||M>r.far||i.push({distance:M,point:h.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else if(s.isGeometry){var w=s.vertices,_=w.length;for(v=0;v<_-1;v+=p){var M;if(!(t.distanceSqToSegment(w[v],w[v+1],d,h)>o))d.applyMatrix4(this.matrixWorld),(M=r.ray.origin.distanceTo(d))<r.near||M>r.far||i.push({distance:M,point:h.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),bi.prototype=Object.assign(Object.create(xi.prototype),{constructor:bi,isLineSegments:!0,computeLineDistances:function(){var e=new Ht,t=new Ht;return function(){var n=this.geometry;if(n.isBufferGeometry)if(null===n.index){for(var r=n.attributes.position,i=[],a=0,o=r.count;a<o;a+=2)e.fromBufferAttribute(r,a),t.fromBufferAttribute(r,a+1),i[a]=0===a?0:i[a-1],i[a+1]=i[a]+e.distanceTo(t);n.addAttribute(\"lineDistance\",new Sn(i,1))}else console.warn(\"THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.\");else if(n.isGeometry){var s=n.vertices;for(i=n.lineDistances,a=0,o=s.length;a<o;a+=2)e.copy(s[a]),t.copy(s[a+1]),i[a]=0===a?0:i[a-1],i[a+1]=i[a]+e.distanceTo(t)}return this}}()}),wi.prototype=Object.assign(Object.create(xi.prototype),{constructor:wi,isLineLoop:!0}),_i.prototype=Object.create(Bn.prototype),_i.prototype.constructor=_i,_i.prototype.isPointsMaterial=!0,_i.prototype.copy=function(e){return Bn.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this},Mi.prototype=Object.assign(Object.create(dn.prototype),{constructor:Mi,isPoints:!0,raycast:function(){var e=new Gt,t=new zn,n=new Kt;return function(r,i){var a=this,o=this.geometry,s=this.matrixWorld,c=r.params.Points.threshold;if(null===o.boundingSphere&&o.computeBoundingSphere(),n.copy(o.boundingSphere),n.applyMatrix4(s),n.radius+=c,!1!==r.ray.intersectsSphere(n)){e.getInverse(s),t.copy(r.ray).applyMatrix4(e);var u=c/((this.scale.x+this.scale.y+this.scale.z)/3),l=u*u,h=new Ht,d=new Ht;if(o.isBufferGeometry){var p=o.index,f=o.attributes.position.array;if(null!==p)for(var m=p.array,g=0,v=m.length;g<v;g++){var y=m[g];h.fromArray(f,3*y),w(h,y)}else{g=0;for(var x=f.length/3;g<x;g++)h.fromArray(f,3*g),w(h,g)}}else{var b=o.vertices;for(g=0,x=b.length;g<x;g++)w(b[g],g)}}function w(e,n){var o=t.distanceSqToPoint(e);if(o<l){t.closestPointToPoint(e,d),d.applyMatrix4(s);var c=r.ray.origin.distanceTo(d);if(c<r.near||c>r.far)return;i.push({distance:c,distanceToRay:Math.sqrt(o),point:d.clone(),index:n,face:null,object:a})}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Ei.prototype=Object.assign(Object.create(Wt.prototype),{constructor:Ei,isVideoTexture:!0,update:function(){var e=this.image;e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),Ti.prototype=Object.create(Wt.prototype),Ti.prototype.constructor=Ti,Ti.prototype.isCompressedTexture=!0,Si.prototype=Object.create(Wt.prototype),Si.prototype.constructor=Si,Si.prototype.isCanvasTexture=!0,Ai.prototype=Object.create(Wt.prototype),Ai.prototype.constructor=Ai,Ai.prototype.isDepthTexture=!0,Li.prototype=Object.create(Pn.prototype),Li.prototype.constructor=Li,Ri.prototype=Object.create(vn.prototype),Ri.prototype.constructor=Ri,Ci.prototype=Object.create(Pn.prototype),Ci.prototype.constructor=Ci,Pi.prototype=Object.create(vn.prototype),Pi.prototype.constructor=Pi,Oi.prototype=Object.create(Pn.prototype),Oi.prototype.constructor=Oi,Ni.prototype=Object.create(vn.prototype),Ni.prototype.constructor=Ni,Ii.prototype=Object.create(Oi.prototype),Ii.prototype.constructor=Ii,Di.prototype=Object.create(vn.prototype),Di.prototype.constructor=Di,Ui.prototype=Object.create(Oi.prototype),Ui.prototype.constructor=Ui,Bi.prototype=Object.create(vn.prototype),Bi.prototype.constructor=Bi,Fi.prototype=Object.create(Oi.prototype),Fi.prototype.constructor=Fi,Gi.prototype=Object.create(vn.prototype),Gi.prototype.constructor=Gi,zi.prototype=Object.create(Oi.prototype),zi.prototype.constructor=zi,Hi.prototype=Object.create(vn.prototype),Hi.prototype.constructor=Hi,ki.prototype=Object.create(Pn.prototype),ki.prototype.constructor=ki,ji.prototype=Object.create(vn.prototype),ji.prototype.constructor=ji,Vi.prototype=Object.create(Pn.prototype),Vi.prototype.constructor=Vi,Wi.prototype=Object.create(vn.prototype),Wi.prototype.constructor=Wi,Xi.prototype=Object.create(Pn.prototype),Xi.prototype.constructor=Xi;var qi=function(e,t,n){n=n||2;var r,i,a,o,s,c,u,l=t&&t.length,h=l?t[0]*n:e.length,d=Yi(e,0,h,n,!0),p=[];if(!d)return p;if(l&&(d=function(e,t,n,r){var i,a,o,s,c,u=[];for(i=0,a=t.length;i<a;i++)o=t[i]*r,s=i<a-1?t[i+1]*r:e.length,(c=Yi(e,o,s,r,!1))===c.next&&(c.steiner=!0),u.push(ia(c));for(u.sort(ta),i=0;i<u.length;i++)na(u[i],n),n=Zi(n,n.next);return n}(e,t,d,n)),e.length>80*n){r=a=e[0],i=o=e[1];for(var f=n;f<h;f+=n)s=e[f],c=e[f+1],s<r&&(r=s),c<i&&(i=c),s>a&&(a=s),c>o&&(o=c);u=0!==(u=Math.max(a-r,o-i))?1/u:0}return Ji(d,p,n,r,i,u),p};function Yi(e,t,n,r,i){var a,o;if(i===function(e,t,n,r){for(var i=0,a=t,o=n-r;a<n;a+=r)i+=(e[o]-e[a])*(e[a+1]+e[o+1]),o=a;return i}(e,t,n,r)>0)for(a=t;a<n;a+=r)o=da(a,e[a],e[a+1],o);else for(a=n-r;a>=t;a-=r)o=da(a,e[a],e[a+1],o);return o&&ca(o,o.next)&&(pa(o),o=o.next),o}function Zi(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!ca(r,r.next)&&0!==sa(r.prev,r,r.next))r=r.next;else{if(pa(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function Ji(e,t,n,r,i,a,o){if(e){!o&&a&&function(e,t,n,r){var i=e;do{null===i.z&&(i.z=ra(i.x,i.y,t,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,function(e){var t,n,r,i,a,o,s,c,u=1;do{for(n=e,e=null,a=null,o=0;n;){for(o++,r=n,s=0,t=0;t<u&&(s++,r=r.nextZ);t++);for(c=u;s>0||c>0&&r;)0!==s&&(0===c||!r||n.z<=r.z)?(i=n,n=n.nextZ,s--):(i=r,r=r.nextZ,c--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;n=r}a.nextZ=null,u*=2}while(o>1)}(i)}(e,r,i,a);for(var s,c,u=e;e.prev!==e.next;)if(s=e.prev,c=e.next,a?Qi(e,r,i,a):Ki(e))t.push(s.i/n),t.push(e.i/n),t.push(c.i/n),pa(e),e=c.next,u=c.next;else if((e=c)===u){o?1===o?Ji(e=$i(e,t,n),t,n,r,i,a,2):2===o&&ea(e,t,n,r,i,a):Ji(Zi(e),t,n,r,i,a,1);break}}}function Ki(e){var t=e.prev,n=e,r=e.next;if(sa(t,n,r)>=0)return!1;for(var i=e.next.next;i!==e.prev;){if(aa(t.x,t.y,n.x,n.y,r.x,r.y,i.x,i.y)&&sa(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function Qi(e,t,n,r){var i=e.prev,a=e,o=e.next;if(sa(i,a,o)>=0)return!1;for(var s=i.x<a.x?i.x<o.x?i.x:o.x:a.x<o.x?a.x:o.x,c=i.y<a.y?i.y<o.y?i.y:o.y:a.y<o.y?a.y:o.y,u=i.x>a.x?i.x>o.x?i.x:o.x:a.x>o.x?a.x:o.x,l=i.y>a.y?i.y>o.y?i.y:o.y:a.y>o.y?a.y:o.y,h=ra(s,c,t,n,r),d=ra(u,l,t,n,r),p=e.nextZ;p&&p.z<=d;){if(p!==e.prev&&p!==e.next&&aa(i.x,i.y,a.x,a.y,o.x,o.y,p.x,p.y)&&sa(p.prev,p,p.next)>=0)return!1;p=p.nextZ}for(p=e.prevZ;p&&p.z>=h;){if(p!==e.prev&&p!==e.next&&aa(i.x,i.y,a.x,a.y,o.x,o.y,p.x,p.y)&&sa(p.prev,p,p.next)>=0)return!1;p=p.prevZ}return!0}function $i(e,t,n){var r=e;do{var i=r.prev,a=r.next.next;!ca(i,a)&&ua(i,r,r.next,a)&&la(i,a)&&la(a,i)&&(t.push(i.i/n),t.push(r.i/n),t.push(a.i/n),pa(r),pa(r.next),r=e=a),r=r.next}while(r!==e);return r}function ea(e,t,n,r,i,a){var o=e;do{for(var s=o.next.next;s!==o.prev;){if(o.i!==s.i&&oa(o,s)){var c=ha(o,s);return o=Zi(o,o.next),c=Zi(c,c.next),Ji(o,t,n,r,i,a),void Ji(c,t,n,r,i,a)}s=s.next}o=o.next}while(o!==e)}function ta(e,t){return e.x-t.x}function na(e,t){if(t=function(e,t){var n,r=t,i=e.x,a=e.y,o=-1/0;do{if(a<=r.y&&a>=r.next.y&&r.next.y!==r.y){var s=r.x+(a-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=i&&s>o){if(o=s,s===i){if(a===r.y)return r;if(a===r.next.y)return r.next}n=r.x<r.next.x?r:r.next}}r=r.next}while(r!==t);if(!n)return null;if(i===o)return n.prev;var c,u=n,l=n.x,h=n.y,d=1/0;r=n.next;for(;r!==u;)i>=r.x&&r.x>=l&&i!==r.x&&aa(a<h?i:o,a,l,h,a<h?o:i,a,r.x,r.y)&&((c=Math.abs(a-r.y)/(i-r.x))<d||c===d&&r.x>n.x)&&la(r,e)&&(n=r,d=c),r=r.next;return n}(e,t)){var n=ha(t,e);Zi(n,n.next)}}function ra(e,t,n,r,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function ia(e){var t=e,n=e;do{t.x<n.x&&(n=t),t=t.next}while(t!==e);return n}function aa(e,t,n,r,i,a,o,s){return(i-o)*(t-s)-(e-o)*(a-s)>=0&&(e-o)*(r-s)-(n-o)*(t-s)>=0&&(n-o)*(a-s)-(i-o)*(r-s)>=0}function oa(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&ua(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&la(e,t)&&la(t,e)&&function(e,t){var n=e,r=!1,i=(e.x+t.x)/2,a=(e.y+t.y)/2;do{n.y>a!=n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)}function sa(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function ca(e,t){return e.x===t.x&&e.y===t.y}function ua(e,t,n,r){return!!(ca(e,t)&&ca(n,r)||ca(e,r)&&ca(n,t))||sa(e,t,n)>0!=sa(e,t,r)>0&&sa(n,r,e)>0!=sa(n,r,t)>0}function la(e,t){return sa(e.prev,e,e.next)<0?sa(e,t,e.next)>=0&&sa(e,e.prev,t)>=0:sa(e,t,e.prev)<0||sa(e,e.next,t)<0}function ha(e,t){var n=new fa(e.i,e.x,e.y),r=new fa(t.i,t.x,t.y),i=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=i,i.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r}function da(e,t,n,r){var i=new fa(e,t,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function pa(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function fa(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}var ma={area:function(e){for(var t=e.length,n=0,r=t-1,i=0;i<t;r=i++)n+=e[r].x*e[i].y-e[i].x*e[r].y;return.5*n},isClockWise:function(e){return ma.area(e)<0},triangulateShape:function(e,t){var n=[],r=[],i=[];ga(e),va(n,e);var a=e.length;t.forEach(ga);for(var o=0;o<t.length;o++)r.push(a),a+=t[o].length,va(n,t[o]);var s=qi(n,r);for(o=0;o<s.length;o+=3)i.push(s.slice(o,o+3));return i}};function ga(e){var t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function va(e,t){for(var n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}function ya(e,t){vn.call(this),this.type=\"ExtrudeGeometry\",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new xa(e,t)),this.mergeVertices()}function xa(e,t){Pn.call(this),this.type=\"ExtrudeBufferGeometry\",this.parameters={shapes:e,options:t};for(var n=this,r=[],i=[],a=0,o=(e=Array.isArray(e)?e:[e]).length;a<o;a++){s(e[a])}function s(e){var a=[],o=void 0!==t.curveSegments?t.curveSegments:12,s=void 0!==t.steps?t.steps:1,c=void 0!==t.depth?t.depth:100,u=void 0===t.bevelEnabled||t.bevelEnabled,l=void 0!==t.bevelThickness?t.bevelThickness:6,h=void 0!==t.bevelSize?t.bevelSize:l-2,d=void 0!==t.bevelSegments?t.bevelSegments:3,p=t.extrudePath,f=void 0!==t.UVGenerator?t.UVGenerator:ba;void 0!==t.amount&&(console.warn(\"THREE.ExtrudeBufferGeometry: amount has been renamed to depth.\"),c=t.amount);var m,g,v,y,x,b,w,_,M=!1;p&&(m=p.getSpacedPoints(s),M=!0,u=!1,g=p.computeFrenetFrames(s,!1),v=new Ht,y=new Ht,x=new Ht),u||(d=0,l=0,h=0);var E=e.extractPoints(o),T=E.shape,S=E.holes;if(!ma.isClockWise(T))for(T=T.reverse(),w=0,_=S.length;w<_;w++)b=S[w],ma.isClockWise(b)&&(S[w]=b.reverse());var A=ma.triangulateShape(T,S),L=T;for(w=0,_=S.length;w<_;w++)b=S[w],T=T.concat(b);function R(e,t,n){return t||console.error(\"THREE.ExtrudeGeometry: vec does not exist\"),t.clone().multiplyScalar(n).add(e)}var C,P,O,N,I,D,U=T.length,B=A.length;function F(e,t,n){var r,i,a,o=e.x-t.x,s=e.y-t.y,c=n.x-e.x,u=n.y-e.y,l=o*o+s*s,h=o*u-s*c;if(Math.abs(h)>Number.EPSILON){var d=Math.sqrt(l),p=Math.sqrt(c*c+u*u),f=t.x-s/d,m=t.y+o/d,g=((n.x-u/p-f)*u-(n.y+c/p-m)*c)/(o*u-s*c),v=(r=f+o*g-e.x)*r+(i=m+s*g-e.y)*i;if(v<=2)return new Ft(r,i);a=Math.sqrt(v/2)}else{var y=!1;o>Number.EPSILON?c>Number.EPSILON&&(y=!0):o<-Number.EPSILON?c<-Number.EPSILON&&(y=!0):Math.sign(s)===Math.sign(u)&&(y=!0),y?(r=-s,i=o,a=Math.sqrt(l)):(r=o,i=s,a=Math.sqrt(l/2))}return new Ft(r/a,i/a)}for(var G=[],z=0,H=L.length,k=H-1,j=z+1;z<H;z++,k++,j++)k===H&&(k=0),j===H&&(j=0),G[z]=F(L[z],L[k],L[j]);var V,W,X=[],q=G.concat();for(w=0,_=S.length;w<_;w++){for(b=S[w],V=[],z=0,k=(H=b.length)-1,j=z+1;z<H;z++,k++,j++)k===H&&(k=0),j===H&&(j=0),V[z]=F(b[z],b[k],b[j]);X.push(V),q=q.concat(V)}for(C=0;C<d;C++){for(O=C/d,N=l*Math.cos(O*Math.PI/2),P=h*Math.sin(O*Math.PI/2),z=0,H=L.length;z<H;z++)Z((I=R(L[z],G[z],P)).x,I.y,-N);for(w=0,_=S.length;w<_;w++)for(b=S[w],V=X[w],z=0,H=b.length;z<H;z++)Z((I=R(b[z],V[z],P)).x,I.y,-N)}for(P=h,z=0;z<U;z++)I=u?R(T[z],q[z],P):T[z],M?(y.copy(g.normals[0]).multiplyScalar(I.x),v.copy(g.binormals[0]).multiplyScalar(I.y),x.copy(m[0]).add(y).add(v),Z(x.x,x.y,x.z)):Z(I.x,I.y,0);for(W=1;W<=s;W++)for(z=0;z<U;z++)I=u?R(T[z],q[z],P):T[z],M?(y.copy(g.normals[W]).multiplyScalar(I.x),v.copy(g.binormals[W]).multiplyScalar(I.y),x.copy(m[W]).add(y).add(v),Z(x.x,x.y,x.z)):Z(I.x,I.y,c/s*W);for(C=d-1;C>=0;C--){for(O=C/d,N=l*Math.cos(O*Math.PI/2),P=h*Math.sin(O*Math.PI/2),z=0,H=L.length;z<H;z++)Z((I=R(L[z],G[z],P)).x,I.y,c+N);for(w=0,_=S.length;w<_;w++)for(b=S[w],V=X[w],z=0,H=b.length;z<H;z++)I=R(b[z],V[z],P),M?Z(I.x,I.y+m[s-1].y,m[s-1].x+N):Z(I.x,I.y,c+N)}function Y(e,t){var n,r;for(z=e.length;--z>=0;){n=z,(r=z-1)<0&&(r=e.length-1);var i=0,a=s+2*d;for(i=0;i<a;i++){var o=U*i,c=U*(i+1);K(t+n+o,t+r+o,t+r+c,t+n+c)}}}function Z(e,t,n){a.push(e),a.push(t),a.push(n)}function J(e,t,i){Q(e),Q(t),Q(i);var a=r.length/3,o=f.generateTopUV(n,r,a-3,a-2,a-1);$(o[0]),$(o[1]),$(o[2])}function K(e,t,i,a){Q(e),Q(t),Q(a),Q(t),Q(i),Q(a);var o=r.length/3,s=f.generateSideWallUV(n,r,o-6,o-3,o-2,o-1);$(s[0]),$(s[1]),$(s[3]),$(s[1]),$(s[2]),$(s[3])}function Q(e){r.push(a[3*e+0]),r.push(a[3*e+1]),r.push(a[3*e+2])}function $(e){i.push(e.x),i.push(e.y)}!function(){var e=r.length/3;if(u){var t=0,i=U*t;for(z=0;z<B;z++)J((D=A[z])[2]+i,D[1]+i,D[0]+i);for(i=U*(t=s+2*d),z=0;z<B;z++)J((D=A[z])[0]+i,D[1]+i,D[2]+i)}else{for(z=0;z<B;z++)J((D=A[z])[2],D[1],D[0]);for(z=0;z<B;z++)J((D=A[z])[0]+U*s,D[1]+U*s,D[2]+U*s)}n.addGroup(e,r.length/3-e,0)}(),function(){var e=r.length/3,t=0;for(Y(L,t),t+=L.length,w=0,_=S.length;w<_;w++)Y(b=S[w],t),t+=b.length;n.addGroup(e,r.length/3-e,1)}()}this.addAttribute(\"position\",new Sn(r,3)),this.addAttribute(\"uv\",new Sn(i,2)),this.computeVertexNormals()}ya.prototype=Object.create(vn.prototype),ya.prototype.constructor=ya,ya.prototype.toJSON=function(){var e=vn.prototype.toJSON.call(this);return wa(this.parameters.shapes,this.parameters.options,e)},xa.prototype=Object.create(Pn.prototype),xa.prototype.constructor=xa,xa.prototype.toJSON=function(){var e=Pn.prototype.toJSON.call(this);return wa(this.parameters.shapes,this.parameters.options,e)};var ba={generateTopUV:function(e,t,n,r,i){var a=t[3*n],o=t[3*n+1],s=t[3*r],c=t[3*r+1],u=t[3*i],l=t[3*i+1];return[new Ft(a,o),new Ft(s,c),new Ft(u,l)]},generateSideWallUV:function(e,t,n,r,i,a){var o=t[3*n],s=t[3*n+1],c=t[3*n+2],u=t[3*r],l=t[3*r+1],h=t[3*r+2],d=t[3*i],p=t[3*i+1],f=t[3*i+2],m=t[3*a],g=t[3*a+1],v=t[3*a+2];return Math.abs(s-l)<.01?[new Ft(o,1-c),new Ft(u,1-h),new Ft(d,1-f),new Ft(m,1-v)]:[new Ft(s,1-c),new Ft(l,1-h),new Ft(p,1-f),new Ft(g,1-v)]}};function wa(e,t,n){if(n.shapes=[],Array.isArray(e))for(var r=0,i=e.length;r<i;r++){var a=e[r];n.shapes.push(a.uuid)}else n.shapes.push(e.uuid);return void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON()),n}function _a(e,t){vn.call(this),this.type=\"TextGeometry\",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new Ma(e,t)),this.mergeVertices()}function Ma(e,t){var n=(t=t||{}).font;if(!n||!n.isFont)return console.error(\"THREE.TextGeometry: font parameter is not an instance of THREE.Font.\"),new vn;var r=n.generateShapes(e,t.size);t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),xa.call(this,r,t),this.type=\"TextBufferGeometry\"}function Ea(e,t,n,r,i,a,o){vn.call(this),this.type=\"SphereGeometry\",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:a,thetaLength:o},this.fromBufferGeometry(new Ta(e,t,n,r,i,a,o)),this.mergeVertices()}function Ta(e,t,n,r,i,a,o){Pn.call(this),this.type=\"SphereBufferGeometry\",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:a,thetaLength:o},e=e||1,t=Math.max(3,Math.floor(t)||8),n=Math.max(2,Math.floor(n)||6),r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI;var s,c,u=(a=void 0!==a?a:0)+(o=void 0!==o?o:Math.PI),l=0,h=[],d=new Ht,p=new Ht,f=[],m=[],g=[],v=[];for(c=0;c<=n;c++){var y=[],x=c/n;for(s=0;s<=t;s++){var b=s/t;d.x=-e*Math.cos(r+b*i)*Math.sin(a+x*o),d.y=e*Math.cos(a+x*o),d.z=e*Math.sin(r+b*i)*Math.sin(a+x*o),m.push(d.x,d.y,d.z),p.set(d.x,d.y,d.z).normalize(),g.push(p.x,p.y,p.z),v.push(b,1-x),y.push(l++)}h.push(y)}for(c=0;c<n;c++)for(s=0;s<t;s++){var w=h[c][s+1],_=h[c][s],M=h[c+1][s],E=h[c+1][s+1];(0!==c||a>0)&&f.push(w,_,E),(c!==n-1||u<Math.PI)&&f.push(_,M,E)}this.setIndex(f),this.addAttribute(\"position\",new Sn(m,3)),this.addAttribute(\"normal\",new Sn(g,3)),this.addAttribute(\"uv\",new Sn(v,2))}function Sa(e,t,n,r,i,a){vn.call(this),this.type=\"RingGeometry\",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},this.fromBufferGeometry(new Aa(e,t,n,r,i,a)),this.mergeVertices()}function Aa(e,t,n,r,i,a){Pn.call(this),this.type=\"RingBufferGeometry\",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},e=e||.5,t=t||1,i=void 0!==i?i:0,a=void 0!==a?a:2*Math.PI,n=void 0!==n?Math.max(3,n):8;var o,s,c,u=[],l=[],h=[],d=[],p=e,f=(t-e)/(r=void 0!==r?Math.max(1,r):1),m=new Ht,g=new Ft;for(s=0;s<=r;s++){for(c=0;c<=n;c++)o=i+c/n*a,m.x=p*Math.cos(o),m.y=p*Math.sin(o),l.push(m.x,m.y,m.z),h.push(0,0,1),g.x=(m.x/t+1)/2,g.y=(m.y/t+1)/2,d.push(g.x,g.y);p+=f}for(s=0;s<r;s++){var v=s*(n+1);for(c=0;c<n;c++){var y=o=c+v,x=o+n+1,b=o+n+2,w=o+1;u.push(y,x,w),u.push(x,b,w)}}this.setIndex(u),this.addAttribute(\"position\",new Sn(l,3)),this.addAttribute(\"normal\",new Sn(h,3)),this.addAttribute(\"uv\",new Sn(d,2))}function La(e,t,n,r){vn.call(this),this.type=\"LatheGeometry\",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},this.fromBufferGeometry(new Ra(e,t,n,r)),this.mergeVertices()}function Ra(e,t,n,r){Pn.call(this),this.type=\"LatheBufferGeometry\",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=Math.floor(t)||12,n=n||0,r=r||2*Math.PI,r=Bt.clamp(r,0,2*Math.PI);var i,a,o,s=[],c=[],u=[],l=1/t,h=new Ht,d=new Ft;for(a=0;a<=t;a++){var p=n+a*l*r,f=Math.sin(p),m=Math.cos(p);for(o=0;o<=e.length-1;o++)h.x=e[o].x*f,h.y=e[o].y,h.z=e[o].x*m,c.push(h.x,h.y,h.z),d.x=a/t,d.y=o/(e.length-1),u.push(d.x,d.y)}for(a=0;a<t;a++)for(o=0;o<e.length-1;o++){var g=i=o+a*e.length,v=i+e.length,y=i+e.length+1,x=i+1;s.push(g,v,x),s.push(v,y,x)}if(this.setIndex(s),this.addAttribute(\"position\",new Sn(c,3)),this.addAttribute(\"uv\",new Sn(u,2)),this.computeVertexNormals(),r===2*Math.PI){var b=this.attributes.normal.array,w=new Ht,_=new Ht,M=new Ht;for(i=t*e.length*3,a=0,o=0;a<e.length;a++,o+=3)w.x=b[o+0],w.y=b[o+1],w.z=b[o+2],_.x=b[i+o+0],_.y=b[i+o+1],_.z=b[i+o+2],M.addVectors(w,_).normalize(),b[o+0]=b[i+o+0]=M.x,b[o+1]=b[i+o+1]=M.y,b[o+2]=b[i+o+2]=M.z}}function Ca(e,t){vn.call(this),this.type=\"ShapeGeometry\",\"object\"==typeof t&&(console.warn(\"THREE.ShapeGeometry: Options parameter has been removed.\"),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new Pa(e,t)),this.mergeVertices()}function Pa(e,t){Pn.call(this),this.type=\"ShapeBufferGeometry\",this.parameters={shapes:e,curveSegments:t},t=t||12;var n=[],r=[],i=[],a=[],o=0,s=0;if(!1===Array.isArray(e))u(e);else for(var c=0;c<e.length;c++)u(e[c]),this.addGroup(o,s,c),o+=s,s=0;function u(e){var o,c,u,l=r.length/3,h=e.extractPoints(t),d=h.shape,p=h.holes;if(!1===ma.isClockWise(d))for(d=d.reverse(),o=0,c=p.length;o<c;o++)u=p[o],!0===ma.isClockWise(u)&&(p[o]=u.reverse());var f=ma.triangulateShape(d,p);for(o=0,c=p.length;o<c;o++)u=p[o],d=d.concat(u);for(o=0,c=d.length;o<c;o++){var m=d[o];r.push(m.x,m.y,0),i.push(0,0,1),a.push(m.x,m.y)}for(o=0,c=f.length;o<c;o++){var g=f[o],v=g[0]+l,y=g[1]+l,x=g[2]+l;n.push(v,y,x),s+=3}}this.setIndex(n),this.addAttribute(\"position\",new Sn(r,3)),this.addAttribute(\"normal\",new Sn(i,3)),this.addAttribute(\"uv\",new Sn(a,2))}function Oa(e,t){if(t.shapes=[],Array.isArray(e))for(var n=0,r=e.length;n<r;n++){var i=e[n];t.shapes.push(i.uuid)}else t.shapes.push(e.uuid);return t}function Na(e,t){Pn.call(this),this.type=\"EdgesGeometry\",this.parameters={thresholdAngle:t},t=void 0!==t?t:1;var n,r,i,a,o=[],s=Math.cos(Bt.DEG2RAD*t),c=[0,0],u={},l=[\"a\",\"b\",\"c\"];e.isBufferGeometry?(a=new vn).fromBufferGeometry(e):a=e.clone(),a.mergeVertices(),a.computeFaceNormals();for(var h=a.vertices,d=a.faces,p=0,f=d.length;p<f;p++)for(var m=d[p],g=0;g<3;g++)n=m[l[g]],r=m[l[(g+1)%3]],c[0]=Math.min(n,r),c[1]=Math.max(n,r),void 0===u[i=c[0]+\",\"+c[1]]?u[i]={index1:c[0],index2:c[1],face1:p,face2:void 0}:u[i].face2=p;for(i in u){var v=u[i];if(void 0===v.face2||d[v.face1].normal.dot(d[v.face2].normal)<=s){var y=h[v.index1];o.push(y.x,y.y,y.z),y=h[v.index2],o.push(y.x,y.y,y.z)}}this.addAttribute(\"position\",new Sn(o,3))}function Ia(e,t,n,r,i,a,o,s){vn.call(this),this.type=\"CylinderGeometry\",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new Da(e,t,n,r,i,a,o,s)),this.mergeVertices()}function Da(e,t,n,r,i,a,o,s){Pn.call(this),this.type=\"CylinderBufferGeometry\",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s};var c=this;e=void 0!==e?e:1,t=void 0!==t?t:1,n=n||1,r=Math.floor(r)||8,i=Math.floor(i)||1,a=void 0!==a&&a,o=void 0!==o?o:0,s=void 0!==s?s:2*Math.PI;var u=[],l=[],h=[],d=[],p=0,f=[],m=n/2,g=0;function v(n){var i,a,f,v=new Ft,y=new Ht,x=0,b=!0===n?e:t,w=!0===n?1:-1;for(a=p,i=1;i<=r;i++)l.push(0,m*w,0),h.push(0,w,0),d.push(.5,.5),p++;for(f=p,i=0;i<=r;i++){var _=i/r*s+o,M=Math.cos(_),E=Math.sin(_);y.x=b*E,y.y=m*w,y.z=b*M,l.push(y.x,y.y,y.z),h.push(0,w,0),v.x=.5*M+.5,v.y=.5*E*w+.5,d.push(v.x,v.y),p++}for(i=0;i<r;i++){var T=a+i,S=f+i;!0===n?u.push(S,S+1,T):u.push(S+1,S,T),x+=3}c.addGroup(g,x,!0===n?1:2),g+=x}!function(){var a,v,y=new Ht,x=new Ht,b=0,w=(t-e)/n;for(v=0;v<=i;v++){var _=[],M=v/i,E=M*(t-e)+e;for(a=0;a<=r;a++){var T=a/r,S=T*s+o,A=Math.sin(S),L=Math.cos(S);x.x=E*A,x.y=-M*n+m,x.z=E*L,l.push(x.x,x.y,x.z),y.set(A,w,L).normalize(),h.push(y.x,y.y,y.z),d.push(T,1-M),_.push(p++)}f.push(_)}for(a=0;a<r;a++)for(v=0;v<i;v++){var R=f[v][a],C=f[v+1][a],P=f[v+1][a+1],O=f[v][a+1];u.push(R,C,O),u.push(C,P,O),b+=6}c.addGroup(g,b,0),g+=b}(),!1===a&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(u),this.addAttribute(\"position\",new Sn(l,3)),this.addAttribute(\"normal\",new Sn(h,3)),this.addAttribute(\"uv\",new Sn(d,2))}function Ua(e,t,n,r,i,a,o){Ia.call(this,0,e,t,n,r,i,a,o),this.type=\"ConeGeometry\",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:o}}function Ba(e,t,n,r,i,a,o){Da.call(this,0,e,t,n,r,i,a,o),this.type=\"ConeBufferGeometry\",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:o}}function Fa(e,t,n,r){vn.call(this),this.type=\"CircleGeometry\",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},this.fromBufferGeometry(new Ga(e,t,n,r)),this.mergeVertices()}function Ga(e,t,n,r){Pn.call(this),this.type=\"CircleBufferGeometry\",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},e=e||1,t=void 0!==t?Math.max(3,t):8,n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI;var i,a,o=[],s=[],c=[],u=[],l=new Ht,h=new Ft;for(s.push(0,0,0),c.push(0,0,1),u.push(.5,.5),a=0,i=3;a<=t;a++,i+=3){var d=n+a/t*r;l.x=e*Math.cos(d),l.y=e*Math.sin(d),s.push(l.x,l.y,l.z),c.push(0,0,1),h.x=(s[i]/e+1)/2,h.y=(s[i+1]/e+1)/2,u.push(h.x,h.y)}for(i=1;i<=t;i++)o.push(i,i+1,0);this.setIndex(o),this.addAttribute(\"position\",new Sn(s,3)),this.addAttribute(\"normal\",new Sn(c,3)),this.addAttribute(\"uv\",new Sn(u,2))}_a.prototype=Object.create(vn.prototype),_a.prototype.constructor=_a,Ma.prototype=Object.create(xa.prototype),Ma.prototype.constructor=Ma,Ea.prototype=Object.create(vn.prototype),Ea.prototype.constructor=Ea,Ta.prototype=Object.create(Pn.prototype),Ta.prototype.constructor=Ta,Sa.prototype=Object.create(vn.prototype),Sa.prototype.constructor=Sa,Aa.prototype=Object.create(Pn.prototype),Aa.prototype.constructor=Aa,La.prototype=Object.create(vn.prototype),La.prototype.constructor=La,Ra.prototype=Object.create(Pn.prototype),Ra.prototype.constructor=Ra,Ca.prototype=Object.create(vn.prototype),Ca.prototype.constructor=Ca,Ca.prototype.toJSON=function(){var e=vn.prototype.toJSON.call(this);return Oa(this.parameters.shapes,e)},Pa.prototype=Object.create(Pn.prototype),Pa.prototype.constructor=Pa,Pa.prototype.toJSON=function(){var e=Pn.prototype.toJSON.call(this);return Oa(this.parameters.shapes,e)},Na.prototype=Object.create(Pn.prototype),Na.prototype.constructor=Na,Ia.prototype=Object.create(vn.prototype),Ia.prototype.constructor=Ia,Da.prototype=Object.create(Pn.prototype),Da.prototype.constructor=Da,Ua.prototype=Object.create(Ia.prototype),Ua.prototype.constructor=Ua,Ba.prototype=Object.create(Da.prototype),Ba.prototype.constructor=Ba,Fa.prototype=Object.create(vn.prototype),Fa.prototype.constructor=Fa,Ga.prototype=Object.create(Pn.prototype),Ga.prototype.constructor=Ga;var za=Object.freeze({WireframeGeometry:Li,ParametricGeometry:Ri,ParametricBufferGeometry:Ci,TetrahedronGeometry:Ni,TetrahedronBufferGeometry:Ii,OctahedronGeometry:Di,OctahedronBufferGeometry:Ui,IcosahedronGeometry:Bi,IcosahedronBufferGeometry:Fi,DodecahedronGeometry:Gi,DodecahedronBufferGeometry:zi,PolyhedronGeometry:Pi,PolyhedronBufferGeometry:Oi,TubeGeometry:Hi,TubeBufferGeometry:ki,TorusKnotGeometry:ji,TorusKnotBufferGeometry:Vi,TorusGeometry:Wi,TorusBufferGeometry:Xi,TextGeometry:_a,TextBufferGeometry:Ma,SphereGeometry:Ea,SphereBufferGeometry:Ta,RingGeometry:Sa,RingBufferGeometry:Aa,PlaneGeometry:In,PlaneBufferGeometry:Dn,LatheGeometry:La,LatheBufferGeometry:Ra,ShapeGeometry:Ca,ShapeBufferGeometry:Pa,ExtrudeGeometry:ya,ExtrudeBufferGeometry:xa,EdgesGeometry:Na,ConeGeometry:Ua,ConeBufferGeometry:Ba,CylinderGeometry:Ia,CylinderBufferGeometry:Da,CircleGeometry:Fa,CircleBufferGeometry:Ga,BoxGeometry:On,BoxBufferGeometry:Nn});function Ha(e){Bn.call(this),this.type=\"ShadowMaterial\",this.color=new rn(0),this.transparent=!0,this.setValues(e)}function ka(e){Gn.call(this,e),this.type=\"RawShaderMaterial\"}function ja(e){Bn.call(this),this.defines={STANDARD:\"\"},this.type=\"MeshStandardMaterial\",this.color=new rn(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new rn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dt,this.normalScale=new Ft(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Va(e){ja.call(this),this.defines={PHYSICAL:\"\"},this.type=\"MeshPhysicalMaterial\",this.reflectivity=.5,this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(e)}function Wa(e){Bn.call(this),this.type=\"MeshPhongMaterial\",this.color=new rn(16777215),this.specular=new rn(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new rn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dt,this.normalScale=new Ft(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=$,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Xa(e){Wa.call(this),this.defines={TOON:\"\"},this.type=\"MeshToonMaterial\",this.gradientMap=null,this.setValues(e)}function qa(e){Bn.call(this),this.type=\"MeshNormalMaterial\",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Dt,this.normalScale=new Ft(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Ya(e){Bn.call(this),this.type=\"MeshLambertMaterial\",this.color=new rn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new rn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=$,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Za(e){yi.call(this),this.type=\"LineDashedMaterial\",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}Ha.prototype=Object.create(Bn.prototype),Ha.prototype.constructor=Ha,Ha.prototype.isShadowMaterial=!0,Ha.prototype.copy=function(e){return Bn.prototype.copy.call(this,e),this.color.copy(e.color),this},ka.prototype=Object.create(Gn.prototype),ka.prototype.constructor=ka,ka.prototype.isRawShaderMaterial=!0,ja.prototype=Object.create(Bn.prototype),ja.prototype.constructor=ja,ja.prototype.isMeshStandardMaterial=!0,ja.prototype.copy=function(e){return Bn.prototype.copy.call(this,e),this.defines={STANDARD:\"\"},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Va.prototype=Object.create(ja.prototype),Va.prototype.constructor=Va,Va.prototype.isMeshPhysicalMaterial=!0,Va.prototype.copy=function(e){return ja.prototype.copy.call(this,e),this.defines={PHYSICAL:\"\"},this.reflectivity=e.reflectivity,this.clearCoat=e.clearCoat,this.clearCoatRoughness=e.clearCoatRoughness,this},Wa.prototype=Object.create(Bn.prototype),Wa.prototype.constructor=Wa,Wa.prototype.isMeshPhongMaterial=!0,Wa.prototype.copy=function(e){return Bn.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Xa.prototype=Object.create(Wa.prototype),Xa.prototype.constructor=Xa,Xa.prototype.isMeshToonMaterial=!0,Xa.prototype.copy=function(e){return Wa.prototype.copy.call(this,e),this.gradientMap=e.gradientMap,this},qa.prototype=Object.create(Bn.prototype),qa.prototype.constructor=qa,qa.prototype.isMeshNormalMaterial=!0,qa.prototype.copy=function(e){return Bn.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Ya.prototype=Object.create(Bn.prototype),Ya.prototype.constructor=Ya,Ya.prototype.isMeshLambertMaterial=!0,Ya.prototype.copy=function(e){return Bn.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Za.prototype=Object.create(yi.prototype),Za.prototype.constructor=Za,Za.prototype.isLineDashedMaterial=!0,Za.prototype.copy=function(e){return yi.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var Ja=Object.freeze({ShadowMaterial:Ha,SpriteMaterial:di,RawShaderMaterial:ka,ShaderMaterial:Gn,PointsMaterial:_i,MeshPhysicalMaterial:Va,MeshStandardMaterial:ja,MeshPhongMaterial:Wa,MeshToonMaterial:Xa,MeshNormalMaterial:qa,MeshLambertMaterial:Ya,MeshDepthMaterial:Kr,MeshDistanceMaterial:Qr,MeshBasicMaterial:Fn,LineDashedMaterial:Za,LineBasicMaterial:yi,Material:Bn}),Ka={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function Qa(e,t,n){var r=this,i=!1,a=0,o=0,s=void 0;this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,!1===i&&void 0!==r.onStart&&r.onStart(e,a,o),i=!0},this.itemEnd=function(e){a++,void 0!==r.onProgress&&r.onProgress(e,a,o),a===o&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this}}var $a=new Qa,eo={};function to(e){this.manager=void 0!==e?e:$a}function no(e){this.manager=void 0!==e?e:$a,this._parser=null}function ro(e){this.manager=void 0!==e?e:$a,this._parser=null}function io(e){this.manager=void 0!==e?e:$a}function ao(e){this.manager=void 0!==e?e:$a}function oo(e){this.manager=void 0!==e?e:$a}function so(){this.type=\"Curve\",this.arcLengthDivisions=200}function co(e,t,n,r,i,a,o,s){so.call(this),this.type=\"EllipseCurve\",this.aX=e||0,this.aY=t||0,this.xRadius=n||1,this.yRadius=r||1,this.aStartAngle=i||0,this.aEndAngle=a||2*Math.PI,this.aClockwise=o||!1,this.aRotation=s||0}function uo(e,t,n,r,i,a){co.call(this,e,t,n,n,r,i,a),this.type=\"ArcCurve\"}function lo(){var e=0,t=0,n=0,r=0;function i(i,a,o,s){e=i,t=o,n=-3*i+3*a-2*o-s,r=2*i-2*a+o+s}return{initCatmullRom:function(e,t,n,r,a){i(t,n,a*(n-e),a*(r-t))},initNonuniformCatmullRom:function(e,t,n,r,a,o,s){var c=(t-e)/a-(n-e)/(a+o)+(n-t)/o,u=(n-t)/o-(r-t)/(o+s)+(r-n)/s;i(t,n,c*=o,u*=o)},calc:function(i){var a=i*i;return e+t*i+n*a+r*(a*i)}}}Object.assign(to.prototype,{load:function(e,t,n,r){void 0===e&&(e=\"\"),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var i=this,a=Ka.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;if(void 0===eo[e]){var o=e.match(/^data:(.*?)(;base64)?,(.*)$/);if(o){var s=o[1],c=!!o[2],u=o[3];u=window.decodeURIComponent(u),c&&(u=window.atob(u));try{var l,h=(this.responseType||\"\").toLowerCase();switch(h){case\"arraybuffer\":case\"blob\":for(var d=new Uint8Array(u.length),p=0;p<u.length;p++)d[p]=u.charCodeAt(p);l=\"blob\"===h?new Blob([d.buffer],{type:s}):d.buffer;break;case\"document\":var f=new DOMParser;l=f.parseFromString(u,s);break;case\"json\":l=JSON.parse(u);break;default:l=u}window.setTimeout(function(){t&&t(l),i.manager.itemEnd(e)},0)}catch(t){window.setTimeout(function(){r&&r(t),i.manager.itemEnd(e),i.manager.itemError(e)},0)}}else{eo[e]=[],eo[e].push({onLoad:t,onProgress:n,onError:r});var m=new XMLHttpRequest;for(var g in m.open(\"GET\",e,!0),m.addEventListener(\"load\",function(t){var n=this.response;Ka.add(e,n);var r=eo[e];if(delete eo[e],200===this.status||0===this.status){0===this.status&&console.warn(\"THREE.FileLoader: HTTP Status 0 received.\");for(var a=0,o=r.length;a<o;a++){(s=r[a]).onLoad&&s.onLoad(n)}i.manager.itemEnd(e)}else{for(a=0,o=r.length;a<o;a++){var s;(s=r[a]).onError&&s.onError(t)}i.manager.itemEnd(e),i.manager.itemError(e)}},!1),m.addEventListener(\"progress\",function(t){for(var n=eo[e],r=0,i=n.length;r<i;r++){var a=n[r];a.onProgress&&a.onProgress(t)}},!1),m.addEventListener(\"error\",function(t){var n=eo[e];delete eo[e];for(var r=0,a=n.length;r<a;r++){var o=n[r];o.onError&&o.onError(t)}i.manager.itemEnd(e),i.manager.itemError(e)},!1),void 0!==this.responseType&&(m.responseType=this.responseType),void 0!==this.withCredentials&&(m.withCredentials=this.withCredentials),m.overrideMimeType&&m.overrideMimeType(void 0!==this.mimeType?this.mimeType:\"text/plain\"),this.requestHeader)m.setRequestHeader(g,this.requestHeader[g]);m.send(null)}return i.manager.itemStart(e),m}eo[e].push({onLoad:t,onProgress:n,onError:r})},setPath:function(e){return this.path=e,this},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}}),Object.assign(no.prototype,{load:function(e,t,n,r){var i=this,a=[],o=new Ti;o.image=a;var s=new to(this.manager);function c(c){s.load(e[c],function(e){var n=i._parser(e,!0);a[c]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},6===(u+=1)&&(1===n.mipmapCount&&(o.minFilter=we),o.format=n.format,o.needsUpdate=!0,t&&t(o))},n,r)}if(s.setPath(this.path),s.setResponseType(\"arraybuffer\"),Array.isArray(e))for(var u=0,l=0,h=e.length;l<h;++l)c(l);else s.load(e,function(e){var n=i._parser(e,!0);if(n.isCubemap)for(var r=n.mipmaps.length/n.mipmapCount,s=0;s<r;s++){a[s]={mipmaps:[]};for(var c=0;c<n.mipmapCount;c++)a[s].mipmaps.push(n.mipmaps[s*n.mipmapCount+c]),a[s].format=n.format,a[s].width=n.width,a[s].height=n.height}else o.image.width=n.width,o.image.height=n.height,o.mipmaps=n.mipmaps;1===n.mipmapCount&&(o.minFilter=we),o.format=n.format,o.needsUpdate=!0,t&&t(o)},n,r);return o},setPath:function(e){return this.path=e,this}}),Object.assign(ro.prototype,{load:function(e,t,n,r){var i=this,a=new Zt,o=new to(this.manager);return o.setResponseType(\"arraybuffer\"),o.load(e,function(e){var n=i._parser(e);n&&(void 0!==n.image?a.image=n.image:void 0!==n.data&&(a.image.width=n.width,a.image.height=n.height,a.image.data=n.data),a.wrapS=void 0!==n.wrapS?n.wrapS:ge,a.wrapT=void 0!==n.wrapT?n.wrapT:ge,a.magFilter=void 0!==n.magFilter?n.magFilter:we,a.minFilter=void 0!==n.minFilter?n.minFilter:Me,a.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.format&&(a.format=n.format),void 0!==n.type&&(a.type=n.type),void 0!==n.mipmaps&&(a.mipmaps=n.mipmaps),1===n.mipmapCount&&(a.minFilter=we),a.needsUpdate=!0,t&&t(a,n))},n,r),a}}),Object.assign(io.prototype,{crossOrigin:\"anonymous\",load:function(e,t,n,r){void 0===e&&(e=\"\"),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var i=this,a=Ka.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;var o=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"img\");function s(){o.removeEventListener(\"load\",s,!1),o.removeEventListener(\"error\",c,!1),Ka.add(e,this),t&&t(this),i.manager.itemEnd(e)}function c(t){o.removeEventListener(\"load\",s,!1),o.removeEventListener(\"error\",c,!1),r&&r(t),i.manager.itemEnd(e),i.manager.itemError(e)}return o.addEventListener(\"load\",s,!1),o.addEventListener(\"error\",c,!1),\"data:\"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),i.manager.itemStart(e),o.src=e,o},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Object.assign(ao.prototype,{crossOrigin:\"anonymous\",load:function(e,t,n,r){var i=new Vn,a=new io(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);var o=0;function s(n){a.load(e[n],function(e){i.images[n]=e,6===++o&&(i.needsUpdate=!0,t&&t(i))},void 0,r)}for(var c=0;c<e.length;++c)s(c);return i},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Object.assign(oo.prototype,{crossOrigin:\"anonymous\",load:function(e,t,n,r){var i=new Wt,a=new io(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(n){i.image=n;var r=e.search(/\\.(jpg|jpeg)$/)>0||0===e.search(/^data\\:image\\/jpeg/);i.format=r?Be:Fe,i.needsUpdate=!0,void 0!==t&&t(i)},n,r),i},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Object.assign(so.prototype,{getPoint:function(){return console.warn(\"THREE.Curve: .getPoint() not implemented.\"),null},getPointAt:function(e,t){var n=this.getUtoTmapping(e);return this.getPoint(n,t)},getPoints:function(e){void 0===e&&(e=5);for(var t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return t},getSpacedPoints:function(e){void 0===e&&(e=5);for(var t=[],n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,n,r=[],i=this.getPoint(0),a=0;for(r.push(0),n=1;n<=e;n++)a+=(t=this.getPoint(n/e)).distanceTo(i),r.push(a),i=t;return this.cacheArcLengths=r,r},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){var n,r=this.getLengths(),i=0,a=r.length;n=t||e*r[a-1];for(var o,s=0,c=a-1;s<=c;)if((o=r[i=Math.floor(s+(c-s)/2)]-n)<0)s=i+1;else{if(!(o>0)){c=i;break}c=i-1}if(r[i=c]===n)return i/(a-1);var u=r[i];return(i+(n-u)/(r[i+1]-u))/(a-1)},getTangent:function(e){var t=e-1e-4,n=e+1e-4;t<0&&(t=0),n>1&&(n=1);var r=this.getPoint(t);return this.getPoint(n).clone().sub(r).normalize()},getTangentAt:function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},computeFrenetFrames:function(e,t){var n,r,i,a=new Ht,o=[],s=[],c=[],u=new Ht,l=new Gt;for(n=0;n<=e;n++)r=n/e,o[n]=this.getTangentAt(r),o[n].normalize();s[0]=new Ht,c[0]=new Ht;var h=Number.MAX_VALUE,d=Math.abs(o[0].x),p=Math.abs(o[0].y),f=Math.abs(o[0].z);for(d<=h&&(h=d,a.set(1,0,0)),p<=h&&(h=p,a.set(0,1,0)),f<=h&&a.set(0,0,1),u.crossVectors(o[0],a).normalize(),s[0].crossVectors(o[0],u),c[0].crossVectors(o[0],s[0]),n=1;n<=e;n++)s[n]=s[n-1].clone(),c[n]=c[n-1].clone(),u.crossVectors(o[n-1],o[n]),u.length()>Number.EPSILON&&(u.normalize(),i=Math.acos(Bt.clamp(o[n-1].dot(o[n]),-1,1)),s[n].applyMatrix4(l.makeRotationAxis(u,i))),c[n].crossVectors(o[n],s[n]);if(!0===t)for(i=Math.acos(Bt.clamp(s[0].dot(s[e]),-1,1)),i/=e,o[0].dot(u.crossVectors(s[0],s[e]))>0&&(i=-i),n=1;n<=e;n++)s[n].applyMatrix4(l.makeRotationAxis(o[n],i*n)),c[n].crossVectors(o[n],s[n]);return{tangents:o,normals:s,binormals:c}},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){var e={metadata:{version:4.5,type:\"Curve\",generator:\"Curve.toJSON\"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}),co.prototype=Object.create(so.prototype),co.prototype.constructor=co,co.prototype.isEllipseCurve=!0,co.prototype.getPoint=function(e,t){for(var n=t||new Ft,r=2*Math.PI,i=this.aEndAngle-this.aStartAngle,a=Math.abs(i)<Number.EPSILON;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=a?0:r),!0!==this.aClockwise||a||(i===r?i=-r:i-=r);var o=this.aStartAngle+e*i,s=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){var u=Math.cos(this.aRotation),l=Math.sin(this.aRotation),h=s-this.aX,d=c-this.aY;s=h*u-d*l+this.aX,c=h*l+d*u+this.aY}return n.set(s,c)},co.prototype.copy=function(e){return so.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},co.prototype.toJSON=function(){var e=so.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e},co.prototype.fromJSON=function(e){return so.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},uo.prototype=Object.create(co.prototype),uo.prototype.constructor=uo,uo.prototype.isArcCurve=!0;var ho=new Ht,po=new lo,fo=new lo,mo=new lo;function go(e,t,n,r){so.call(this),this.type=\"CatmullRomCurve3\",this.points=e||[],this.closed=t||!1,this.curveType=n||\"centripetal\",this.tension=r||.5}function vo(e,t,n,r,i){var a=.5*(r-t),o=.5*(i-n),s=e*e;return(2*n-2*r+a+o)*(e*s)+(-3*n+3*r-2*a-o)*s+a*e+n}function yo(e,t,n,r){return function(e,t){var n=1-e;return n*n*t}(e,t)+function(e,t){return 2*(1-e)*e*t}(e,n)+function(e,t){return e*e*t}(e,r)}function xo(e,t,n,r,i){return function(e,t){var n=1-e;return n*n*n*t}(e,t)+function(e,t){var n=1-e;return 3*n*n*e*t}(e,n)+function(e,t){return 3*(1-e)*e*e*t}(e,r)+function(e,t){return e*e*e*t}(e,i)}function bo(e,t,n,r){so.call(this),this.type=\"CubicBezierCurve\",this.v0=e||new Ft,this.v1=t||new Ft,this.v2=n||new Ft,this.v3=r||new Ft}function wo(e,t,n,r){so.call(this),this.type=\"CubicBezierCurve3\",this.v0=e||new Ht,this.v1=t||new Ht,this.v2=n||new Ht,this.v3=r||new Ht}function _o(e,t){so.call(this),this.type=\"LineCurve\",this.v1=e||new Ft,this.v2=t||new Ft}function Mo(e,t){so.call(this),this.type=\"LineCurve3\",this.v1=e||new Ht,this.v2=t||new Ht}function Eo(e,t,n){so.call(this),this.type=\"QuadraticBezierCurve\",this.v0=e||new Ft,this.v1=t||new Ft,this.v2=n||new Ft}function To(e,t,n){so.call(this),this.type=\"QuadraticBezierCurve3\",this.v0=e||new Ht,this.v1=t||new Ht,this.v2=n||new Ht}function So(e){so.call(this),this.type=\"SplineCurve\",this.points=e||[]}go.prototype=Object.create(so.prototype),go.prototype.constructor=go,go.prototype.isCatmullRomCurve3=!0,go.prototype.getPoint=function(e,t){var n,r,i,a,o=t||new Ht,s=this.points,c=s.length,u=(c-(this.closed?0:1))*e,l=Math.floor(u),h=u-l;if(this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/c)+1)*c:0===h&&l===c-1&&(l=c-2,h=1),this.closed||l>0?n=s[(l-1)%c]:(ho.subVectors(s[0],s[1]).add(s[0]),n=ho),r=s[l%c],i=s[(l+1)%c],this.closed||l+2<c?a=s[(l+2)%c]:(ho.subVectors(s[c-1],s[c-2]).add(s[c-1]),a=ho),\"centripetal\"===this.curveType||\"chordal\"===this.curveType){var d=\"chordal\"===this.curveType?.5:.25,p=Math.pow(n.distanceToSquared(r),d),f=Math.pow(r.distanceToSquared(i),d),m=Math.pow(i.distanceToSquared(a),d);f<1e-4&&(f=1),p<1e-4&&(p=f),m<1e-4&&(m=f),po.initNonuniformCatmullRom(n.x,r.x,i.x,a.x,p,f,m),fo.initNonuniformCatmullRom(n.y,r.y,i.y,a.y,p,f,m),mo.initNonuniformCatmullRom(n.z,r.z,i.z,a.z,p,f,m)}else\"catmullrom\"===this.curveType&&(po.initCatmullRom(n.x,r.x,i.x,a.x,this.tension),fo.initCatmullRom(n.y,r.y,i.y,a.y,this.tension),mo.initCatmullRom(n.z,r.z,i.z,a.z,this.tension));return o.set(po.calc(h),fo.calc(h),mo.calc(h)),o},go.prototype.copy=function(e){so.prototype.copy.call(this,e),this.points=[];for(var t=0,n=e.points.length;t<n;t++){var r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},go.prototype.toJSON=function(){var e=so.prototype.toJSON.call(this);e.points=[];for(var t=0,n=this.points.length;t<n;t++){var r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e},go.prototype.fromJSON=function(e){so.prototype.fromJSON.call(this,e),this.points=[];for(var t=0,n=e.points.length;t<n;t++){var r=e.points[t];this.points.push((new Ht).fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},bo.prototype=Object.create(so.prototype),bo.prototype.constructor=bo,bo.prototype.isCubicBezierCurve=!0,bo.prototype.getPoint=function(e,t){var n=t||new Ft,r=this.v0,i=this.v1,a=this.v2,o=this.v3;return n.set(xo(e,r.x,i.x,a.x,o.x),xo(e,r.y,i.y,a.y,o.y)),n},bo.prototype.copy=function(e){return so.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},bo.prototype.toJSON=function(){var e=so.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},bo.prototype.fromJSON=function(e){return so.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},wo.prototype=Object.create(so.prototype),wo.prototype.constructor=wo,wo.prototype.isCubicBezierCurve3=!0,wo.prototype.getPoint=function(e,t){var n=t||new Ht,r=this.v0,i=this.v1,a=this.v2,o=this.v3;return n.set(xo(e,r.x,i.x,a.x,o.x),xo(e,r.y,i.y,a.y,o.y),xo(e,r.z,i.z,a.z,o.z)),n},wo.prototype.copy=function(e){return so.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},wo.prototype.toJSON=function(){var e=so.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},wo.prototype.fromJSON=function(e){return so.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},_o.prototype=Object.create(so.prototype),_o.prototype.constructor=_o,_o.prototype.isLineCurve=!0,_o.prototype.getPoint=function(e,t){var n=t||new Ft;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n},_o.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},_o.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},_o.prototype.copy=function(e){return so.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},_o.prototype.toJSON=function(){var e=so.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},_o.prototype.fromJSON=function(e){return so.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},Mo.prototype=Object.create(so.prototype),Mo.prototype.constructor=Mo,Mo.prototype.isLineCurve3=!0,Mo.prototype.getPoint=function(e,t){var n=t||new Ht;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n},Mo.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},Mo.prototype.copy=function(e){return so.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},Mo.prototype.toJSON=function(){var e=so.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},Mo.prototype.fromJSON=function(e){return so.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},Eo.prototype=Object.create(so.prototype),Eo.prototype.constructor=Eo,Eo.prototype.isQuadraticBezierCurve=!0,Eo.prototype.getPoint=function(e,t){var n=t||new Ft,r=this.v0,i=this.v1,a=this.v2;return n.set(yo(e,r.x,i.x,a.x),yo(e,r.y,i.y,a.y)),n},Eo.prototype.copy=function(e){return so.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},Eo.prototype.toJSON=function(){var e=so.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},Eo.prototype.fromJSON=function(e){return so.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},To.prototype=Object.create(so.prototype),To.prototype.constructor=To,To.prototype.isQuadraticBezierCurve3=!0,To.prototype.getPoint=function(e,t){var n=t||new Ht,r=this.v0,i=this.v1,a=this.v2;return n.set(yo(e,r.x,i.x,a.x),yo(e,r.y,i.y,a.y),yo(e,r.z,i.z,a.z)),n},To.prototype.copy=function(e){return so.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},To.prototype.toJSON=function(){var e=so.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},To.prototype.fromJSON=function(e){return so.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},So.prototype=Object.create(so.prototype),So.prototype.constructor=So,So.prototype.isSplineCurve=!0,So.prototype.getPoint=function(e,t){var n=t||new Ft,r=this.points,i=(r.length-1)*e,a=Math.floor(i),o=i-a,s=r[0===a?a:a-1],c=r[a],u=r[a>r.length-2?r.length-1:a+1],l=r[a>r.length-3?r.length-1:a+2];return n.set(vo(o,s.x,c.x,u.x,l.x),vo(o,s.y,c.y,u.y,l.y)),n},So.prototype.copy=function(e){so.prototype.copy.call(this,e),this.points=[];for(var t=0,n=e.points.length;t<n;t++){var r=e.points[t];this.points.push(r.clone())}return this},So.prototype.toJSON=function(){var e=so.prototype.toJSON.call(this);e.points=[];for(var t=0,n=this.points.length;t<n;t++){var r=this.points[t];e.points.push(r.toArray())}return e},So.prototype.fromJSON=function(e){so.prototype.fromJSON.call(this,e),this.points=[];for(var t=0,n=e.points.length;t<n;t++){var r=e.points[t];this.points.push((new Ft).fromArray(r))}return this};var Ao=Object.freeze({ArcCurve:uo,CatmullRomCurve3:go,CubicBezierCurve:bo,CubicBezierCurve3:wo,EllipseCurve:co,LineCurve:_o,LineCurve3:Mo,QuadraticBezierCurve:Eo,QuadraticBezierCurve3:To,SplineCurve:So});function Lo(){so.call(this),this.type=\"CurvePath\",this.curves=[],this.autoClose=!1}function Ro(e){Lo.call(this),this.type=\"Path\",this.currentPoint=new Ft,e&&this.setFromPoints(e)}function Co(e){Ro.call(this,e),this.uuid=Bt.generateUUID(),this.type=\"Shape\",this.holes=[]}function Po(e,t){dn.call(this),this.type=\"Light\",this.color=new rn(e),this.intensity=void 0!==t?t:1,this.receiveShadow=void 0}function Oo(e,t,n){Po.call(this,e,n),this.type=\"HemisphereLight\",this.castShadow=void 0,this.position.copy(dn.DefaultUp),this.updateMatrix(),this.groundColor=new rn(t)}function No(e){this.camera=e,this.bias=0,this.radius=1,this.mapSize=new Ft(512,512),this.map=null,this.matrix=new Gt}function Io(){No.call(this,new ri(50,1,.5,500))}function Do(e,t,n,r,i,a){Po.call(this,e,t),this.type=\"SpotLight\",this.position.copy(dn.DefaultUp),this.updateMatrix(),this.target=new dn,Object.defineProperty(this,\"power\",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}}),this.distance=void 0!==n?n:0,this.angle=void 0!==r?r:Math.PI/3,this.penumbra=void 0!==i?i:0,this.decay=void 0!==a?a:1,this.shadow=new Io}function Uo(e,t,n,r){Po.call(this,e,t),this.type=\"PointLight\",Object.defineProperty(this,\"power\",{get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}}),this.distance=void 0!==n?n:0,this.decay=void 0!==r?r:1,this.shadow=new No(new ri(90,1,.5,500))}function Bo(){No.call(this,new fn(-5,5,5,-5,.5,500))}function Fo(e,t){Po.call(this,e,t),this.type=\"DirectionalLight\",this.position.copy(dn.DefaultUp),this.updateMatrix(),this.target=new dn,this.shadow=new Bo}function Go(e,t){Po.call(this,e,t),this.type=\"AmbientLight\",this.castShadow=void 0}function zo(e,t,n,r){Po.call(this,e,t),this.type=\"RectAreaLight\",this.width=void 0!==n?n:10,this.height=void 0!==r?r:10}Lo.prototype=Object.assign(Object.create(so.prototype),{constructor:Lo,add:function(e){this.curves.push(e)},closePath:function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new _o(t,e))},getPoint:function(e){for(var t=e*this.getLength(),n=this.getCurveLengths(),r=0;r<n.length;){if(n[r]>=t){var i=n[r]-t,a=this.curves[r],o=a.getLength(),s=0===o?0:1-i/o;return a.getPointAt(s)}r++}return null},getLength:function(){var e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],t=0,n=0,r=this.curves.length;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){void 0===e&&(e=40);for(var t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;for(var t,n=[],r=0,i=this.curves;r<i.length;r++)for(var a=i[r],o=a&&a.isEllipseCurve?2*e:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?e*a.points.length:e,s=a.getPoints(o),c=0;c<s.length;c++){var u=s[c];t&&t.equals(u)||(n.push(u),t=u)}return this.autoClose&&n.length>1&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n},copy:function(e){so.prototype.copy.call(this,e),this.curves=[];for(var t=0,n=e.curves.length;t<n;t++){var r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){var e=so.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(var t=0,n=this.curves.length;t<n;t++){var r=this.curves[t];e.curves.push(r.toJSON())}return e},fromJSON:function(e){so.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(var t=0,n=e.curves.length;t<n;t++){var r=e.curves[t];this.curves.push((new Ao[r.type]).fromJSON(r))}return this}}),Ro.prototype=Object.assign(Object.create(Lo.prototype),{constructor:Ro,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y)},moveTo:function(e,t){this.currentPoint.set(e,t)},lineTo:function(e,t){var n=new _o(this.currentPoint.clone(),new Ft(e,t));this.curves.push(n),this.currentPoint.set(e,t)},quadraticCurveTo:function(e,t,n,r){var i=new Eo(this.currentPoint.clone(),new Ft(e,t),new Ft(n,r));this.curves.push(i),this.currentPoint.set(n,r)},bezierCurveTo:function(e,t,n,r,i,a){var o=new bo(this.currentPoint.clone(),new Ft(e,t),new Ft(n,r),new Ft(i,a));this.curves.push(o),this.currentPoint.set(i,a)},splineThru:function(e){var t=new So([this.currentPoint.clone()].concat(e));this.curves.push(t),this.currentPoint.copy(e[e.length-1])},arc:function(e,t,n,r,i,a){var o=this.currentPoint.x,s=this.currentPoint.y;this.absarc(e+o,t+s,n,r,i,a)},absarc:function(e,t,n,r,i,a){this.absellipse(e,t,n,n,r,i,a)},ellipse:function(e,t,n,r,i,a,o,s){var c=this.currentPoint.x,u=this.currentPoint.y;this.absellipse(e+c,t+u,n,r,i,a,o,s)},absellipse:function(e,t,n,r,i,a,o,s){var c=new co(e,t,n,r,i,a,o,s);if(this.curves.length>0){var u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);var l=c.getPoint(1);this.currentPoint.copy(l)},copy:function(e){return Lo.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){var e=Lo.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return Lo.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}),Co.prototype=Object.assign(Object.create(Ro.prototype),{constructor:Co,getPointsHoles:function(e){for(var t=[],n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){Ro.prototype.copy.call(this,e),this.holes=[];for(var t=0,n=e.holes.length;t<n;t++){var r=e.holes[t];this.holes.push(r.clone())}return this},toJSON:function(){var e=Ro.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(var t=0,n=this.holes.length;t<n;t++){var r=this.holes[t];e.holes.push(r.toJSON())}return e},fromJSON:function(e){Ro.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(var t=0,n=e.holes.length;t<n;t++){var r=e.holes[t];this.holes.push((new Ro).fromJSON(r))}return this}}),Po.prototype=Object.assign(Object.create(dn.prototype),{constructor:Po,isLight:!0,copy:function(e){return dn.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){var t=dn.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}),Oo.prototype=Object.assign(Object.create(Po.prototype),{constructor:Oo,isHemisphereLight:!0,copy:function(e){return Po.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}),Object.assign(No.prototype,{copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var e={};return 0!==this.bias&&(e.bias=this.bias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}),Io.prototype=Object.assign(Object.create(No.prototype),{constructor:Io,isSpotLightShadow:!0,update:function(e){var t=this.camera,n=2*Bt.RAD2DEG*e.angle,r=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;n===t.fov&&r===t.aspect&&i===t.far||(t.fov=n,t.aspect=r,t.far=i,t.updateProjectionMatrix())}}),Do.prototype=Object.assign(Object.create(Po.prototype),{constructor:Do,isSpotLight:!0,copy:function(e){return Po.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),Uo.prototype=Object.assign(Object.create(Po.prototype),{constructor:Uo,isPointLight:!0,copy:function(e){return Po.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}),Bo.prototype=Object.assign(Object.create(No.prototype),{constructor:Bo}),Fo.prototype=Object.assign(Object.create(Po.prototype),{constructor:Fo,isDirectionalLight:!0,copy:function(e){return Po.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),Go.prototype=Object.assign(Object.create(Po.prototype),{constructor:Go,isAmbientLight:!0}),zo.prototype=Object.assign(Object.create(Po.prototype),{constructor:zo,isRectAreaLight:!0,copy:function(e){return Po.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){var t=Po.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}});var Ho={arraySlice:function(e,t,n){return Ho.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:\"number\"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){for(var t=e.length,n=new Array(t),r=0;r!==t;++r)n[r]=r;return n.sort(function(t,n){return e[t]-e[n]}),n},sortedArray:function(e,t,n){for(var r=e.length,i=new e.constructor(r),a=0,o=0;o!==r;++a)for(var s=n[a]*t,c=0;c!==t;++c)i[o++]=e[s+c];return i},flattenJSON:function(e,t,n,r){for(var i=1,a=e[0];void 0!==a&&void 0===a[r];)a=e[i++];if(void 0!==a){var o=a[r];if(void 0!==o)if(Array.isArray(o))do{void 0!==(o=a[r])&&(t.push(a.time),n.push.apply(n,o)),a=e[i++]}while(void 0!==a);else if(void 0!==o.toArray)do{void 0!==(o=a[r])&&(t.push(a.time),o.toArray(n,n.length)),a=e[i++]}while(void 0!==a);else do{void 0!==(o=a[r])&&(t.push(a.time),n.push(o)),a=e[i++]}while(void 0!==a)}}};function ko(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n}function jo(e,t,n,r){ko.call(this,e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function Vo(e,t,n,r){ko.call(this,e,t,n,r)}function Wo(e,t,n,r){ko.call(this,e,t,n,r)}function Xo(e,t,n,r){if(void 0===e)throw new Error(\"THREE.KeyframeTrack: track name is undefined\");if(void 0===t||0===t.length)throw new Error(\"THREE.KeyframeTrack: no keyframes in track named \"+e);this.name=e,this.times=Ho.convertArray(t,this.TimeBufferType),this.values=Ho.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}function qo(e,t,n){Xo.call(this,e,t,n)}function Yo(e,t,n,r){Xo.call(this,e,t,n,r)}function Zo(e,t,n,r){Xo.call(this,e,t,n,r)}function Jo(e,t,n,r){ko.call(this,e,t,n,r)}function Ko(e,t,n,r){Xo.call(this,e,t,n,r)}function Qo(e,t,n,r){Xo.call(this,e,t,n,r)}function $o(e,t,n,r){Xo.call(this,e,t,n,r)}function es(e,t,n){this.name=e,this.tracks=n,this.duration=void 0!==t?t:-1,this.uuid=Bt.generateUUID(),this.duration<0&&this.resetDuration()}function ts(e){if(void 0===e.type)throw new Error(\"THREE.KeyframeTrack: track type undefined, can not parse\");var t=function(e){switch(e.toLowerCase()){case\"scalar\":case\"double\":case\"float\":case\"number\":case\"integer\":return Zo;case\"vector\":case\"vector2\":case\"vector3\":case\"vector4\":return $o;case\"color\":return Yo;case\"quaternion\":return Ko;case\"bool\":case\"boolean\":return qo;case\"string\":return Qo}throw new Error(\"THREE.KeyframeTrack: Unsupported typeName: \"+e)}(e.type);if(void 0===e.times){var n=[],r=[];Ho.flattenJSON(e.keys,n,r,\"value\"),e.times=n,e.values=r}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}function ns(e){this.manager=void 0!==e?e:$a,this.textures={}}function rs(e){this.manager=void 0!==e?e:$a}Object.assign(ko.prototype,{evaluate:function(e){var t=this.parameterPositions,n=this._cachedIndex,r=t[n],i=t[n-1];e:{t:{var a;n:{r:if(!(e<r)){for(var o=n+2;;){if(void 0===r){if(e<i)break r;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,i)}if(n===o)break;if(i=r,e<(r=t[++n]))break t}a=t.length;break n}if(e>=i)break e;var s=t[1];e<s&&(n=2,i=s);for(o=n-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(n===o)break;if(r=i,e>=(i=t[--n-1]))break t}a=n,n=0}for(;n<a;){var c=n+a>>>1;e<t[c]?a=c:n=c+1}if(r=t[n],void 0===(i=t[n-1]))return this._cachedIndex=0,this.beforeStart_(0,e,r);if(void 0===r)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,i,e)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,e,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){for(var t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r,a=0;a!==r;++a)t[a]=n[i+a];return t},interpolate_:function(){throw new Error(\"call to abstract method\")},intervalChanged_:function(){}}),\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign(ko.prototype,{beforeStart_:ko.prototype.copySampleValue_,afterEnd_:ko.prototype.copySampleValue_}),jo.prototype=Object.assign(Object.create(ko.prototype),{constructor:jo,DefaultSettings_:{endingStart:xt,endingEnd:xt},intervalChanged_:function(e,t,n){var r=this.parameterPositions,i=e-2,a=e+1,o=r[i],s=r[a];if(void 0===o)switch(this.getSettings_().endingStart){case bt:i=e,o=2*t-n;break;case wt:o=t+r[i=r.length-2]-r[i+1];break;default:i=e,o=n}if(void 0===s)switch(this.getSettings_().endingEnd){case bt:a=e,s=2*n-t;break;case wt:a=1,s=n+r[1]-r[0];break;default:a=e-1,s=t}var c=.5*(n-t),u=this.valueSize;this._weightPrev=c/(t-o),this._weightNext=c/(s-n),this._offsetPrev=i*u,this._offsetNext=a*u},interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,c=s-o,u=this._offsetPrev,l=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(n-t)/(r-t),f=p*p,m=f*p,g=-h*m+2*h*f-h*p,v=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f,b=0;b!==o;++b)i[b]=g*a[u+b]+v*a[c+b]+y*a[s+b]+x*a[l+b];return i}}),Vo.prototype=Object.assign(Object.create(ko.prototype),{constructor:Vo,interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,c=s-o,u=(n-t)/(r-t),l=1-u,h=0;h!==o;++h)i[h]=a[c+h]*l+a[s+h]*u;return i}}),Wo.prototype=Object.assign(Object.create(ko.prototype),{constructor:Wo,interpolate_:function(e){return this.copySampleValue_(e-1)}}),Object.assign(Xo,{toJSON:function(e){var t,n=e.constructor;if(void 0!==n.toJSON)t=n.toJSON(e);else{t={name:e.name,times:Ho.convertArray(e.times,Array),values:Ho.convertArray(e.values,Array)};var r=e.getInterpolation();r!==e.DefaultInterpolation&&(t.interpolation=r)}return t.type=e.ValueTypeName,t}}),Object.assign(Xo.prototype,{constructor:Xo,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:vt,InterpolantFactoryMethodDiscrete:function(e){return new Wo(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new Vo(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new jo(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){var t;switch(e){case gt:t=this.InterpolantFactoryMethodDiscrete;break;case vt:t=this.InterpolantFactoryMethodLinear;break;case yt:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){var n=\"unsupported interpolation for \"+this.ValueTypeName+\" keyframe track named \"+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return console.warn(\"THREE.KeyframeTrack:\",n),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return gt;case this.InterpolantFactoryMethodLinear:return vt;case this.InterpolantFactoryMethodSmooth:return yt}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e)for(var t=this.times,n=0,r=t.length;n!==r;++n)t[n]+=e;return this},scale:function(e){if(1!==e)for(var t=this.times,n=0,r=t.length;n!==r;++n)t[n]*=e;return this},trim:function(e,t){for(var n=this.times,r=n.length,i=0,a=r-1;i!==r&&n[i]<e;)++i;for(;-1!==a&&n[a]>t;)--a;if(++a,0!==i||a!==r){i>=a&&(i=(a=Math.max(a,1))-1);var o=this.getValueSize();this.times=Ho.arraySlice(n,i,a),this.values=Ho.arraySlice(this.values,i*o,a*o)}return this},validate:function(){var e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error(\"THREE.KeyframeTrack: Invalid value size in track.\",this),e=!1);var n=this.times,r=this.values,i=n.length;0===i&&(console.error(\"THREE.KeyframeTrack: Track is empty.\",this),e=!1);for(var a=null,o=0;o!==i;o++){var s=n[o];if(\"number\"==typeof s&&isNaN(s)){console.error(\"THREE.KeyframeTrack: Time is not a valid number.\",this,o,s),e=!1;break}if(null!==a&&a>s){console.error(\"THREE.KeyframeTrack: Out of order keys.\",this,o,s,a),e=!1;break}a=s}if(void 0!==r&&Ho.isTypedArray(r)){o=0;for(var c=r.length;o!==c;++o){var u=r[o];if(isNaN(u)){console.error(\"THREE.KeyframeTrack: Value is not a valid number.\",this,o,u),e=!1;break}}}return e},optimize:function(){for(var e=this.times,t=this.values,n=this.getValueSize(),r=this.getInterpolation()===yt,i=1,a=e.length-1,o=1;o<a;++o){var s=!1,c=e[o];if(c!==e[o+1]&&(1!==o||c!==c[0]))if(r)s=!0;else for(var u=o*n,l=u-n,h=u+n,d=0;d!==n;++d){var p=t[u+d];if(p!==t[l+d]||p!==t[h+d]){s=!0;break}}if(s){if(o!==i){e[i]=e[o];var f=o*n,m=i*n;for(d=0;d!==n;++d)t[m+d]=t[f+d]}++i}}if(a>0){e[i]=e[a];for(f=a*n,m=i*n,d=0;d!==n;++d)t[m+d]=t[f+d];++i}return i!==e.length&&(this.times=Ho.arraySlice(e,0,i),this.values=Ho.arraySlice(t,0,i*n)),this}}),qo.prototype=Object.assign(Object.create(Xo.prototype),{constructor:qo,ValueTypeName:\"bool\",ValueBufferType:Array,DefaultInterpolation:gt,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Yo.prototype=Object.assign(Object.create(Xo.prototype),{constructor:Yo,ValueTypeName:\"color\"}),Zo.prototype=Object.assign(Object.create(Xo.prototype),{constructor:Zo,ValueTypeName:\"number\"}),Jo.prototype=Object.assign(Object.create(ko.prototype),{constructor:Jo,interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,c=(n-t)/(r-t),u=s+o;s!==u;s+=4)zt.slerpFlat(i,0,a,s-o,a,s,c);return i}}),Ko.prototype=Object.assign(Object.create(Xo.prototype),{constructor:Ko,ValueTypeName:\"quaternion\",DefaultInterpolation:vt,InterpolantFactoryMethodLinear:function(e){return new Jo(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),Qo.prototype=Object.assign(Object.create(Xo.prototype),{constructor:Qo,ValueTypeName:\"string\",ValueBufferType:Array,DefaultInterpolation:gt,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),$o.prototype=Object.assign(Object.create(Xo.prototype),{constructor:$o,ValueTypeName:\"vector\"}),Object.assign(es,{parse:function(e){for(var t=[],n=e.tracks,r=1/(e.fps||1),i=0,a=n.length;i!==a;++i)t.push(ts(n[i]).scale(r));return new es(e.name,e.duration,t)},toJSON:function(e){for(var t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid},i=0,a=n.length;i!==a;++i)t.push(Xo.toJSON(n[i]));return r},CreateFromMorphTargetSequence:function(e,t,n,r){for(var i=t.length,a=[],o=0;o<i;o++){var s=[],c=[];s.push((o+i-1)%i,o,(o+1)%i),c.push(0,1,0);var u=Ho.getKeyframeOrder(s);s=Ho.sortedArray(s,1,u),c=Ho.sortedArray(c,1,u),r||0!==s[0]||(s.push(i),c.push(c[0])),a.push(new Zo(\".morphTargetInfluences[\"+t[o].name+\"]\",s,c).scale(1/n))}return new es(e,-1,a)},findByName:function(e,t){var n=e;if(!Array.isArray(e)){var r=e;n=r.geometry&&r.geometry.animations||r.animations}for(var i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null},CreateClipsFromMorphTargetSequences:function(e,t,n){for(var r={},i=/^([\\w-]*?)([\\d]+)$/,a=0,o=e.length;a<o;a++){var s=e[a],c=s.name.match(i);if(c&&c.length>1){var u=r[h=c[1]];u||(r[h]=u=[]),u.push(s)}}var l=[];for(var h in r)l.push(es.CreateFromMorphTargetSequence(h,r[h],t,n));return l},parseAnimation:function(e,t){if(!e)return console.error(\"THREE.AnimationClip: No animation in JSONLoader data.\"),null;for(var n=function(e,t,n,r,i){if(0!==n.length){var a=[],o=[];Ho.flattenJSON(n,a,o,r),0!==a.length&&i.push(new e(t,a,o))}},r=[],i=e.name||\"default\",a=e.length||-1,o=e.fps||30,s=e.hierarchy||[],c=0;c<s.length;c++){var u=s[c].keys;if(u&&0!==u.length)if(u[0].morphTargets){for(var l={},h=0;h<u.length;h++)if(u[h].morphTargets)for(var d=0;d<u[h].morphTargets.length;d++)l[u[h].morphTargets[d]]=-1;for(var p in l){var f=[],m=[];for(d=0;d!==u[h].morphTargets.length;++d){var g=u[h];f.push(g.time),m.push(g.morphTarget===p?1:0)}r.push(new Zo(\".morphTargetInfluence[\"+p+\"]\",f,m))}a=l.length*(o||1)}else{var v=\".bones[\"+t[c].name+\"]\";n($o,v+\".position\",u,\"pos\",r),n(Ko,v+\".quaternion\",u,\"rot\",r),n($o,v+\".scale\",u,\"scl\",r)}}return 0===r.length?null:new es(i,a,r)}}),Object.assign(es.prototype,{resetDuration:function(){for(var e=0,t=0,n=this.tracks.length;t!==n;++t){var r=this.tracks[t];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this},trim:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){for(var e=!0,t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}}),Object.assign(ns.prototype,{load:function(e,t,n,r){var i=this;new to(i.manager).load(e,function(e){t(i.parse(JSON.parse(e)))},n,r)},setTextures:function(e){this.textures=e},parse:function(e){var t=this.textures;function n(e){return void 0===t[e]&&console.warn(\"THREE.MaterialLoader: Undefined texture\",e),t[e]}var r=new Ja[e.type];if(void 0!==e.uuid&&(r.uuid=e.uuid),void 0!==e.name&&(r.name=e.name),void 0!==e.color&&r.color.setHex(e.color),void 0!==e.roughness&&(r.roughness=e.roughness),void 0!==e.metalness&&(r.metalness=e.metalness),void 0!==e.emissive&&r.emissive.setHex(e.emissive),void 0!==e.specular&&r.specular.setHex(e.specular),void 0!==e.shininess&&(r.shininess=e.shininess),void 0!==e.clearCoat&&(r.clearCoat=e.clearCoat),void 0!==e.clearCoatRoughness&&(r.clearCoatRoughness=e.clearCoatRoughness),void 0!==e.uniforms&&(r.uniforms=e.uniforms),void 0!==e.vertexShader&&(r.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(r.fragmentShader=e.fragmentShader),void 0!==e.vertexColors&&(r.vertexColors=e.vertexColors),void 0!==e.fog&&(r.fog=e.fog),void 0!==e.flatShading&&(r.flatShading=e.flatShading),void 0!==e.blending&&(r.blending=e.blending),void 0!==e.side&&(r.side=e.side),void 0!==e.opacity&&(r.opacity=e.opacity),void 0!==e.transparent&&(r.transparent=e.transparent),void 0!==e.alphaTest&&(r.alphaTest=e.alphaTest),void 0!==e.depthTest&&(r.depthTest=e.depthTest),void 0!==e.depthWrite&&(r.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(r.colorWrite=e.colorWrite),void 0!==e.wireframe&&(r.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(r.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(r.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(r.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(r.rotation=e.rotation),1!==e.linewidth&&(r.linewidth=e.linewidth),void 0!==e.dashSize&&(r.dashSize=e.dashSize),void 0!==e.gapSize&&(r.gapSize=e.gapSize),void 0!==e.scale&&(r.scale=e.scale),void 0!==e.polygonOffset&&(r.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(r.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(r.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(r.skinning=e.skinning),void 0!==e.morphTargets&&(r.morphTargets=e.morphTargets),void 0!==e.dithering&&(r.dithering=e.dithering),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.shading&&(r.flatShading=1===e.shading),void 0!==e.size&&(r.size=e.size),void 0!==e.sizeAttenuation&&(r.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(r.map=n(e.map)),void 0!==e.alphaMap&&(r.alphaMap=n(e.alphaMap),r.transparent=!0),void 0!==e.bumpMap&&(r.bumpMap=n(e.bumpMap)),void 0!==e.bumpScale&&(r.bumpScale=e.bumpScale),void 0!==e.normalMap&&(r.normalMap=n(e.normalMap)),void 0!==e.normalMapType&&(r.normalMapType=e.normalMapType),void 0!==e.normalScale){var i=e.normalScale;!1===Array.isArray(i)&&(i=[i,i]),r.normalScale=(new Ft).fromArray(i)}return void 0!==e.displacementMap&&(r.displacementMap=n(e.displacementMap)),void 0!==e.displacementScale&&(r.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(r.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(r.roughnessMap=n(e.roughnessMap)),void 0!==e.metalnessMap&&(r.metalnessMap=n(e.metalnessMap)),void 0!==e.emissiveMap&&(r.emissiveMap=n(e.emissiveMap)),void 0!==e.emissiveIntensity&&(r.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(r.specularMap=n(e.specularMap)),void 0!==e.envMap&&(r.envMap=n(e.envMap)),void 0!==e.reflectivity&&(r.reflectivity=e.reflectivity),void 0!==e.lightMap&&(r.lightMap=n(e.lightMap)),void 0!==e.lightMapIntensity&&(r.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(r.aoMap=n(e.aoMap)),void 0!==e.aoMapIntensity&&(r.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(r.gradientMap=n(e.gradientMap)),r}}),Object.assign(rs.prototype,{load:function(e,t,n,r){var i=this;new to(i.manager).load(e,function(e){t(i.parse(JSON.parse(e)))},n,r)},parse:function(e){var t=new Pn,n=e.data.index;if(void 0!==n){var r=new is[n.type](n.array);t.setIndex(new yn(r,1))}var i=e.data.attributes;for(var a in i){var o=i[a];r=new is[o.type](o.array);t.addAttribute(a,new yn(r,o.itemSize,o.normalized))}var s=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==s)for(var c=0,u=s.length;c!==u;++c){var l=s[c];t.addGroup(l.start,l.count,l.materialIndex)}var h=e.data.boundingSphere;if(void 0!==h){var d=new Ht;void 0!==h.center&&d.fromArray(h.center),t.boundingSphere=new Kt(d,h.radius)}return t}});var is={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:\"undefined\"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function as(){}as.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){for(var t=this.handlers,n=0,r=t.length;n<r;n+=2){var i=t[n],a=t[n+1];if(i.test(e))return a}return null}},Object.assign(as.prototype,{crossOrigin:\"anonymous\",onLoadStart:function(){},onLoadProgress:function(){},onLoadComplete:function(){},initMaterials:function(e,t,n){for(var r=[],i=0;i<e.length;++i)r[i]=this.createMaterial(e[i],t,n);return r},createMaterial:function(){var e={NoBlending:M,NormalBlending:E,AdditiveBlending:T,SubtractiveBlending:S,MultiplyBlending:A,CustomBlending:L},t=new rn,n=new oo,r=new ns;return function(i,a,o){var s={};function c(e,t,r,i,c){var u,l=a+e,h=as.Handlers.get(l);null!==h?u=h.load(l):(n.setCrossOrigin(o),u=n.load(l)),void 0!==t&&(u.repeat.fromArray(t),1!==t[0]&&(u.wrapS=me),1!==t[1]&&(u.wrapT=me)),void 0!==r&&u.offset.fromArray(r),void 0!==i&&(\"repeat\"===i[0]&&(u.wrapS=me),\"mirror\"===i[0]&&(u.wrapS=ve),\"repeat\"===i[1]&&(u.wrapT=me),\"mirror\"===i[1]&&(u.wrapT=ve)),void 0!==c&&(u.anisotropy=c);var d=Bt.generateUUID();return s[d]=u,d}var u={uuid:Bt.generateUUID(),type:\"MeshLambertMaterial\"};for(var l in i){var h=i[l];switch(l){case\"DbgColor\":case\"DbgIndex\":case\"opticalDensity\":case\"illumination\":break;case\"DbgName\":u.name=h;break;case\"blending\":u.blending=e[h];break;case\"colorAmbient\":case\"mapAmbient\":console.warn(\"THREE.Loader.createMaterial:\",l,\"is no longer supported.\");break;case\"colorDiffuse\":u.color=t.fromArray(h).getHex();break;case\"colorSpecular\":u.specular=t.fromArray(h).getHex();break;case\"colorEmissive\":u.emissive=t.fromArray(h).getHex();break;case\"specularCoef\":u.shininess=h;break;case\"shading\":\"basic\"===h.toLowerCase()&&(u.type=\"MeshBasicMaterial\"),\"phong\"===h.toLowerCase()&&(u.type=\"MeshPhongMaterial\"),\"standard\"===h.toLowerCase()&&(u.type=\"MeshStandardMaterial\");break;case\"mapDiffuse\":u.map=c(h,i.mapDiffuseRepeat,i.mapDiffuseOffset,i.mapDiffuseWrap,i.mapDiffuseAnisotropy);break;case\"mapDiffuseRepeat\":case\"mapDiffuseOffset\":case\"mapDiffuseWrap\":case\"mapDiffuseAnisotropy\":break;case\"mapEmissive\":u.emissiveMap=c(h,i.mapEmissiveRepeat,i.mapEmissiveOffset,i.mapEmissiveWrap,i.mapEmissiveAnisotropy);break;case\"mapEmissiveRepeat\":case\"mapEmissiveOffset\":case\"mapEmissiveWrap\":case\"mapEmissiveAnisotropy\":break;case\"mapLight\":u.lightMap=c(h,i.mapLightRepeat,i.mapLightOffset,i.mapLightWrap,i.mapLightAnisotropy);break;case\"mapLightRepeat\":case\"mapLightOffset\":case\"mapLightWrap\":case\"mapLightAnisotropy\":break;case\"mapAO\":u.aoMap=c(h,i.mapAORepeat,i.mapAOOffset,i.mapAOWrap,i.mapAOAnisotropy);break;case\"mapAORepeat\":case\"mapAOOffset\":case\"mapAOWrap\":case\"mapAOAnisotropy\":break;case\"mapBump\":u.bumpMap=c(h,i.mapBumpRepeat,i.mapBumpOffset,i.mapBumpWrap,i.mapBumpAnisotropy);break;case\"mapBumpScale\":u.bumpScale=h;break;case\"mapBumpRepeat\":case\"mapBumpOffset\":case\"mapBumpWrap\":case\"mapBumpAnisotropy\":break;case\"mapNormal\":u.normalMap=c(h,i.mapNormalRepeat,i.mapNormalOffset,i.mapNormalWrap,i.mapNormalAnisotropy);break;case\"mapNormalFactor\":u.normalScale=h;break;case\"mapNormalRepeat\":case\"mapNormalOffset\":case\"mapNormalWrap\":case\"mapNormalAnisotropy\":break;case\"mapSpecular\":u.specularMap=c(h,i.mapSpecularRepeat,i.mapSpecularOffset,i.mapSpecularWrap,i.mapSpecularAnisotropy);break;case\"mapSpecularRepeat\":case\"mapSpecularOffset\":case\"mapSpecularWrap\":case\"mapSpecularAnisotropy\":break;case\"mapMetalness\":u.metalnessMap=c(h,i.mapMetalnessRepeat,i.mapMetalnessOffset,i.mapMetalnessWrap,i.mapMetalnessAnisotropy);break;case\"mapMetalnessRepeat\":case\"mapMetalnessOffset\":case\"mapMetalnessWrap\":case\"mapMetalnessAnisotropy\":break;case\"mapRoughness\":u.roughnessMap=c(h,i.mapRoughnessRepeat,i.mapRoughnessOffset,i.mapRoughnessWrap,i.mapRoughnessAnisotropy);break;case\"mapRoughnessRepeat\":case\"mapRoughnessOffset\":case\"mapRoughnessWrap\":case\"mapRoughnessAnisotropy\":break;case\"mapAlpha\":u.alphaMap=c(h,i.mapAlphaRepeat,i.mapAlphaOffset,i.mapAlphaWrap,i.mapAlphaAnisotropy);break;case\"mapAlphaRepeat\":case\"mapAlphaOffset\":case\"mapAlphaWrap\":case\"mapAlphaAnisotropy\":break;case\"flipSided\":u.side=g;break;case\"doubleSided\":u.side=v;break;case\"transparency\":console.warn(\"THREE.Loader.createMaterial: transparency has been renamed to opacity\"),u.opacity=h;break;case\"depthTest\":case\"depthWrite\":case\"colorWrite\":case\"opacity\":case\"reflectivity\":case\"transparent\":case\"visible\":case\"wireframe\":u[l]=h;break;case\"vertexColors\":!0===h&&(u.vertexColors=_),\"face\"===h&&(u.vertexColors=w);break;default:console.error(\"THREE.Loader.createMaterial: Unsupported\",l,h)}}return\"MeshBasicMaterial\"===u.type&&delete u.emissive,\"MeshPhongMaterial\"!==u.type&&delete u.specular,u.opacity<1&&(u.transparent=!0),r.setTextures(s),r.parse(u)}}()});var os={decodeText:function(e){if(\"undefined\"!=typeof TextDecoder)return(new TextDecoder).decode(e);for(var t=\"\",n=0,r=e.length;n<r;n++)t+=String.fromCharCode(e[n]);return decodeURIComponent(escape(t))},extractUrlBase:function(e){var t=e.lastIndexOf(\"/\");return-1===t?\"./\":e.substr(0,t+1)}};function ss(e){\"boolean\"==typeof e&&(console.warn(\"THREE.JSONLoader: showStatus parameter has been removed from constructor.\"),e=void 0),this.manager=void 0!==e?e:$a,this.withCredentials=!1}function cs(e){this.manager=void 0!==e?e:$a,this.texturePath=\"\"}Object.assign(ss.prototype,{crossOrigin:\"anonymous\",load:function(e,t,n,r){var i=this,a=this.texturePath&&\"string\"==typeof this.texturePath?this.texturePath:os.extractUrlBase(e),o=new to(this.manager);o.setWithCredentials(this.withCredentials),o.load(e,function(n){var r=JSON.parse(n),o=r.metadata;if(void 0!==o){var s=o.type;if(void 0!==s&&\"object\"===s.toLowerCase())return void console.error(\"THREE.JSONLoader: \"+e+\" should be loaded with THREE.ObjectLoader instead.\")}var c=i.parse(r,a);t(c.geometry,c.materials)},n,r)},setCrossOrigin:function(e){return this.crossOrigin=e,this},setTexturePath:function(e){return this.texturePath=e,this},parse:function(){return function(e,t){void 0!==e.data&&(e=e.data),void 0!==e.scale?e.scale=1/e.scale:e.scale=1;var n=new vn;return function(e,t){function n(e,t){return e&1<<t}var r,i,a,o,s,c,u,l,h,d,p,f,m,g,v,y,x,b,w,_,M,E,T,S,A,L=e.faces,R=e.vertices,C=e.normals,P=e.colors,O=e.scale,N=0;if(void 0!==e.uvs){for(r=0;r<e.uvs.length;r++)e.uvs[r].length&&N++;for(r=0;r<N;r++)t.faceVertexUvs[r]=[]}for(o=0,s=R.length;o<s;)(b=new Ht).x=R[o++]*O,b.y=R[o++]*O,b.z=R[o++]*O,t.vertices.push(b);for(o=0,s=L.length;o<s;)if(p=n(d=L[o++],0),f=n(d,1),m=n(d,3),g=n(d,4),v=n(d,5),y=n(d,6),x=n(d,7),p){if((_=new mn).a=L[o],_.b=L[o+1],_.c=L[o+3],(M=new mn).a=L[o+1],M.b=L[o+2],M.c=L[o+3],o+=4,f&&(h=L[o++],_.materialIndex=h,M.materialIndex=h),a=t.faces.length,m)for(r=0;r<N;r++)for(S=e.uvs[r],t.faceVertexUvs[r][a]=[],t.faceVertexUvs[r][a+1]=[],i=0;i<4;i++)A=new Ft(S[2*(l=L[o++])],S[2*l+1]),2!==i&&t.faceVertexUvs[r][a].push(A),0!==i&&t.faceVertexUvs[r][a+1].push(A);if(g&&(u=3*L[o++],_.normal.set(C[u++],C[u++],C[u]),M.normal.copy(_.normal)),v)for(r=0;r<4;r++)u=3*L[o++],T=new Ht(C[u++],C[u++],C[u]),2!==r&&_.vertexNormals.push(T),0!==r&&M.vertexNormals.push(T);if(y&&(E=P[c=L[o++]],_.color.setHex(E),M.color.setHex(E)),x)for(r=0;r<4;r++)E=P[c=L[o++]],2!==r&&_.vertexColors.push(new rn(E)),0!==r&&M.vertexColors.push(new rn(E));t.faces.push(_),t.faces.push(M)}else{if((w=new mn).a=L[o++],w.b=L[o++],w.c=L[o++],f&&(h=L[o++],w.materialIndex=h),a=t.faces.length,m)for(r=0;r<N;r++)for(S=e.uvs[r],t.faceVertexUvs[r][a]=[],i=0;i<3;i++)A=new Ft(S[2*(l=L[o++])],S[2*l+1]),t.faceVertexUvs[r][a].push(A);if(g&&(u=3*L[o++],w.normal.set(C[u++],C[u++],C[u])),v)for(r=0;r<3;r++)u=3*L[o++],T=new Ht(C[u++],C[u++],C[u]),w.vertexNormals.push(T);if(y&&(c=L[o++],w.color.setHex(P[c])),x)for(r=0;r<3;r++)c=L[o++],w.vertexColors.push(new rn(P[c]));t.faces.push(w)}}(e,n),function(e,t){var n=void 0!==e.influencesPerVertex?e.influencesPerVertex:2;if(e.skinWeights)for(var r=0,i=e.skinWeights.length;r<i;r+=n){var a=e.skinWeights[r],o=n>1?e.skinWeights[r+1]:0,s=n>2?e.skinWeights[r+2]:0,c=n>3?e.skinWeights[r+3]:0;t.skinWeights.push(new Xt(a,o,s,c))}if(e.skinIndices)for(r=0,i=e.skinIndices.length;r<i;r+=n){var u=e.skinIndices[r],l=n>1?e.skinIndices[r+1]:0,h=n>2?e.skinIndices[r+2]:0,d=n>3?e.skinIndices[r+3]:0;t.skinIndices.push(new Xt(u,l,h,d))}t.bones=e.bones,t.bones&&t.bones.length>0&&(t.skinWeights.length!==t.skinIndices.length||t.skinIndices.length!==t.vertices.length)&&console.warn(\"When skinning, number of vertices (\"+t.vertices.length+\"), skinIndices (\"+t.skinIndices.length+\"), and skinWeights (\"+t.skinWeights.length+\") should match.\")}(e,n),function(e,t){var n=e.scale;if(void 0!==e.morphTargets)for(var r=0,i=e.morphTargets.length;r<i;r++){t.morphTargets[r]={},t.morphTargets[r].name=e.morphTargets[r].name,t.morphTargets[r].vertices=[];for(var a=t.morphTargets[r].vertices,o=e.morphTargets[r].vertices,s=0,c=o.length;s<c;s+=3){var u=new Ht;u.x=o[s]*n,u.y=o[s+1]*n,u.z=o[s+2]*n,a.push(u)}}if(void 0!==e.morphColors&&e.morphColors.length>0){console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.');var l=t.faces,h=e.morphColors[0].colors;for(r=0,i=l.length;r<i;r++)l[r].color.fromArray(h,3*r)}}(e,n),function(e,t){var n=[],r=[];void 0!==e.animation&&r.push(e.animation),void 0!==e.animations&&(e.animations.length?r=r.concat(e.animations):r.push(e.animations));for(var i=0;i<r.length;i++){var a=es.parseAnimation(r[i],t.bones);a&&n.push(a)}if(t.morphTargets){var o=es.CreateClipsFromMorphTargetSequences(t.morphTargets,10);n=n.concat(o)}n.length>0&&(t.animations=n)}(e,n),n.computeFaceNormals(),n.computeBoundingSphere(),void 0===e.materials||0===e.materials.length?{geometry:n}:{geometry:n,materials:as.prototype.initMaterials(e.materials,t,this.crossOrigin)}}}()}),Object.assign(cs.prototype,{crossOrigin:\"anonymous\",load:function(e,t,n,r){\"\"===this.texturePath&&(this.texturePath=e.substring(0,e.lastIndexOf(\"/\")+1));var i=this;new to(i.manager).load(e,function(n){var a=null;try{a=JSON.parse(n)}catch(t){return void 0!==r&&r(t),void console.error(\"THREE:ObjectLoader: Can't parse \"+e+\".\",t.message)}var o=a.metadata;void 0!==o&&void 0!==o.type&&\"geometry\"!==o.type.toLowerCase()?i.parse(a,t):console.error(\"THREE.ObjectLoader: Can't load \"+e+\". Use THREE.JSONLoader instead.\")},n,r)},setTexturePath:function(e){return this.texturePath=e,this},setCrossOrigin:function(e){return this.crossOrigin=e,this},parse:function(e,t){var n=this.parseShape(e.shapes),r=this.parseGeometries(e.geometries,n),i=this.parseImages(e.images,function(){void 0!==t&&t(s)}),a=this.parseTextures(e.textures,i),o=this.parseMaterials(e.materials,a),s=this.parseObject(e.object,r,o);return e.animations&&(s.animations=this.parseAnimations(e.animations)),void 0!==e.images&&0!==e.images.length||void 0!==t&&t(s),s},parseShape:function(e){var t={};if(void 0!==e)for(var n=0,r=e.length;n<r;n++){var i=(new Co).fromJSON(e[n]);t[i.uuid]=i}return t},parseGeometries:function(e,t){var n={};if(void 0!==e)for(var r=new ss,i=new rs,a=0,o=e.length;a<o;a++){var s,c=e[a];switch(c.type){case\"PlaneGeometry\":case\"PlaneBufferGeometry\":s=new za[c.type](c.width,c.height,c.widthSegments,c.heightSegments);break;case\"BoxGeometry\":case\"BoxBufferGeometry\":case\"CubeGeometry\":s=new za[c.type](c.width,c.height,c.depth,c.widthSegments,c.heightSegments,c.depthSegments);break;case\"CircleGeometry\":case\"CircleBufferGeometry\":s=new za[c.type](c.radius,c.segments,c.thetaStart,c.thetaLength);break;case\"CylinderGeometry\":case\"CylinderBufferGeometry\":s=new za[c.type](c.radiusTop,c.radiusBottom,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case\"ConeGeometry\":case\"ConeBufferGeometry\":s=new za[c.type](c.radius,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case\"SphereGeometry\":case\"SphereBufferGeometry\":s=new za[c.type](c.radius,c.widthSegments,c.heightSegments,c.phiStart,c.phiLength,c.thetaStart,c.thetaLength);break;case\"DodecahedronGeometry\":case\"DodecahedronBufferGeometry\":case\"IcosahedronGeometry\":case\"IcosahedronBufferGeometry\":case\"OctahedronGeometry\":case\"OctahedronBufferGeometry\":case\"TetrahedronGeometry\":case\"TetrahedronBufferGeometry\":s=new za[c.type](c.radius,c.detail);break;case\"RingGeometry\":case\"RingBufferGeometry\":s=new za[c.type](c.innerRadius,c.outerRadius,c.thetaSegments,c.phiSegments,c.thetaStart,c.thetaLength);break;case\"TorusGeometry\":case\"TorusBufferGeometry\":s=new za[c.type](c.radius,c.tube,c.radialSegments,c.tubularSegments,c.arc);break;case\"TorusKnotGeometry\":case\"TorusKnotBufferGeometry\":s=new za[c.type](c.radius,c.tube,c.tubularSegments,c.radialSegments,c.p,c.q);break;case\"LatheGeometry\":case\"LatheBufferGeometry\":s=new za[c.type](c.points,c.segments,c.phiStart,c.phiLength);break;case\"PolyhedronGeometry\":case\"PolyhedronBufferGeometry\":s=new za[c.type](c.vertices,c.indices,c.radius,c.details);break;case\"ShapeGeometry\":case\"ShapeBufferGeometry\":for(var u=[],l=0,h=c.shapes.length;l<h;l++){var d=t[c.shapes[l]];u.push(d)}s=new za[c.type](u,c.curveSegments);break;case\"ExtrudeGeometry\":case\"ExtrudeBufferGeometry\":for(u=[],l=0,h=c.shapes.length;l<h;l++){d=t[c.shapes[l]];u.push(d)}var p=c.options.extrudePath;void 0!==p&&(c.options.extrudePath=(new Ao[p.type]).fromJSON(p)),s=new za[c.type](u,c.options);break;case\"BufferGeometry\":s=i.parse(c);break;case\"Geometry\":s=r.parse(c,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type \"'+c.type+'\"');continue}s.uuid=c.uuid,void 0!==c.name&&(s.name=c.name),!0===s.isBufferGeometry&&void 0!==c.userData&&(s.userData=c.userData),n[c.uuid]=s}return n},parseMaterials:function(e,t){var n={};if(void 0!==e){var r=new ns;r.setTextures(t);for(var i=0,a=e.length;i<a;i++){var o=e[i];if(\"MultiMaterial\"===o.type){for(var s=[],c=0;c<o.materials.length;c++)s.push(r.parse(o.materials[c]));n[o.uuid]=s}else n[o.uuid]=r.parse(o)}}return n},parseAnimations:function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n],i=es.parse(r);void 0!==r.uuid&&(i.uuid=r.uuid),t.push(i)}return t},parseImages:function(e,t){var n=this,r={};function i(e){return n.manager.itemStart(e),a.load(e,function(){n.manager.itemEnd(e)},void 0,function(){n.manager.itemEnd(e),n.manager.itemError(e)})}if(void 0!==e&&e.length>0){var a=new io(new Qa(t));a.setCrossOrigin(this.crossOrigin);for(var o=0,s=e.length;o<s;o++){var c=e[o],u=c.url;if(Array.isArray(u)){r[c.uuid]=[];for(var l=0,h=u.length;l<h;l++){var d=u[l],p=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(d)?d:n.texturePath+d;r[c.uuid].push(i(p))}}else{p=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(c.url)?c.url:n.texturePath+c.url;r[c.uuid]=i(p)}}}return r},parseTextures:function(e,t){function n(e,t){return\"number\"==typeof e?e:(console.warn(\"THREE.ObjectLoader.parseTexture: Constant should be in numeric form.\",e),t[e])}var r={};if(void 0!==e)for(var i=0,a=e.length;i<a;i++){var o,s=e[i];void 0===s.image&&console.warn('THREE.ObjectLoader: No \"image\" specified for',s.uuid),void 0===t[s.image]&&console.warn(\"THREE.ObjectLoader: Undefined image\",s.image),(o=Array.isArray(t[s.image])?new Vn(t[s.image]):new Wt(t[s.image])).needsUpdate=!0,o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),void 0!==s.mapping&&(o.mapping=n(s.mapping,ls)),void 0!==s.offset&&o.offset.fromArray(s.offset),void 0!==s.repeat&&o.repeat.fromArray(s.repeat),void 0!==s.center&&o.center.fromArray(s.center),void 0!==s.rotation&&(o.rotation=s.rotation),void 0!==s.wrap&&(o.wrapS=n(s.wrap[0],hs),o.wrapT=n(s.wrap[1],hs)),void 0!==s.format&&(o.format=s.format),void 0!==s.minFilter&&(o.minFilter=n(s.minFilter,ds)),void 0!==s.magFilter&&(o.magFilter=n(s.magFilter,ds)),void 0!==s.anisotropy&&(o.anisotropy=s.anisotropy),void 0!==s.flipY&&(o.flipY=s.flipY),r[s.uuid]=o}return r},parseObject:function(e,t,n){var r;function i(e){return void 0===t[e]&&console.warn(\"THREE.ObjectLoader: Undefined geometry\",e),t[e]}function a(e){if(void 0!==e){if(Array.isArray(e)){for(var t=[],r=0,i=e.length;r<i;r++){var a=e[r];void 0===n[a]&&console.warn(\"THREE.ObjectLoader: Undefined material\",a),t.push(n[a])}return t}return void 0===n[e]&&console.warn(\"THREE.ObjectLoader: Undefined material\",e),n[e]}}switch(e.type){case\"Scene\":r=new ui,void 0!==e.background&&Number.isInteger(e.background)&&(r.background=new rn(e.background)),void 0!==e.fog&&(\"Fog\"===e.fog.type?r.fog=new ci(e.fog.color,e.fog.near,e.fog.far):\"FogExp2\"===e.fog.type&&(r.fog=new si(e.fog.color,e.fog.density)));break;case\"PerspectiveCamera\":r=new ri(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(r.focus=e.focus),void 0!==e.zoom&&(r.zoom=e.zoom),void 0!==e.filmGauge&&(r.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(r.filmOffset=e.filmOffset),void 0!==e.view&&(r.view=Object.assign({},e.view));break;case\"OrthographicCamera\":r=new fn(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(r.zoom=e.zoom),void 0!==e.view&&(r.view=Object.assign({},e.view));break;case\"AmbientLight\":r=new Go(e.color,e.intensity);break;case\"DirectionalLight\":r=new Fo(e.color,e.intensity);break;case\"PointLight\":r=new Uo(e.color,e.intensity,e.distance,e.decay);break;case\"RectAreaLight\":r=new zo(e.color,e.intensity,e.width,e.height);break;case\"SpotLight\":r=new Do(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case\"HemisphereLight\":r=new Oo(e.color,e.groundColor,e.intensity);break;case\"SkinnedMesh\":console.warn(\"THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.\");case\"Mesh\":var o=i(e.geometry),s=a(e.material);r=o.bones&&o.bones.length>0?new vi(o,s):new kn(o,s);break;case\"LOD\":r=new fi;break;case\"Line\":r=new xi(i(e.geometry),a(e.material),e.mode);break;case\"LineLoop\":r=new wi(i(e.geometry),a(e.material));break;case\"LineSegments\":r=new bi(i(e.geometry),a(e.material));break;case\"PointCloud\":case\"Points\":r=new Mi(i(e.geometry),a(e.material));break;case\"Sprite\":r=new pi(a(e.material));break;case\"Group\":r=new ni;break;default:r=new dn}if(r.uuid=e.uuid,void 0!==e.name&&(r.name=e.name),void 0!==e.matrix?(r.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(r.matrixAutoUpdate=e.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(void 0!==e.position&&r.position.fromArray(e.position),void 0!==e.rotation&&r.rotation.fromArray(e.rotation),void 0!==e.quaternion&&r.quaternion.fromArray(e.quaternion),void 0!==e.scale&&r.scale.fromArray(e.scale)),void 0!==e.castShadow&&(r.castShadow=e.castShadow),void 0!==e.receiveShadow&&(r.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(r.shadow.bias=e.shadow.bias),void 0!==e.shadow.radius&&(r.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&r.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(r.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.frustumCulled&&(r.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(r.renderOrder=e.renderOrder),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.layers&&(r.layers.mask=e.layers),void 0!==e.children)for(var c=e.children,u=0;u<c.length;u++)r.add(this.parseObject(c[u],t,n));if(\"LOD\"===e.type)for(var l=e.levels,h=0;h<l.length;h++){var d=l[h],p=r.getObjectByProperty(\"uuid\",d.object);void 0!==p&&r.addLevel(p,d.distance)}return r}});var us,ls={UVMapping:se,CubeReflectionMapping:ce,CubeRefractionMapping:ue,EquirectangularReflectionMapping:le,EquirectangularRefractionMapping:he,SphericalReflectionMapping:de,CubeUVReflectionMapping:pe,CubeUVRefractionMapping:fe},hs={RepeatWrapping:me,ClampToEdgeWrapping:ge,MirroredRepeatWrapping:ve},ds={NearestFilter:ye,NearestMipMapNearestFilter:xe,NearestMipMapLinearFilter:be,LinearFilter:we,LinearMipMapNearestFilter:_e,LinearMipMapLinearFilter:Me};function ps(e){\"undefined\"==typeof createImageBitmap&&console.warn(\"THREE.ImageBitmapLoader: createImageBitmap() not supported.\"),\"undefined\"==typeof fetch&&console.warn(\"THREE.ImageBitmapLoader: fetch() not supported.\"),this.manager=void 0!==e?e:$a,this.options=void 0}function fs(){this.type=\"ShapePath\",this.color=new rn,this.subPaths=[],this.currentPath=null}function ms(e){this.type=\"Font\",this.data=e}function gs(e,t,n,r,i){var a=i.glyphs[e]||i.glyphs[\"?\"];if(a){var o,s,c,u,l,h,d,p,f=new fs;if(a.o)for(var m=a._cachedOutline||(a._cachedOutline=a.o.split(\" \")),g=0,v=m.length;g<v;){switch(m[g++]){case\"m\":o=m[g++]*t+n,s=m[g++]*t+r,f.moveTo(o,s);break;case\"l\":o=m[g++]*t+n,s=m[g++]*t+r,f.lineTo(o,s);break;case\"q\":c=m[g++]*t+n,u=m[g++]*t+r,l=m[g++]*t+n,h=m[g++]*t+r,f.quadraticCurveTo(l,h,c,u);break;case\"b\":c=m[g++]*t+n,u=m[g++]*t+r,l=m[g++]*t+n,h=m[g++]*t+r,d=m[g++]*t+n,p=m[g++]*t+r,f.bezierCurveTo(l,h,d,p,c,u)}}return{offsetX:a.ha*t,path:f}}}function vs(e){this.manager=void 0!==e?e:$a}ps.prototype={constructor:ps,setOptions:function(e){return this.options=e,this},load:function(e,t,n,r){void 0===e&&(e=\"\"),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var i=this,a=Ka.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;fetch(e).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,i.options)}).then(function(n){Ka.add(e,n),t&&t(n),i.manager.itemEnd(e)}).catch(function(t){r&&r(t),i.manager.itemEnd(e),i.manager.itemError(e)})},setCrossOrigin:function(){return this},setPath:function(e){return this.path=e,this}},Object.assign(fs.prototype,{moveTo:function(e,t){this.currentPath=new Ro,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t)},lineTo:function(e,t){this.currentPath.lineTo(e,t)},quadraticCurveTo:function(e,t,n,r){this.currentPath.quadraticCurveTo(e,t,n,r)},bezierCurveTo:function(e,t,n,r,i,a){this.currentPath.bezierCurveTo(e,t,n,r,i,a)},splineThru:function(e){this.currentPath.splineThru(e)},toShapes:function(e,t){function n(e){for(var t=[],n=0,r=e.length;n<r;n++){var i=e[n],a=new Co;a.curves=i.curves,t.push(a)}return t}function r(e,t){for(var n=t.length,r=!1,i=n-1,a=0;a<n;i=a++){var o=t[i],s=t[a],c=s.x-o.x,u=s.y-o.y;if(Math.abs(u)>Number.EPSILON){if(u<0&&(o=t[a],c=-c,s=t[i],u=-u),e.y<o.y||e.y>s.y)continue;if(e.y===o.y){if(e.x===o.x)return!0}else{var l=u*(e.x-o.x)-c*(e.y-o.y);if(0===l)return!0;if(l<0)continue;r=!r}}else{if(e.y!==o.y)continue;if(s.x<=e.x&&e.x<=o.x||o.x<=e.x&&e.x<=s.x)return!0}}return r}var i=ma.isClockWise,a=this.subPaths;if(0===a.length)return[];if(!0===t)return n(a);var o,s,c,u=[];if(1===a.length)return s=a[0],(c=new Co).curves=s.curves,u.push(c),u;var l=!i(a[0].getPoints());l=e?!l:l;var h,d,p=[],f=[],m=[],g=0;f[g]=void 0,m[g]=[];for(var v=0,y=a.length;v<y;v++)o=i(h=(s=a[v]).getPoints()),(o=e?!o:o)?(!l&&f[g]&&g++,f[g]={s:new Co,p:h},f[g].s.curves=s.curves,l&&g++,m[g]=[]):m[g].push({h:s,p:h[0]});if(!f[0])return n(a);if(f.length>1){for(var x=!1,b=[],w=0,_=f.length;w<_;w++)p[w]=[];for(w=0,_=f.length;w<_;w++)for(var M=m[w],E=0;E<M.length;E++){for(var T=M[E],S=!0,A=0;A<f.length;A++)r(T.p,f[A].p)&&(w!==A&&b.push({froms:w,tos:A,hole:E}),S?(S=!1,p[A].push(T)):x=!0);S&&p[w].push(T)}b.length>0&&(x||(m=p))}v=0;for(var L=f.length;v<L;v++){c=f[v].s,u.push(c);for(var R=0,C=(d=m[v]).length;R<C;R++)c.holes.push(d[R].h)}return u}}),Object.assign(ms.prototype,{isFont:!0,generateShapes:function(e,t){void 0===t&&(t=100);for(var n=[],r=function(e,t,n){for(var r=Array.from?Array.from(e):String(e).split(\"\"),i=t/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*i,o=[],s=0,c=0,u=0;u<r.length;u++){var l=r[u];if(\"\\n\"===l)s=0,c-=a;else{var h=gs(l,i,s,c,n);s+=h.offsetX,o.push(h.path)}}return o}(e,t,this.data),i=0,a=r.length;i<a;i++)Array.prototype.push.apply(n,r[i].toShapes());return n}}),Object.assign(vs.prototype,{load:function(e,t,n,r){var i=this,a=new to(this.manager);a.setPath(this.path),a.load(e,function(e){var n;try{n=JSON.parse(e)}catch(t){console.warn(\"THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.\"),n=JSON.parse(e.substring(65,e.length-2))}var r=i.parse(n);t&&t(r)},n,r)},parse:function(e){return new ms(e)},setPath:function(e){return this.path=e,this}});var ys={getContext:function(){return void 0===us&&(us=new(window.AudioContext||window.webkitAudioContext)),us},setContext:function(e){us=e}};function xs(e){this.manager=void 0!==e?e:$a}function bs(){this.type=\"StereoCamera\",this.aspect=1,this.eyeSep=.064,this.cameraL=new ri,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ri,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1}function ws(e,t,n){dn.call(this),this.type=\"CubeCamera\";var r=new ri(90,1,e,t);r.up.set(0,-1,0),r.lookAt(new Ht(1,0,0)),this.add(r);var i=new ri(90,1,e,t);i.up.set(0,-1,0),i.lookAt(new Ht(-1,0,0)),this.add(i);var a=new ri(90,1,e,t);a.up.set(0,0,1),a.lookAt(new Ht(0,1,0)),this.add(a);var o=new ri(90,1,e,t);o.up.set(0,0,-1),o.lookAt(new Ht(0,-1,0)),this.add(o);var s=new ri(90,1,e,t);s.up.set(0,-1,0),s.lookAt(new Ht(0,0,1)),this.add(s);var c=new ri(90,1,e,t);c.up.set(0,-1,0),c.lookAt(new Ht(0,0,-1)),this.add(c);var u={format:Be,magFilter:we,minFilter:we};this.renderTarget=new Yt(n,n,u),this.renderTarget.texture.name=\"CubeCamera\",this.update=function(e,t){null===this.parent&&this.updateMatrixWorld();var n=this.renderTarget,u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,n.activeCubeFace=0,e.render(t,r,n),n.activeCubeFace=1,e.render(t,i,n),n.activeCubeFace=2,e.render(t,a,n),n.activeCubeFace=3,e.render(t,o,n),n.activeCubeFace=4,e.render(t,s,n),n.texture.generateMipmaps=u,n.activeCubeFace=5,e.render(t,c,n),e.setRenderTarget(null)},this.clear=function(e,t,n,r){for(var i=this.renderTarget,a=0;a<6;a++)i.activeCubeFace=a,e.setRenderTarget(i),e.clear(t,n,r);e.setRenderTarget(null)}}function _s(){dn.call(this),this.type=\"AudioListener\",this.context=ys.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null}function Ms(e){dn.call(this),this.type=\"Audio\",this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.loop=!1,this.startTime=0,this.offset=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType=\"empty\",this.filters=[]}function Es(e){Ms.call(this,e),this.panner=this.context.createPanner(),this.panner.connect(this.gain)}function Ts(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=void 0!==t?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}function Ss(e,t,n){this.binding=e,this.valueSize=n;var r,i=Float64Array;switch(t){case\"quaternion\":r=this._slerp;break;case\"string\":case\"bool\":i=Array,r=this._select;break;default:r=this._lerp}this.buffer=new i(4*n),this._mixBufferRegion=r,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}Object.assign(xs.prototype,{load:function(e,t,n,r){var i=new to(this.manager);i.setResponseType(\"arraybuffer\"),i.load(e,function(e){var n=e.slice(0);ys.getContext().decodeAudioData(n,function(e){t(e)})},n,r)}}),Object.assign(bs.prototype,{update:function(){var e,t,n,r,i,a,o,s,c=new Gt,u=new Gt;return function(l){if(e!==this||t!==l.focus||n!==l.fov||r!==l.aspect*this.aspect||i!==l.near||a!==l.far||o!==l.zoom||s!==this.eyeSep){e=this,t=l.focus,n=l.fov,r=l.aspect*this.aspect,i=l.near,a=l.far,o=l.zoom;var h,d,p=l.projectionMatrix.clone(),f=(s=this.eyeSep/2)*i/t,m=i*Math.tan(Bt.DEG2RAD*n*.5)/o;u.elements[12]=-s,c.elements[12]=s,h=-m*r+f,d=m*r+f,p.elements[0]=2*i/(d-h),p.elements[8]=(d+h)/(d-h),this.cameraL.projectionMatrix.copy(p),h=-m*r-f,d=m*r-f,p.elements[0]=2*i/(d-h),p.elements[8]=(d+h)/(d-h),this.cameraR.projectionMatrix.copy(p)}this.cameraL.matrixWorld.copy(l.matrixWorld).multiply(u),this.cameraR.matrixWorld.copy(l.matrixWorld).multiply(c)}}()}),ws.prototype=Object.create(dn.prototype),ws.prototype.constructor=ws,_s.prototype=Object.assign(Object.create(dn.prototype),{constructor:_s,getInput:function(){return this.gain},removeFilter:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this},updateMatrixWorld:function(){var e=new Ht,t=new zt,n=new Ht,r=new Ht;return function(i){dn.prototype.updateMatrixWorld.call(this,i);var a=this.context.listener,o=this.up;this.matrixWorld.decompose(e,t,n),r.set(0,0,-1).applyQuaternion(t),a.positionX?(a.positionX.setValueAtTime(e.x,this.context.currentTime),a.positionY.setValueAtTime(e.y,this.context.currentTime),a.positionZ.setValueAtTime(e.z,this.context.currentTime),a.forwardX.setValueAtTime(r.x,this.context.currentTime),a.forwardY.setValueAtTime(r.y,this.context.currentTime),a.forwardZ.setValueAtTime(r.z,this.context.currentTime),a.upX.setValueAtTime(o.x,this.context.currentTime),a.upY.setValueAtTime(o.y,this.context.currentTime),a.upZ.setValueAtTime(o.z,this.context.currentTime)):(a.setPosition(e.x,e.y,e.z),a.setOrientation(r.x,r.y,r.z,o.x,o.y,o.z))}}()}),Ms.prototype=Object.assign(Object.create(dn.prototype),{constructor:Ms,getOutput:function(){return this.gain},setNodeSource:function(e){return this.hasPlaybackControl=!1,this.sourceType=\"audioNode\",this.source=e,this.connect(),this},setMediaElementSource:function(e){return this.hasPlaybackControl=!1,this.sourceType=\"mediaNode\",this.source=this.context.createMediaElementSource(e),this.connect(),this},setBuffer:function(e){return this.buffer=e,this.sourceType=\"buffer\",this.autoplay&&this.play(),this},play:function(){if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){var e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.onended=this.onEnded.bind(this),e.playbackRate.setValueAtTime(this.playbackRate,this.startTime),this.startTime=this.context.currentTime,e.start(this.startTime,this.offset),this.isPlaying=!0,this.source=e,this.connect()}console.warn(\"THREE.Audio: this Audio has no playback control.\")}else console.warn(\"THREE.Audio: Audio is already playing.\")},pause:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this.source.stop(),this.source.onended=null,this.offset+=(this.context.currentTime-this.startTime)*this.playbackRate,this.isPlaying=!1),this;console.warn(\"THREE.Audio: this Audio has no playback control.\")},stop:function(){if(!1!==this.hasPlaybackControl)return this.source.stop(),this.source.onended=null,this.offset=0,this.isPlaying=!1,this;console.warn(\"THREE.Audio: this Audio has no playback control.\")},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(e){return e||(e=[]),!0===this.isPlaying?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this},getFilter:function(){return this.getFilters()[0]},setFilter:function(e){return this.setFilters(e?[e]:[])},setPlaybackRate:function(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setValueAtTime(this.playbackRate,this.context.currentTime),this;console.warn(\"THREE.Audio: this Audio has no playback control.\")},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn(\"THREE.Audio: this Audio has no playback control.\"),!1):this.loop},setLoop:function(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn(\"THREE.Audio: this Audio has no playback control.\")},getVolume:function(){return this.gain.gain.value},setVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}),Es.prototype=Object.assign(Object.create(Ms.prototype),{constructor:Es,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(e){return this.panner.refDistance=e,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(e){return this.panner.rolloffFactor=e,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(e){return this.panner.distanceModel=e,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(e){return this.panner.maxDistance=e,this},setDirectionalCone:function(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this},updateMatrixWorld:function(){var e=new Ht,t=new zt,n=new Ht,r=new Ht;return function(i){dn.prototype.updateMatrixWorld.call(this,i);var a=this.panner;this.matrixWorld.decompose(e,t,n),r.set(0,0,1).applyQuaternion(t),a.setPosition(e.x,e.y,e.z),a.setOrientation(r.x,r.y,r.z)}}()}),Object.assign(Ts.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var e=0,t=this.getFrequencyData(),n=0;n<t.length;n++)e+=t[n];return e/t.length}}),Object.assign(Ss.prototype,{accumulate:function(e,t){var n=this.buffer,r=this.valueSize,i=e*r+r,a=this.cumulativeWeight;if(0===a){for(var o=0;o!==r;++o)n[i+o]=n[o];a=t}else{var s=t/(a+=t);this._mixBufferRegion(n,i,0,s,r)}this.cumulativeWeight=a},apply:function(e){var t=this.valueSize,n=this.buffer,r=e*t+t,i=this.cumulativeWeight,a=this.binding;if(this.cumulativeWeight=0,i<1){var o=3*t;this._mixBufferRegion(n,r,o,1-i,t)}for(var s=t,c=t+t;s!==c;++s)if(n[s]!==n[s+t]){a.setValue(n,r);break}},saveOriginalState:function(){var e=this.binding,t=this.buffer,n=this.valueSize,r=3*n;e.getValue(t,r);for(var i=n,a=r;i!==a;++i)t[i]=t[r+i%n];this.cumulativeWeight=0},restoreOriginalState:function(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)},_select:function(e,t,n,r,i){if(r>=.5)for(var a=0;a!==i;++a)e[t+a]=e[n+a]},_slerp:function(e,t,n,r){zt.slerpFlat(e,t,e,t,e,n,r)},_lerp:function(e,t,n,r,i){for(var a=1-r,o=0;o!==i;++o){var s=t+o;e[s]=e[s]*a+e[n+o]*r}}});var As,Ls;function Rs(e,t,n){var r=n||Cs.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}function Cs(e,t,n){this.path=t,this.parsedPath=n||Cs.parseTrackName(t),this.node=Cs.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}function Ps(){this.uuid=Bt.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var e={};this._indicesByUUID=e;for(var t=0,n=arguments.length;t!==n;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var r=this;this.stats={objects:{get total(){return r._objects.length},get inUse(){return this.total-r.nCachedObjects_}},get bindingsPerObject(){return r._bindings.length}}}function Os(e,t,n){this._mixer=e,this._clip=t,this._localRoot=n||null;for(var r=t.tracks,i=r.length,a=new Array(i),o={endingStart:xt,endingEnd:xt},s=0;s!==i;++s){var c=r[s].createInterpolant(null);a[s]=c,c.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(i),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=ft,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function Ns(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function Is(e){\"string\"==typeof e&&(console.warn(\"THREE.Uniform: Type parameter is no longer needed.\"),e=arguments[1]),this.value=e}function Ds(){Pn.call(this),this.type=\"InstancedBufferGeometry\",this.maxInstancedCount=void 0}function Us(e,t,n){li.call(this,e,t),this.meshPerAttribute=n||1}function Bs(e,t,n){yn.call(this,e,t),this.meshPerAttribute=n||1}function Fs(e,t,n,r){this.ray=new zn(e,t),this.near=n||0,this.far=r||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn(\"THREE.Raycaster: params.PointCloud has been renamed to params.Points.\"),this.Points}}})}function Gs(e,t){return e.distance-t.distance}function zs(e,t,n,r){if(!1!==e.visible&&(e.raycast(t,n),!0===r))for(var i=e.children,a=0,o=i.length;a<o;a++)zs(i[a],t,n,!0)}function Hs(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}function ks(e,t,n){return this.radius=void 0!==e?e:1,this.phi=void 0!==t?t:0,this.theta=void 0!==n?n:0,this}function js(e,t,n){return this.radius=void 0!==e?e:1,this.theta=void 0!==t?t:0,this.y=void 0!==n?n:0,this}function Vs(e,t){this.min=void 0!==e?e:new Ft(1/0,1/0),this.max=void 0!==t?t:new Ft(-1/0,-1/0)}function Ws(e,t){this.start=void 0!==e?e:new Ht,this.end=void 0!==t?t:new Ht}function Xs(e){dn.call(this),this.material=e,this.render=function(){}}function qs(e,t,n,r){this.object=e,this.size=void 0!==t?t:1;var i=void 0!==n?n:16711680,a=void 0!==r?r:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=3*s.faces.length:s&&s.isBufferGeometry&&(o=s.attributes.normal.count);var c=new Pn,u=new Sn(2*o*3,3);c.addAttribute(\"position\",u),bi.call(this,c,new yi({color:i,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}function Ys(e,t){dn.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;for(var n=new Pn,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],i=0,a=1;i<32;i++,a++){var o=i/32*Math.PI*2,s=a/32*Math.PI*2;r.push(Math.cos(o),Math.sin(o),1,Math.cos(s),Math.sin(s),1)}n.addAttribute(\"position\",new Sn(r,3));var c=new yi({fog:!1});this.cone=new bi(n,c),this.add(this.cone),this.update()}function Zs(e){for(var t=function e(t){var n=[];t&&t.isBone&&n.push(t);for(var r=0;r<t.children.length;r++)n.push.apply(n,e(t.children[r]));return n}(e),n=new Pn,r=[],i=[],a=new rn(0,0,1),o=new rn(0,1,0),s=0;s<t.length;s++){var c=t[s];c.parent&&c.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(a.r,a.g,a.b),i.push(o.r,o.g,o.b))}n.addAttribute(\"position\",new Sn(r,3)),n.addAttribute(\"color\",new Sn(i,3));var u=new yi({vertexColors:_,depthTest:!1,depthWrite:!1,transparent:!0});bi.call(this,n,u),this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}function Js(e,t,n){this.light=e,this.light.updateMatrixWorld(),this.color=n;var r=new Ta(t,4,2),i=new Fn({wireframe:!0,fog:!1});kn.call(this,r,i),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}function Ks(e,t){dn.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;var n=new yi({fog:!1}),r=new Pn;r.addAttribute(\"position\",new yn(new Float32Array(15),3)),this.line=new xi(r,n),this.add(this.line),this.update()}function Qs(e,t,n){dn.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;var r=new Ui(t);r.rotateY(.5*Math.PI),this.material=new Fn({wireframe:!0,fog:!1}),void 0===this.color&&(this.material.vertexColors=_);var i=r.getAttribute(\"position\"),a=new Float32Array(3*i.count);r.addAttribute(\"color\",new yn(a,3)),this.add(new kn(r,this.material)),this.update()}function $s(e,t,n,r){e=e||10,t=t||10,n=new rn(void 0!==n?n:4473924),r=new rn(void 0!==r?r:8947848);for(var i=t/2,a=e/t,o=e/2,s=[],c=[],u=0,l=0,h=-o;u<=t;u++,h+=a){s.push(-o,0,h,o,0,h),s.push(h,0,-o,h,0,o);var d=u===i?n:r;d.toArray(c,l),l+=3,d.toArray(c,l),l+=3,d.toArray(c,l),l+=3,d.toArray(c,l),l+=3}var p=new Pn;p.addAttribute(\"position\",new Sn(s,3)),p.addAttribute(\"color\",new Sn(c,3));var f=new yi({vertexColors:_});bi.call(this,p,f)}function ec(e,t,n,r,i,a){e=e||10,t=t||16,n=n||8,r=r||64,i=new rn(void 0!==i?i:4473924),a=new rn(void 0!==a?a:8947848);var o,s,c,u,l,h,d,p=[],f=[];for(u=0;u<=t;u++)c=u/t*(2*Math.PI),o=Math.sin(c)*e,s=Math.cos(c)*e,p.push(0,0,0),p.push(o,0,s),d=1&u?i:a,f.push(d.r,d.g,d.b),f.push(d.r,d.g,d.b);for(u=0;u<=n;u++)for(d=1&u?i:a,h=e-e/n*u,l=0;l<r;l++)c=l/r*(2*Math.PI),o=Math.sin(c)*h,s=Math.cos(c)*h,p.push(o,0,s),f.push(d.r,d.g,d.b),c=(l+1)/r*(2*Math.PI),o=Math.sin(c)*h,s=Math.cos(c)*h,p.push(o,0,s),f.push(d.r,d.g,d.b);var m=new Pn;m.addAttribute(\"position\",new Sn(p,3)),m.addAttribute(\"color\",new Sn(f,3));var g=new yi({vertexColors:_});bi.call(this,m,g)}function tc(e,t,n,r){this.object=e,this.size=void 0!==t?t:1;var i=void 0!==n?n:16776960,a=void 0!==r?r:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=s.faces.length:console.warn(\"THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.\");var c=new Pn,u=new Sn(2*o*3,3);c.addAttribute(\"position\",u),bi.call(this,c,new yi({color:i,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}function nc(e,t,n){dn.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===t&&(t=1);var r=new Pn;r.addAttribute(\"position\",new Sn([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));var i=new yi({fog:!1});this.lightPlane=new xi(r,i),this.add(this.lightPlane),(r=new Pn).addAttribute(\"position\",new Sn([0,0,0,0,0,1],3)),this.targetLine=new xi(r,i),this.add(this.targetLine),this.update()}function rc(e){var t=new Pn,n=new yi({color:16777215,vertexColors:w}),r=[],i=[],a={},o=new rn(16755200),s=new rn(16711680),c=new rn(43775),u=new rn(16777215),l=new rn(3355443);function h(e,t,n){d(e,n),d(t,n)}function d(e,t){r.push(0,0,0),i.push(t.r,t.g,t.b),void 0===a[e]&&(a[e]=[]),a[e].push(r.length/3-1)}h(\"n1\",\"n2\",o),h(\"n2\",\"n4\",o),h(\"n4\",\"n3\",o),h(\"n3\",\"n1\",o),h(\"f1\",\"f2\",o),h(\"f2\",\"f4\",o),h(\"f4\",\"f3\",o),h(\"f3\",\"f1\",o),h(\"n1\",\"f1\",o),h(\"n2\",\"f2\",o),h(\"n3\",\"f3\",o),h(\"n4\",\"f4\",o),h(\"p\",\"n1\",s),h(\"p\",\"n2\",s),h(\"p\",\"n3\",s),h(\"p\",\"n4\",s),h(\"u1\",\"u2\",c),h(\"u2\",\"u3\",c),h(\"u3\",\"u1\",c),h(\"c\",\"t\",u),h(\"p\",\"c\",l),h(\"cn1\",\"cn2\",l),h(\"cn3\",\"cn4\",l),h(\"cf1\",\"cf2\",l),h(\"cf3\",\"cf4\",l),t.addAttribute(\"position\",new Sn(r,3)),t.addAttribute(\"color\",new Sn(i,3)),bi.call(this,t,n),this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}function ic(e,t){this.object=e,void 0===t&&(t=16776960);var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new Pn;i.setIndex(new yn(n,1)),i.addAttribute(\"position\",new yn(r,3)),bi.call(this,i,new yi({color:t})),this.matrixAutoUpdate=!1,this.update()}function ac(e,t){this.type=\"Box3Helper\",this.box=e;var n=void 0!==t?t:16776960,r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Pn;i.setIndex(new yn(r,1)),i.addAttribute(\"position\",new Sn([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),bi.call(this,i,new yi({color:n})),this.geometry.computeBoundingSphere()}function oc(e,t,n){this.type=\"PlaneHelper\",this.plane=e,this.size=void 0===t?1:t;var r=void 0!==n?n:16776960,i=new Pn;i.addAttribute(\"position\",new Sn([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),i.computeBoundingSphere(),xi.call(this,i,new yi({color:r}));var a=new Pn;a.addAttribute(\"position\",new Sn([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),a.computeBoundingSphere(),this.add(new kn(a,new Fn({color:r,opacity:.2,transparent:!0,depthWrite:!1})))}function sc(e,t,n,r,i,a){dn.call(this),void 0===r&&(r=16776960),void 0===n&&(n=1),void 0===i&&(i=.2*n),void 0===a&&(a=.2*i),void 0===As&&((As=new Pn).addAttribute(\"position\",new Sn([0,0,0,0,1,0],3)),(Ls=new Da(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new xi(As,new yi({color:r})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new kn(Ls,new Fn({color:r})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,i,a)}function cc(e){var t=[0,0,0,e=e||1,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=new Pn;n.addAttribute(\"position\",new Sn(t,3)),n.addAttribute(\"color\",new Sn([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));var r=new yi({vertexColors:_});bi.call(this,n,r)}function uc(e,t,n,r,i,a,o){return console.warn(\"THREE.Face4 has been removed. A THREE.Face3 will be created instead.\"),new mn(e,t,n,i,a,o)}Object.assign(Rs.prototype,{getValue:function(e,t){this.bind();var n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(e,t)},setValue:function(e,t){for(var n=this._bindings,r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(e,t)},bind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()},unbind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}),Object.assign(Cs,{Composite:Rs,create:function(e,t,n){return e&&e.isAnimationObjectGroup?new Cs.Composite(e,t,n):new Cs(e,t,n)},sanitizeNodeName:function(){var e=new RegExp(\"[\\\\[\\\\]\\\\.:\\\\/]\",\"g\");return function(t){return t.replace(/\\s/g,\"_\").replace(e,\"\")}}(),parseTrackName:function(){var e=\"[^\\\\[\\\\]\\\\.:\\\\/]\",t=\"[^\"+\"\\\\[\\\\]\\\\.:\\\\/\".replace(\"\\\\.\",\"\")+\"]\",n=/((?:WC+[\\/:])*)/.source.replace(\"WC\",e),r=/(WCOD+)?/.source.replace(\"WCOD\",t),i=/(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace(\"WC\",e),a=/\\.(WC+)(?:\\[(.+)\\])?/.source.replace(\"WC\",e),o=new RegExp(\"^\"+n+r+i+a+\"$\"),s=[\"material\",\"materials\",\"bones\"];return function(e){var t=o.exec(e);if(!t)throw new Error(\"PropertyBinding: Cannot parse trackName: \"+e);var n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(\".\");if(void 0!==r&&-1!==r){var i=n.nodeName.substring(r+1);-1!==s.indexOf(i)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=i)}if(null===n.propertyName||0===n.propertyName.length)throw new Error(\"PropertyBinding: can not parse propertyName from trackName: \"+e);return n}}(),findNode:function(e,t){if(!t||\"\"===t||\"root\"===t||\".\"===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){var n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){var r=function(e){for(var n=0;n<e.length;n++){var i=e[n];if(i.name===t||i.uuid===t)return i;var a=r(i.children);if(a)return a}return null},i=r(e.children);if(i)return i}return null}}),Object.assign(Cs.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)e[t++]=n[r]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=e[t++]},function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){var e=this.node,t=this.parsedPath,n=t.objectName,r=t.propertyName,i=t.propertyIndex;if(e||(e=Cs.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,e){if(n){var a=t.objectIndex;switch(n){case\"materials\":if(!e.material)return void console.error(\"THREE.PropertyBinding: Can not bind to material as node does not have a material.\",this);if(!e.material.materials)return void console.error(\"THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.\",this);e=e.material.materials;break;case\"bones\":if(!e.skeleton)return void console.error(\"THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.\",this);e=e.skeleton.bones;for(var o=0;o<e.length;o++)if(e[o].name===a){a=o;break}break;default:if(void 0===e[n])return void console.error(\"THREE.PropertyBinding: Can not bind to objectName of node undefined.\",this);e=e[n]}if(void 0!==a){if(void 0===e[a])return void console.error(\"THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.\",this,e);e=e[a]}}var s=e[r];if(void 0!==s){var c=this.Versioning.None;void 0!==e.needsUpdate?(c=this.Versioning.NeedsUpdate,this.targetObject=e):void 0!==e.matrixWorldNeedsUpdate&&(c=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=e);var u=this.BindingType.Direct;if(void 0!==i){if(\"morphTargetInfluences\"===r){if(!e.geometry)return void console.error(\"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.\",this);if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes)return void console.error(\"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.\",this);for(o=0;o<this.node.geometry.morphAttributes.position.length;o++)if(e.geometry.morphAttributes.position[o].name===i){i=o;break}}else{if(!e.geometry.morphTargets)return void console.error(\"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.\",this);for(o=0;o<this.node.geometry.morphTargets.length;o++)if(e.geometry.morphTargets[o].name===i){i=o;break}}}u=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else void 0!==s.fromArray&&void 0!==s.toArray?(u=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(u=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}else{var l=t.nodeName;console.error(\"THREE.PropertyBinding: Trying to update property for track: \"+l+\".\"+r+\" but it wasn't found.\",e)}}else console.error(\"THREE.PropertyBinding: Trying to update node for track: \"+this.path+\" but it wasn't found.\")},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign(Cs.prototype,{_getValue_unbound:Cs.prototype.getValue,_setValue_unbound:Cs.prototype.setValue}),Object.assign(Ps.prototype,{isAnimationObjectGroup:!0,add:function(){for(var e=this._objects,t=e.length,n=this.nCachedObjects_,r=this._indicesByUUID,i=this._paths,a=this._parsedPaths,o=this._bindings,s=o.length,c=void 0,u=0,l=arguments.length;u!==l;++u){var h=arguments[u],d=h.uuid,p=r[d];if(void 0===p){p=t++,r[d]=p,e.push(h);for(var f=0,m=s;f!==m;++f)o[f].push(new Cs(h,i[f],a[f]))}else if(p<n){c=e[p];var g=--n,v=e[g];r[v.uuid]=p,e[p]=v,r[d]=g,e[g]=h;for(f=0,m=s;f!==m;++f){var y=o[f],x=y[g],b=y[p];y[p]=x,void 0===b&&(b=new Cs(h,i[f],a[f])),y[g]=b}}else e[p]!==c&&console.error(\"THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.\")}this.nCachedObjects_=n},remove:function(){for(var e=this._objects,t=this.nCachedObjects_,n=this._indicesByUUID,r=this._bindings,i=r.length,a=0,o=arguments.length;a!==o;++a){var s=arguments[a],c=s.uuid,u=n[c];if(void 0!==u&&u>=t){var l=t++,h=e[l];n[h.uuid]=u,e[u]=h,n[c]=l,e[l]=s;for(var d=0,p=i;d!==p;++d){var f=r[d],m=f[l],g=f[u];f[u]=m,f[l]=g}}}this.nCachedObjects_=t},uncache:function(){for(var e=this._objects,t=e.length,n=this.nCachedObjects_,r=this._indicesByUUID,i=this._bindings,a=i.length,o=0,s=arguments.length;o!==s;++o){var c=arguments[o].uuid,u=r[c];if(void 0!==u)if(delete r[c],u<n){var l=--n,h=e[l],d=e[v=--t];r[h.uuid]=u,e[u]=h,r[d.uuid]=l,e[l]=d,e.pop();for(var p=0,f=a;p!==f;++p){var m=(y=i[p])[l],g=y[v];y[u]=m,y[l]=g,y.pop()}}else{var v;r[(d=e[v=--t]).uuid]=u,e[u]=d,e.pop();for(p=0,f=a;p!==f;++p){var y;(y=i[p])[u]=y[v],y.pop()}}}this.nCachedObjects_=n},subscribe_:function(e,t){var n=this._bindingsIndicesByPath,r=n[e],i=this._bindings;if(void 0!==r)return i[r];var a=this._paths,o=this._parsedPaths,s=this._objects,c=s.length,u=this.nCachedObjects_,l=new Array(c);r=i.length,n[e]=r,a.push(e),o.push(t),i.push(l);for(var h=u,d=s.length;h!==d;++h){var p=s[h];l[h]=new Cs(p,e,t)}return l},unsubscribe_:function(e){var t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){var r=this._paths,i=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o];t[e[o]]=n,a[n]=s,a.pop(),i[n]=i[o],i.pop(),r[n]=r[o],r.pop()}}}),Object.assign(Os.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){return this._startTime=e,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){var r=this._clip.duration,i=e._clip.duration,a=i/r,o=r/i;e.warp(1,a,t),this.warp(o,1,t)}return this},crossFadeTo:function(e,t,n){return e.crossFadeFrom(this,t,n)},stopFading:function(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function(e,t,n){var r=this._mixer,i=r.time,a=this._timeScaleInterpolant,o=this.timeScale;null===a&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);var s=a.parameterPositions,c=a.sampleValues;return s[0]=i,s[1]=i+n,c[0]=e/o,c[1]=t/o,this},stopWarping:function(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(e,t,n,r){if(this.enabled){var i=this._startTime;if(null!==i){var a=(e-i)*n;if(a<0||0===n)return;this._startTime=null,t=n*a}t*=this._updateTimeScale(e);var o=this._updateTime(t),s=this._updateWeight(e);if(s>0)for(var c=this._interpolants,u=this._propertyBindings,l=0,h=c.length;l!==h;++l)c[l].evaluate(o),u[l].accumulate(r,s)}else this._updateWeight(e)},_updateWeight:function(e){var t=0;if(this.enabled){t=this.weight;var n=this._weightInterpolant;if(null!==n){var r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=t,t},_updateTimeScale:function(e){var t=0;if(!this.paused){t=this.timeScale;var n=this._timeScaleInterpolant;if(null!==n)t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}return this._effectiveTimeScale=t,t},_updateTime:function(e){var t=this.time+e,n=this._clip.duration,r=this.loop,i=this._loopCount,a=r===mt;if(0===e)return-1===i?t:a&&1==(1&i)?n-t:t;if(r===pt){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(t>=n)t=n;else{if(!(t<0))break e;t=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this._mixer.dispatchEvent({type:\"finished\",action:this,direction:e<0?-1:1})}}else{if(-1===i&&(e>=0?(i=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),t>=n||t<0){var o=Math.floor(t/n);t-=n*o,i+=Math.abs(o);var s=this.repetitions-i;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=e>0?n:0,this._mixer.dispatchEvent({type:\"finished\",action:this,direction:e>0?1:-1});else{if(1===s){var c=e<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=i,this._mixer.dispatchEvent({type:\"loop\",action:this,loopDelta:o})}}if(a&&1==(1&i))return this.time=t,n-t}return this.time=t,t},_setEndings:function(e,t,n){var r=this._interpolantSettings;n?(r.endingStart=bt,r.endingEnd=bt):(r.endingStart=e?this.zeroSlopeAtStart?bt:xt:wt,r.endingEnd=t?this.zeroSlopeAtEnd?bt:xt:wt)},_scheduleFading:function(e,t,n){var r=this._mixer,i=r.time,a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);var o=a.parameterPositions,s=a.sampleValues;return o[0]=i,s[0]=t,o[1]=i+e,s[1]=n,this}}),Ns.prototype=Object.assign(Object.create(r.prototype),{constructor:Ns,_bindAction:function(e,t){var n=e._localRoot||this._root,r=e._clip.tracks,i=r.length,a=e._propertyBindings,o=e._interpolants,s=n.uuid,c=this._bindingsByRootAndName,u=c[s];void 0===u&&(u={},c[s]=u);for(var l=0;l!==i;++l){var h=r[l],d=h.name,p=u[d];if(void 0!==p)a[l]=p;else{if(void 0!==(p=a[l])){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,s,d));continue}var f=t&&t._propertyBindings[l].binding.parsedPath;++(p=new Ss(Cs.create(n,d,f),h.ValueTypeName,h.getValueSize())).referenceCount,this._addInactiveBinding(p,s,d),a[l]=p}o[l].resultBuffer=p.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){var t=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,t)}for(var i=e._propertyBindings,a=0,o=i.length;a!==o;++a){var s=i[a];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){for(var t=e._propertyBindings,n=0,r=t.length;n!==r;++n){var i=t[n];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){var t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(e,t,n){var r=this._actions,i=this._actionsByClip,a=i[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=a;else{var o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[n]=e},_removeInactiveAction:function(e){var t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;var i=e._clip.uuid,a=this._actionsByClip,o=a[i],s=o.knownActions,c=s[s.length-1],u=e._byClipCacheIndex;c._byClipCacheIndex=u,s[u]=c,s.pop(),e._byClipCacheIndex=null,delete o.actionByRoot[(e._localRoot||this._root).uuid],0===s.length&&delete a[i],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){for(var t=e._propertyBindings,n=0,r=t.length;n!==r;++n){var i=t[n];0==--i.referenceCount&&this._removeInactiveBinding(i)}},_lendAction:function(e){var t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_takeBackAction:function(e){var t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_addInactiveBinding:function(e,t,n){var r=this._bindingsByRootAndName,i=r[t],a=this._bindings;void 0===i&&(i={},r[t]=i),i[n]=e,e._cacheIndex=a.length,a.push(e)},_removeInactiveBinding:function(e){var t=this._bindings,n=e.binding,r=n.rootNode.uuid,i=n.path,a=this._bindingsByRootAndName,o=a[r],s=t[t.length-1],c=e._cacheIndex;s._cacheIndex=c,t[c]=s,t.pop(),delete o[i];e:{for(var u in o)break e;delete a[r]}},_lendBinding:function(e){var t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_takeBackBinding:function(e){var t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_lendControlInterpolant:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,n=e[t];return void 0===n&&((n=new Vo(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t,e[t]=n),n},_takeBackControlInterpolant:function(e){var t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,i=t[r];e.__cacheIndex=r,t[r]=e,i.__cacheIndex=n,t[n]=i},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t){var n=t||this._root,r=n.uuid,i=\"string\"==typeof e?es.findByName(n,e):e,a=null!==i?i.uuid:e,o=this._actionsByClip[a],s=null;if(void 0!==o){var c=o.actionByRoot[r];if(void 0!==c)return c;s=o.knownActions[0],null===i&&(i=s._clip)}if(null===i)return null;var u=new Os(this,i,t);return this._bindAction(u,s),this._addInactiveAction(u,a,r),u},existingAction:function(e,t){var n=t||this._root,r=n.uuid,i=\"string\"==typeof e?es.findByName(n,e):e,a=i?i.uuid:e,o=this._actionsByClip[a];return void 0!==o&&o.actionByRoot[r]||null},stopAllAction:function(){var e=this._actions,t=this._nActiveActions,n=this._bindings,r=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var i=0;i!==t;++i)e[i].reset();for(i=0;i!==r;++i)n[i].useCount=0;return this},update:function(e){e*=this.timeScale;for(var t=this._actions,n=this._nActiveActions,r=this.time+=e,i=Math.sign(e),a=this._accuIndex^=1,o=0;o!==n;++o){t[o]._update(r,e,i,a)}var s=this._bindings,c=this._nActiveBindings;for(o=0;o!==c;++o)s[o].apply(a);return this},getRoot:function(){return this._root},uncacheClip:function(e){var t=this._actions,n=e.uuid,r=this._actionsByClip,i=r[n];if(void 0!==i){for(var a=i.knownActions,o=0,s=a.length;o!==s;++o){var c=a[o];this._deactivateAction(c);var u=c._cacheIndex,l=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,l._cacheIndex=u,t[u]=l,t.pop(),this._removeInactiveBindingsForAction(c)}delete r[n]}},uncacheRoot:function(e){var t=e.uuid,n=this._actionsByClip;for(var r in n){var i=n[r].actionByRoot[t];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}var a=this._bindingsByRootAndName[t];if(void 0!==a)for(var o in a){var s=a[o];s.restoreOriginalState(),this._removeInactiveBinding(s)}},uncacheAction:function(e,t){var n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}),Is.prototype.clone=function(){return new Is(void 0===this.value.clone?this.value:this.value.clone())},Ds.prototype=Object.assign(Object.create(Pn.prototype),{constructor:Ds,isInstancedBufferGeometry:!0,copy:function(e){return Pn.prototype.copy.call(this,e),this.maxInstancedCount=e.maxInstancedCount,this},clone:function(){return(new this.constructor).copy(this)}}),Us.prototype=Object.assign(Object.create(li.prototype),{constructor:Us,isInstancedInterleavedBuffer:!0,copy:function(e){return li.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}}),Bs.prototype=Object.assign(Object.create(yn.prototype),{constructor:Bs,isInstancedBufferAttribute:!0,copy:function(e){return yn.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}}),Object.assign(Fs.prototype,{linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize()):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld)):console.error(\"THREE.Raycaster: Unsupported camera type.\")},intersectObject:function(e,t,n){var r=n||[];return zs(e,this,r,t),r.sort(Gs),r},intersectObjects:function(e,t,n){var r=n||[];if(!1===Array.isArray(e))return console.warn(\"THREE.Raycaster.intersectObjects: objects is not an Array.\"),r;for(var i=0,a=e.length;i<a;i++)zs(e[i],this,r,t);return r.sort(Gs),r}}),Object.assign(Hs.prototype,{start:function(){this.startTime=(\"undefined\"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var t=(\"undefined\"==typeof performance?Date:performance).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}),Object.assign(ks.prototype,{set:function(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(e){return this.radius=e.length(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e.x,e.z),this.phi=Math.acos(Bt.clamp(e.y/this.radius,-1,1))),this}}),Object.assign(js.prototype,{set:function(e,t,n){return this.radius=e,this.theta=t,this.y=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this},setFromVector3:function(e){return this.radius=Math.sqrt(e.x*e.x+e.z*e.z),this.theta=Math.atan2(e.x,e.z),this.y=e.y,this}}),Object.assign(Vs.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new Ft;return function(t,n){var r=e.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(e){return void 0===e&&(console.warn(\"THREE.Box2: .getCenter() target is now required\"),e=new Ft),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn(\"THREE.Box2: .getSize() target is now required\"),e=new Ft),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){return void 0===t&&(console.warn(\"THREE.Box2: .getParameter() target is now required\"),t=new Ft),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return void 0===t&&(console.warn(\"THREE.Box2: .clampPoint() target is now required\"),t=new Ft),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new Ft;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}),Object.assign(Ws.prototype,{set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},getCenter:function(e){return void 0===e&&(console.warn(\"THREE.Line3: .getCenter() target is now required\"),e=new Ht),e.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return void 0===e&&(console.warn(\"THREE.Line3: .delta() target is now required\"),e=new Ht),e.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){return void 0===t&&(console.warn(\"THREE.Line3: .at() target is now required\"),t=new Ht),this.delta(t).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new Ht,t=new Ht;return function(n,r){e.subVectors(n,this.start),t.subVectors(this.end,this.start);var i=t.dot(t),a=t.dot(e)/i;return r&&(a=Bt.clamp(a,0,1)),a}}(),closestPointToPoint:function(e,t,n){var r=this.closestPointToPointParameter(e,t);return void 0===n&&(console.warn(\"THREE.Line3: .closestPointToPoint() target is now required\"),n=new Ht),this.delta(n).multiplyScalar(r).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}),Xs.prototype=Object.create(dn.prototype),Xs.prototype.constructor=Xs,Xs.prototype.isImmediateRenderObject=!0,qs.prototype=Object.create(bi.prototype),qs.prototype.constructor=qs,qs.prototype.update=function(){var e=new Ht,t=new Ht,n=new kt;return function(){var r=[\"a\",\"b\",\"c\"];this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);var i=this.object.matrixWorld,a=this.geometry.attributes.position,o=this.object.geometry;if(o&&o.isGeometry)for(var s=o.vertices,c=o.faces,u=0,l=0,h=c.length;l<h;l++)for(var d=c[l],p=0,f=d.vertexNormals.length;p<f;p++){var m=s[d[r[p]]],g=d.vertexNormals[p];e.copy(m).applyMatrix4(i),t.copy(g).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),a.setXYZ(u,e.x,e.y,e.z),u+=1,a.setXYZ(u,t.x,t.y,t.z),u+=1}else if(o&&o.isBufferGeometry){var v=o.attributes.position,y=o.attributes.normal;for(u=0,p=0,f=v.count;p<f;p++)e.set(v.getX(p),v.getY(p),v.getZ(p)).applyMatrix4(i),t.set(y.getX(p),y.getY(p),y.getZ(p)),t.applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),a.setXYZ(u,e.x,e.y,e.z),u+=1,a.setXYZ(u,t.x,t.y,t.z),u+=1}a.needsUpdate=!0}}(),Ys.prototype=Object.create(dn.prototype),Ys.prototype.constructor=Ys,Ys.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},Ys.prototype.update=function(){var e=new Ht,t=new Ht;return function(){this.light.updateMatrixWorld();var n=this.light.distance?this.light.distance:1e3,r=n*Math.tan(this.light.angle);this.cone.scale.set(r,r,n),e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}(),Zs.prototype=Object.create(bi.prototype),Zs.prototype.constructor=Zs,Zs.prototype.updateMatrixWorld=function(){var e=new Ht,t=new Gt,n=new Gt;return function(r){var i=this.bones,a=this.geometry,o=a.getAttribute(\"position\");n.getInverse(this.root.matrixWorld);for(var s=0,c=0;s<i.length;s++){var u=i[s];u.parent&&u.parent.isBone&&(t.multiplyMatrices(n,u.matrixWorld),e.setFromMatrixPosition(t),o.setXYZ(c,e.x,e.y,e.z),t.multiplyMatrices(n,u.parent.matrixWorld),e.setFromMatrixPosition(t),o.setXYZ(c+1,e.x,e.y,e.z),c+=2)}a.getAttribute(\"position\").needsUpdate=!0,dn.prototype.updateMatrixWorld.call(this,r)}}(),Js.prototype=Object.create(kn.prototype),Js.prototype.constructor=Js,Js.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},Js.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)},Ks.prototype=Object.create(dn.prototype),Ks.prototype.constructor=Ks,Ks.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},Ks.prototype.update=function(){var e=.5*this.light.width,t=.5*this.light.height,n=this.line.geometry.attributes.position,r=n.array;r[0]=e,r[1]=-t,r[2]=0,r[3]=e,r[4]=t,r[5]=0,r[6]=-e,r[7]=t,r[8]=0,r[9]=-e,r[10]=-t,r[11]=0,r[12]=e,r[13]=-t,r[14]=0,n.needsUpdate=!0,void 0!==this.color?this.line.material.color.set(this.color):this.line.material.color.copy(this.light.color)},Qs.prototype=Object.create(dn.prototype),Qs.prototype.constructor=Qs,Qs.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},Qs.prototype.update=function(){var e=new Ht,t=new rn,n=new rn;return function(){var r=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var i=r.geometry.getAttribute(\"color\");t.copy(this.light.color),n.copy(this.light.groundColor);for(var a=0,o=i.count;a<o;a++){var s=a<o/2?t:n;i.setXYZ(a,s.r,s.g,s.b)}i.needsUpdate=!0}r.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate())}}(),$s.prototype=Object.create(bi.prototype),$s.prototype.constructor=$s,ec.prototype=Object.create(bi.prototype),ec.prototype.constructor=ec,tc.prototype=Object.create(bi.prototype),tc.prototype.constructor=tc,tc.prototype.update=function(){var e=new Ht,t=new Ht,n=new kt;return function(){this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);for(var r=this.object.matrixWorld,i=this.geometry.attributes.position,a=this.object.geometry,o=a.vertices,s=a.faces,c=0,u=0,l=s.length;u<l;u++){var h=s[u],d=h.normal;e.copy(o[h.a]).add(o[h.b]).add(o[h.c]).divideScalar(3).applyMatrix4(r),t.copy(d).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),i.setXYZ(c,e.x,e.y,e.z),c+=1,i.setXYZ(c,t.x,t.y,t.z),c+=1}i.needsUpdate=!0}}(),nc.prototype=Object.create(dn.prototype),nc.prototype.constructor=nc,nc.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},nc.prototype.update=function(){var e=new Ht,t=new Ht,n=new Ht;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),n.subVectors(t,e),this.lightPlane.lookAt(n),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(n),this.targetLine.scale.z=n.length()}}(),rc.prototype=Object.create(bi.prototype),rc.prototype.constructor=rc,rc.prototype.update=function(){var e,t,n=new Ht,r=new pn;function i(i,a,o,s){n.set(a,o,s).unproject(r);var c=t[i];if(void 0!==c)for(var u=e.getAttribute(\"position\"),l=0,h=c.length;l<h;l++)u.setXYZ(c[l],n.x,n.y,n.z)}return function(){e=this.geometry,t=this.pointMap;r.projectionMatrix.copy(this.camera.projectionMatrix),i(\"c\",0,0,-1),i(\"t\",0,0,1),i(\"n1\",-1,-1,-1),i(\"n2\",1,-1,-1),i(\"n3\",-1,1,-1),i(\"n4\",1,1,-1),i(\"f1\",-1,-1,1),i(\"f2\",1,-1,1),i(\"f3\",-1,1,1),i(\"f4\",1,1,1),i(\"u1\",.7,1.1,-1),i(\"u2\",-.7,1.1,-1),i(\"u3\",0,2,-1),i(\"cf1\",-1,0,1),i(\"cf2\",1,0,1),i(\"cf3\",0,-1,1),i(\"cf4\",0,1,1),i(\"cn1\",-1,0,-1),i(\"cn2\",1,0,-1),i(\"cn3\",0,-1,-1),i(\"cn4\",0,1,-1),e.getAttribute(\"position\").needsUpdate=!0}}(),ic.prototype=Object.create(bi.prototype),ic.prototype.constructor=ic,ic.prototype.update=function(){var e=new Jt;return function(t){if(void 0!==t&&console.warn(\"THREE.BoxHelper: .update() has no longer arguments.\"),void 0!==this.object&&e.setFromObject(this.object),!e.isEmpty()){var n=e.min,r=e.max,i=this.geometry.attributes.position,a=i.array;a[0]=r.x,a[1]=r.y,a[2]=r.z,a[3]=n.x,a[4]=r.y,a[5]=r.z,a[6]=n.x,a[7]=n.y,a[8]=r.z,a[9]=r.x,a[10]=n.y,a[11]=r.z,a[12]=r.x,a[13]=r.y,a[14]=n.z,a[15]=n.x,a[16]=r.y,a[17]=n.z,a[18]=n.x,a[19]=n.y,a[20]=n.z,a[21]=r.x,a[22]=n.y,a[23]=n.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}(),ic.prototype.setFromObject=function(e){return this.object=e,this.update(),this},ac.prototype=Object.create(bi.prototype),ac.prototype.constructor=ac,ac.prototype.updateMatrixWorld=function(e){var t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),dn.prototype.updateMatrixWorld.call(this,e))},oc.prototype=Object.create(xi.prototype),oc.prototype.constructor=oc,oc.prototype.updateMatrixWorld=function(e){var t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?g:m,this.lookAt(this.plane.normal),dn.prototype.updateMatrixWorld.call(this,e)},sc.prototype=Object.create(dn.prototype),sc.prototype.constructor=sc,sc.prototype.setDirection=function(){var e,t=new Ht;return function(n){n.y>.99999?this.quaternion.set(0,0,0,1):n.y<-.99999?this.quaternion.set(1,0,0,0):(t.set(n.z,0,-n.x).normalize(),e=Math.acos(n.y),this.quaternion.setFromAxisAngle(t,e))}}(),sc.prototype.setLength=function(e,t,n){void 0===t&&(t=.2*e),void 0===n&&(n=.2*t),this.line.scale.set(1,Math.max(0,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()},sc.prototype.setColor=function(e){this.line.material.color.copy(e),this.cone.material.color.copy(e)},cc.prototype=Object.create(bi.prototype),cc.prototype.constructor=cc;var lc=0,hc=1;function dc(e){return console.warn(\"THREE.MeshFaceMaterial has been removed. Use an Array instead.\"),e}function pc(e){return void 0===e&&(e=[]),console.warn(\"THREE.MultiMaterial has been removed. Use an Array instead.\"),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}function fc(e,t){return console.warn(\"THREE.PointCloud has been renamed to THREE.Points.\"),new Mi(e,t)}function mc(e){return console.warn(\"THREE.Particle has been renamed to THREE.Sprite.\"),new pi(e)}function gc(e,t){return console.warn(\"THREE.ParticleSystem has been renamed to THREE.Points.\"),new Mi(e,t)}function vc(e){return console.warn(\"THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.\"),new _i(e)}function yc(e){return console.warn(\"THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.\"),new _i(e)}function xc(e){return console.warn(\"THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.\"),new _i(e)}function bc(e,t,n){return console.warn(\"THREE.Vertex has been removed. Use THREE.Vector3 instead.\"),new Ht(e,t,n)}function wc(e,t){return console.warn(\"THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.\"),new yn(e,t).setDynamic(!0)}function _c(e,t){return console.warn(\"THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.\"),new xn(e,t)}function Mc(e,t){return console.warn(\"THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.\"),new bn(e,t)}function Ec(e,t){return console.warn(\"THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.\"),new wn(e,t)}function Tc(e,t){return console.warn(\"THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.\"),new _n(e,t)}function Sc(e,t){return console.warn(\"THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.\"),new Mn(e,t)}function Ac(e,t){return console.warn(\"THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.\"),new En(e,t)}function Lc(e,t){return console.warn(\"THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.\"),new Tn(e,t)}function Rc(e,t){return console.warn(\"THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.\"),new Sn(e,t)}function Cc(e,t){return console.warn(\"THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.\"),new An(e,t)}function Pc(e){console.warn(\"THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.\"),go.call(this,e),this.type=\"catmullrom\",this.closed=!0}function Oc(e){console.warn(\"THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.\"),go.call(this,e),this.type=\"catmullrom\"}function Nc(e){console.warn(\"THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.\"),go.call(this,e),this.type=\"catmullrom\"}function Ic(e){return console.warn(\"THREE.AxisHelper has been renamed to THREE.AxesHelper.\"),new cc(e)}function Dc(e,t){return console.warn(\"THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.\"),new ic(e,t)}function Uc(e,t){return console.warn(\"THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.\"),new bi(new Na(e.geometry),new yi({color:void 0!==t?t:16777215}))}function Bc(e,t){return console.warn(\"THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.\"),new bi(new Li(e.geometry),new yi({color:void 0!==t?t:16777215}))}function Fc(e){return console.warn(\"THREE.XHRLoader has been renamed to THREE.FileLoader.\"),new to(e)}function Gc(e){return console.warn(\"THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.\"),new ro(e)}so.create=function(e,t){return console.log(\"THREE.Curve.create() has been deprecated\"),e.prototype=Object.create(so.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Object.assign(Lo.prototype,{createPointsGeometry:function(e){console.warn(\"THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.\");var t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn(\"THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.\");var t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn(\"THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.\");for(var t=new vn,n=0,r=e.length;n<r;n++){var i=e[n];t.vertices.push(new Ht(i.x,i.y,i.z||0))}return t}}),Object.assign(Ro.prototype,{fromPoints:function(e){console.warn(\"THREE.Path: .fromPoints() has been renamed to .setFromPoints().\"),this.setFromPoints(e)}}),Pc.prototype=Object.create(go.prototype),Oc.prototype=Object.create(go.prototype),Nc.prototype=Object.create(go.prototype),Object.assign(Nc.prototype,{initFromArray:function(){console.error(\"THREE.Spline: .initFromArray() has been removed.\")},getControlPointsArray:function(){console.error(\"THREE.Spline: .getControlPointsArray() has been removed.\")},reparametrizeByArcLength:function(){console.error(\"THREE.Spline: .reparametrizeByArcLength() has been removed.\")}}),$s.prototype.setColors=function(){console.error(\"THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.\")},Zs.prototype.update=function(){console.error(\"THREE.SkeletonHelper: update() no longer needs to be called.\")},Object.assign(as.prototype,{extractUrlBase:function(e){return console.warn(\"THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.\"),os.extractUrlBase(e)}}),Object.assign(Vs.prototype,{center:function(e){return console.warn(\"THREE.Box2: .center() has been renamed to .getCenter().\"),this.getCenter(e)},empty:function(){return console.warn(\"THREE.Box2: .empty() has been renamed to .isEmpty().\"),this.isEmpty()},isIntersectionBox:function(e){return console.warn(\"THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().\"),this.intersectsBox(e)},size:function(e){return console.warn(\"THREE.Box2: .size() has been renamed to .getSize().\"),this.getSize(e)}}),Object.assign(Jt.prototype,{center:function(e){return console.warn(\"THREE.Box3: .center() has been renamed to .getCenter().\"),this.getCenter(e)},empty:function(){return console.warn(\"THREE.Box3: .empty() has been renamed to .isEmpty().\"),this.isEmpty()},isIntersectionBox:function(e){return console.warn(\"THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().\"),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn(\"THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().\"),this.intersectsSphere(e)},size:function(e){return console.warn(\"THREE.Box3: .size() has been renamed to .getSize().\"),this.getSize(e)}}),Ws.prototype.center=function(e){return console.warn(\"THREE.Line3: .center() has been renamed to .getCenter().\"),this.getCenter(e)},Object.assign(Bt,{random16:function(){return console.warn(\"THREE.Math: .random16() has been deprecated. Use Math.random() instead.\"),Math.random()},nearestPowerOfTwo:function(e){return console.warn(\"THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().\"),Bt.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn(\"THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().\"),Bt.ceilPowerOfTwo(e)}}),Object.assign(kt.prototype,{flattenToArrayOffset:function(e,t){return console.warn(\"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\"),this.toArray(e,t)},multiplyVector3:function(e){return console.warn(\"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\"),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error(\"THREE.Matrix3: .multiplyVector3Array() has been removed.\")},applyToBuffer:function(e){return console.warn(\"THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.\"),this.applyToBufferAttribute(e)},applyToVector3Array:function(){console.error(\"THREE.Matrix3: .applyToVector3Array() has been removed.\")}}),Object.assign(Gt.prototype,{extractPosition:function(e){return console.warn(\"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\"),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn(\"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\"),this.toArray(e,t)},getPosition:function(){var e;return function(){return void 0===e&&(e=new Ht),console.warn(\"THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\"),e.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(e){return console.warn(\"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\"),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn(\"THREE.Matrix4: .multiplyToArray() has been removed.\")},multiplyVector3:function(e){return console.warn(\"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.\"),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn(\"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\"),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error(\"THREE.Matrix4: .multiplyVector3Array() has been removed.\")},rotateAxis:function(e){console.warn(\"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\"),e.transformDirection(this)},crossVector:function(e){return console.warn(\"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\"),e.applyMatrix4(this)},translate:function(){console.error(\"THREE.Matrix4: .translate() has been removed.\")},rotateX:function(){console.error(\"THREE.Matrix4: .rotateX() has been removed.\")},rotateY:function(){console.error(\"THREE.Matrix4: .rotateY() has been removed.\")},rotateZ:function(){console.error(\"THREE.Matrix4: .rotateZ() has been removed.\")},rotateByAxis:function(){console.error(\"THREE.Matrix4: .rotateByAxis() has been removed.\")},applyToBuffer:function(e){return console.warn(\"THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.\"),this.applyToBufferAttribute(e)},applyToVector3Array:function(){console.error(\"THREE.Matrix4: .applyToVector3Array() has been removed.\")},makeFrustum:function(e,t,n,r,i,a){return console.warn(\"THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.\"),this.makePerspective(e,t,r,n,i,a)}}),Qt.prototype.isIntersectionLine=function(e){return console.warn(\"THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().\"),this.intersectsLine(e)},zt.prototype.multiplyVector3=function(e){return console.warn(\"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\"),e.applyQuaternion(this)},Object.assign(zn.prototype,{isIntersectionBox:function(e){return console.warn(\"THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().\"),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn(\"THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().\"),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn(\"THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().\"),this.intersectsSphere(e)}}),Object.assign(Hn.prototype,{area:function(){return console.warn(\"THREE.Triangle: .area() has been renamed to .getArea().\"),this.getArea()},barycoordFromPoint:function(e,t){return console.warn(\"THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().\"),this.getBarycoord(e,t)},midpoint:function(e){return console.warn(\"THREE.Triangle: .midpoint() has been renamed to .getMidpoint().\"),this.getMidpoint(e)},normal:function(e){return console.warn(\"THREE.Triangle: .normal() has been renamed to .getNormal().\"),this.getNormal(e)},plane:function(e){return console.warn(\"THREE.Triangle: .plane() has been renamed to .getPlane().\"),this.getPlane(e)}}),Object.assign(Hn,{barycoordFromPoint:function(e,t,n,r,i){return console.warn(\"THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().\"),Hn.getBarycoord(e,t,n,r,i)},normal:function(e,t,n,r){return console.warn(\"THREE.Triangle: .normal() has been renamed to .getNormal().\"),Hn.getNormal(e,t,n,r)}}),Object.assign(Co.prototype,{extractAllPoints:function(e){return console.warn(\"THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.\"),this.extractPoints(e)},extrude:function(e){return console.warn(\"THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.\"),new ya(this,e)},makeGeometry:function(e){return console.warn(\"THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.\"),new Ca(this,e)}}),Object.assign(Ft.prototype,{fromAttribute:function(e,t,n){return console.warn(\"THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().\"),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn(\"THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().\"),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn(\"THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().\"),this.manhattanLength()}}),Object.assign(Ht.prototype,{setEulerFromRotationMatrix:function(){console.error(\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\")},setEulerFromQuaternion:function(){console.error(\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\")},getPositionFromMatrix:function(e){return console.warn(\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\"),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn(\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\"),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn(\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\"),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn(\"THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.\"),this.applyMatrix4(e)},fromAttribute:function(e,t,n){return console.warn(\"THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().\"),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn(\"THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().\"),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn(\"THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().\"),this.manhattanLength()}}),Object.assign(Xt.prototype,{fromAttribute:function(e,t,n){return console.warn(\"THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().\"),this.fromBufferAttribute(e,t,n)},lengthManhattan:function(){return console.warn(\"THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().\"),this.manhattanLength()}}),Object.assign(vn.prototype,{computeTangents:function(){console.error(\"THREE.Geometry: .computeTangents() has been removed.\")},computeLineDistances:function(){console.error(\"THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.\")}}),Object.assign(dn.prototype,{getChildByName:function(e){return console.warn(\"THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().\"),this.getObjectByName(e)},renderDepth:function(){console.warn(\"THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.\")},translate:function(e,t){return console.warn(\"THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.\"),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error(\"THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.\")}}),Object.defineProperties(dn.prototype,{eulerOrder:{get:function(){return console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\"),this.rotation.order},set:function(e){console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\"),this.rotation.order=e}},useQuaternion:{get:function(){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")},set:function(){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")}}}),Object.defineProperties(fi.prototype,{objects:{get:function(){return console.warn(\"THREE.LOD: .objects has been renamed to .levels.\"),this.levels}}}),Object.defineProperty(mi.prototype,\"useVertexTexture\",{get:function(){console.warn(\"THREE.Skeleton: useVertexTexture has been removed.\")},set:function(){console.warn(\"THREE.Skeleton: useVertexTexture has been removed.\")}}),Object.defineProperty(so.prototype,\"__arcLengthDivisions\",{get:function(){return console.warn(\"THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.\"),this.arcLengthDivisions},set:function(e){console.warn(\"THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.\"),this.arcLengthDivisions=e}}),ri.prototype.setLens=function(e,t){console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.\"),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Po.prototype,{onlyShadow:{set:function(){console.warn(\"THREE.Light: .onlyShadow has been removed.\")}},shadowCameraFov:{set:function(e){console.warn(\"THREE.Light: .shadowCameraFov is now .shadow.camera.fov.\"),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn(\"THREE.Light: .shadowCameraLeft is now .shadow.camera.left.\"),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn(\"THREE.Light: .shadowCameraRight is now .shadow.camera.right.\"),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn(\"THREE.Light: .shadowCameraTop is now .shadow.camera.top.\"),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn(\"THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.\"),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn(\"THREE.Light: .shadowCameraNear is now .shadow.camera.near.\"),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn(\"THREE.Light: .shadowCameraFar is now .shadow.camera.far.\"),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn(\"THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.\")}},shadowBias:{set:function(e){console.warn(\"THREE.Light: .shadowBias is now .shadow.bias.\"),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn(\"THREE.Light: .shadowDarkness has been removed.\")}},shadowMapWidth:{set:function(e){console.warn(\"THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.\"),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn(\"THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.\"),this.shadow.mapSize.height=e}}}),Object.defineProperties(yn.prototype,{length:{get:function(){return console.warn(\"THREE.BufferAttribute: .length has been deprecated. Use .count instead.\"),this.array.length}},copyIndicesArray:function(){console.error(\"THREE.BufferAttribute: .copyIndicesArray() has been removed.\")}}),Object.assign(Pn.prototype,{addIndex:function(e){console.warn(\"THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().\"),this.setIndex(e)},addDrawCall:function(e,t,n){void 0!==n&&console.warn(\"THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.\"),console.warn(\"THREE.BufferGeometry: .addDrawCall() is now .addGroup().\"),this.addGroup(e,t)},clearDrawCalls:function(){console.warn(\"THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().\"),this.clearGroups()},computeTangents:function(){console.warn(\"THREE.BufferGeometry: .computeTangents() has been removed.\")},computeOffsets:function(){console.warn(\"THREE.BufferGeometry: .computeOffsets() has been removed.\")}}),Object.defineProperties(Pn.prototype,{drawcalls:{get:function(){return console.error(\"THREE.BufferGeometry: .drawcalls has been renamed to .groups.\"),this.groups}},offsets:{get:function(){return console.warn(\"THREE.BufferGeometry: .offsets has been renamed to .groups.\"),this.groups}}}),Object.assign(xa.prototype,{getArrays:function(){console.error(\"THREE.ExtrudeBufferGeometry: .getArrays() has been removed.\")},addShapeList:function(){console.error(\"THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.\")},addShape:function(){console.error(\"THREE.ExtrudeBufferGeometry: .addShape() has been removed.\")}}),Object.defineProperties(Is.prototype,{dynamic:{set:function(){console.warn(\"THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.\")}},onUpdate:{value:function(){return console.warn(\"THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.\"),this}}}),Object.defineProperties(Bn.prototype,{wrapAround:{get:function(){console.warn(\"THREE.Material: .wrapAround has been removed.\")},set:function(){console.warn(\"THREE.Material: .wrapAround has been removed.\")}},wrapRGB:{get:function(){return console.warn(\"THREE.Material: .wrapRGB has been removed.\"),new rn}},shading:{get:function(){console.error(\"THREE.\"+this.type+\": .shading has been removed. Use the boolean .flatShading instead.\")},set:function(e){console.warn(\"THREE.\"+this.type+\": .shading has been removed. Use the boolean .flatShading instead.\"),this.flatShading=e===y}}}),Object.defineProperties(Wa.prototype,{metal:{get:function(){return console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.\"),!1},set:function(){console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead\")}}}),Object.defineProperties(Gn.prototype,{derivatives:{get:function(){return console.warn(\"THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\"),this.extensions.derivatives},set:function(e){console.warn(\"THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\"),this.extensions.derivatives=e}}}),Object.assign(oi.prototype,{animate:function(e){console.warn(\"THREE.WebGLRenderer: .animate() is now .setAnimationLoop().\"),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn(\"THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().\"),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn(\"THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().\"),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn(\"THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.\"),this.capabilities.precision},resetGLState:function(){return console.warn(\"THREE.WebGLRenderer: .resetGLState() is now .state.reset().\"),this.state.reset()},supportsFloatTextures:function(){return console.warn(\"THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).\"),this.extensions.get(\"OES_texture_float\")},supportsHalfFloatTextures:function(){return console.warn(\"THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).\"),this.extensions.get(\"OES_texture_half_float\")},supportsStandardDerivatives:function(){return console.warn(\"THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).\"),this.extensions.get(\"OES_standard_derivatives\")},supportsCompressedTextureS3TC:function(){return console.warn(\"THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).\"),this.extensions.get(\"WEBGL_compressed_texture_s3tc\")},supportsCompressedTexturePVRTC:function(){return console.warn(\"THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).\"),this.extensions.get(\"WEBGL_compressed_texture_pvrtc\")},supportsBlendMinMax:function(){return console.warn(\"THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).\"),this.extensions.get(\"EXT_blend_minmax\")},supportsVertexTextures:function(){return console.warn(\"THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.\"),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn(\"THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).\"),this.extensions.get(\"ANGLE_instanced_arrays\")},enableScissorTest:function(e){console.warn(\"THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().\"),this.setScissorTest(e)},initMaterial:function(){console.warn(\"THREE.WebGLRenderer: .initMaterial() has been removed.\")},addPrePlugin:function(){console.warn(\"THREE.WebGLRenderer: .addPrePlugin() has been removed.\")},addPostPlugin:function(){console.warn(\"THREE.WebGLRenderer: .addPostPlugin() has been removed.\")},updateShadowMap:function(){console.warn(\"THREE.WebGLRenderer: .updateShadowMap() has been removed.\")},setFaceCulling:function(){console.warn(\"THREE.WebGLRenderer: .setFaceCulling() has been removed.\")}}),Object.defineProperties(oi.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn(\"THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.\"),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn(\"THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.\"),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.\")},set:function(){console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.\")}}}),Object.defineProperties($r.prototype,{cullFace:{get:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.\")},set:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.\")}},renderReverseSided:{get:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.\")},set:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.\")}},renderSingleSided:{get:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.\")},set:function(){console.warn(\"THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.\")}}}),Object.defineProperties(qt.prototype,{wrapS:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\"),this.texture.wrapS},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\"),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\"),this.texture.wrapT},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\"),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\"),this.texture.magFilter},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\"),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\"),this.texture.minFilter},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\"),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\"),this.texture.anisotropy},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\"),this.texture.anisotropy=e}},offset:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\"),this.texture.offset},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\"),this.texture.offset=e}},repeat:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\"),this.texture.repeat},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\"),this.texture.repeat=e}},format:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\"),this.texture.format},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\"),this.texture.format=e}},type:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\"),this.texture.type},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\"),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\"),this.texture.generateMipmaps},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\"),this.texture.generateMipmaps=e}}}),Object.defineProperties(ai.prototype,{standing:{set:function(){console.warn(\"THREE.WebVRManager: .standing has been removed.\")}}}),Ms.prototype.load=function(e){console.warn(\"THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.\");var t=this;return(new xs).load(e,function(e){t.setBuffer(e)}),this},Ts.prototype.getData=function(){return console.warn(\"THREE.AudioAnalyser: .getData() is now .getFrequencyData().\"),this.getFrequencyData()},ws.prototype.updateCubeMap=function(e,t){return console.warn(\"THREE.CubeCamera: .updateCubeMap() is now .update().\"),this.update(e,t)};var zc={merge:function(e,t,n){var r;console.warn(\"THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.\"),t.isMesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,t=t.geometry),e.merge(t,r,n)},center:function(e){return console.warn(\"THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.\"),e.center()}};function Hc(){console.error(\"THREE.Projector has been moved to /examples/js/renderers/Projector.js.\"),this.projectVector=function(e,t){console.warn(\"THREE.Projector: .projectVector() is now vector.project().\"),e.project(t)},this.unprojectVector=function(e,t){console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\"),e.unproject(t)},this.pickingRay=function(){console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\")}}function kc(){console.error(\"THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js\"),this.domElement=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}}jt.crossOrigin=void 0,jt.loadTexture=function(e,t,n,r){console.warn(\"THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.\");var i=new oo;i.setCrossOrigin(this.crossOrigin);var a=i.load(e,n,void 0,r);return t&&(a.mapping=t),a},jt.loadTextureCube=function(e,t,n,r){console.warn(\"THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.\");var i=new ao;i.setCrossOrigin(this.crossOrigin);var a=i.load(e,n,void 0,r);return t&&(a.mapping=t),a},jt.loadCompressedTexture=function(){console.error(\"THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.\")},jt.loadCompressedTextureCube=function(){console.error(\"THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.\")};var jc={createMultiMaterialObject:function(){console.error(\"THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js\")},detach:function(){console.error(\"THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js\")},attach:function(){console.error(\"THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js\")}};function Vc(){console.error(\"THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js\")}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r,i,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=l(n(5)),s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(0)),c=n(4),u=l(n(3));function l(e){return e&&e.__esModule?e:{default:e}}var h={directionligth:{create:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.color,n=e.position,r=e.castShadow,i=new s.DirectionalLight(new s.Color(t),.95);return i.position.set(n.x,n.y,n.z),i.castShadow=r,i}},ambientlight:{create:function(){var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).color;return new s.AmbientLight(new s.Color(e))}},spotlight:{create:function(){}}},d=function e(t){if(t instanceof s.Mesh){var n=t.geometry;if(n){n.boundingBox||n.computeBoundingBox();var r=n.boundingBox;return t.updateMatrix(),r.applyMatrix4(t.matrix),r}return new s.Box3(new s.Vector3,new s.Vector3)}var i,a=t.children.length,o=new s.Box3(new s.Vector3,new s.Vector3);for(i=0;i<a;i++){var c=e(t.children[i]);c.min.x<o.min.x&&(o.min.x=c.min.x),c.max.x>o.max.x&&(o.max.x=c.max.x),c.min.y<o.min.y&&(o.min.y=c.min.y),c.max.y>o.max.y&&(o.max.y=c.max.y),c.min.z<o.min.z&&(o.min.z=c.min.z),c.max.z>o.max.z&&(o.max.z=c.max.z)}return t.updateMatrix(),o.applyMatrix4(t.matrix),o},p=(i=r=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.obj3d,n.src,n.state={lights:[]},n.lights=[],n.group=new s.Group,n}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),a(t,[{key:\"render\",value:function(){var e=this;this.state.lights;return o.default.createElement(\"div\",{ref:function(t){return e.$container=t},\"data-loader\":this.props.loader,style:this.style()})}},{key:\"componentDidUpdate\",value:function(){var e=this;if(!this.obj3d)return!1;var t=this.props,n=t.src,r=(t.background,t.width),i=t.height;this.camera.aspect=r/i,this.camera.updateProjectionMatrix(),this.renderer.setSize(r,i);var a=this.props,o=a.enableKeys,s=a.enableRotate,u=a.enableZoom,l=a.enabled;Object.assign(this.orbit_controls,{enableKeys:o,enablePan:!0,enableRotate:s,enableZoom:u,enabled:l}),void 0!==this.src&&this.src!=n&&(this.src=n,this.remove3dModel(),this.load3dModel()),this.lights.forEach(function(t){return e.scene.remove(t)}),this.lights=[],this.addLight(\"ambientlight\",c.AmbientLight.defaultProps),this.need_children_lights?this.addChildrenLights():this.addLight(\"directionligth\",c.DirectionLight.defaultProps)}},{key:\"componentWillUnmount\",value:function(){this.tick.animate=!1}},{key:\"componentDidMount\",value:function(){var e=this,t=this.props,n=t.width,r=t.height,i=t.antialias,a=t.background;this.scene=new s.Scene,this.camera=new s.PerspectiveCamera(45,n/r,.1,8888),this.renderer=new s.WebGLRenderer({antialias:i}),this.renderer.setClearColor(new s.Color(a)),this.renderer.setSize(n,r),this.$container.appendChild(this.renderer.domElement),this.scene.add(this.group),this.camera.position.set(0,0,.1),this.createDefaultLight();var o=this.props,c=o.position,l=o.rotation,h=o.scale;this.group.position.copy(new s.Vector3(c.x,c.y,c.z)),this.group.rotation.set(l.x,l.y,l.z),this.group.scale.set(h.x,h.y,h.z),this.load3dModel(),this.tick=(0,u.default)(function(){if(e.renderer.render(e.scene,e.camera),e.obj3d){e.group.children.length||e.group.add(e.obj3d);var t=e.props,n=t.position,r=t.rotation,i=t.scale;e.group.position.copy(new s.Vector3(n.x,n.y,n.z)),e.group.rotation.set(r.x,r.y,r.z),e.group.scale.set(i.x,i.y,i.z)}})}},{key:\"initControl\",value:function(){var e=this.props,t=e.enableKeys,n=e.enableRotate,r=e.enableZoom,i=e.enabled;this.orbit_controls=new s.OrbitControls(this.camera,this.renderer.domElement),Object.assign(this.orbit_controls,{enableKeys:t,enablePan:!0,enableRotate:n,enableZoom:r,enabled:i}),this.orbit_controls.update()}},{key:\"remove3dModel\",value:function(){this.obj3d&&this.scene.remove(this.obj3d)}},{key:\"load3dModel\",value:function(){}},{key:\"style\",value:function(){var e=this.props,t=e.width,n=e.height;return Object.assign({},{width:t+\"px\",height:n+\"px\"})}},{key:\"computeBoundingBox\",value:function(e){if(e instanceof s.Mesh){var t=e.geometry;if(t){t.boundingBox||t.computeBoundingBox();var n=t.boundingBox;return e.updateMatrix(),n.applyMatrix4(e.matrix),n}return new s.Box3(new s.Vector3,new s.Vector3)}var r,i=e.children.length,a=new s.Box3(new s.Vector3,new s.Vector3);for(r=0;r<i;r++){var o=d(e.children[r]);o.min.x<a.min.x&&(a.min.x=o.min.x),o.max.x>a.max.x&&(a.max.x=o.max.x),o.min.y<a.min.y&&(a.min.y=o.min.y),o.max.y>a.max.y&&(a.max.y=o.max.y),o.min.z<a.min.z&&(a.min.z=o.min.z),o.max.z>a.max.z&&(a.max.z=o.max.z)}return e.updateMatrix(),a.applyMatrix4(e.matrix),a}},{key:\"traverseScene\",value:function(){}},{key:\"createEnvironment\",value:function(){}},{key:\"addLight\",value:function(e,t){if(/directionligth|ambientlight|spotlight/.test(e)){var n=h[e].create(t);return this.scene.add(n),this.lights.push(n),n}}},{key:\"addChildrenLights\",value:function(){var e=this;this.lights.forEach(function(t){e.scene.remove(t)}),this.lights=[],this.array_children.map(function(t){var n=t.props,r=n.__constructor;e.addLight(r,n)})}},{key:\"createDefaultLight\",value:function(){this.addLight(\"ambientlight\",c.AmbientLight.defaultProps),this.need_children_lights?this.addChildrenLights():this.addLight(\"directionligth\",c.DirectionLight.defaultProps)}},{key:\"array_children\",get:function(){return this.props.children?this.props.children instanceof Array?this.props.children:[this.props.children]:[]}},{key:\"need_children_lights\",get:function(){return!!this.array_children.filter(function(e){return/directionligth|ambientlight|spotlight/.test(e.props.__constructor)}).length}}]),t}(),r.defaultProps={width:500,height:500,antialias:!0,loader:\"\",baseUrl:\"\",texPath:\"\",position:{x:0,y:0,z:0},scale:{x:1,y:1,z:1},rotation:{x:0,y:0,z:0},background:\"rgb(255,255,255)\",enableKeys:!0,enableRotate:!0,enableZoom:!0,enabled:!0},i);t.default=p},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.GLTFLoader=t.ColladaLoader=t.OBJLoader=t.MTLLoader=t.OrbitControls=void 0;var r=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(0));r.OrbitControls=function(e,t){this.object=e,this.domElement=void 0!==t?t:document,this.enabled=!0,this.target=new r.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={ORBIT:r.MOUSE.LEFT,ZOOM:r.MOUSE.MIDDLE,PAN:r.MOUSE.RIGHT},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return l.phi},this.getAzimuthalAngle=function(){return l.theta},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),c=s.NONE},this.update=function(){var t=new r.Vector3,a=(new r.Quaternion).setFromUnitVectors(e.up,new r.Vector3(0,1,0)),o=a.clone().inverse(),m=new r.Vector3,g=new r.Quaternion;return function(){var e=n.object.position;return t.copy(e).sub(n.target),t.applyQuaternion(a),l.setFromVector3(t),n.autoRotate&&c===s.NONE&&T(2*Math.PI/60/60*n.autoRotateSpeed),l.theta+=h.theta,l.phi+=h.phi,l.theta=Math.max(n.minAzimuthAngle,Math.min(n.maxAzimuthAngle,l.theta)),l.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,l.phi)),l.makeSafe(),l.radius*=d,l.radius=Math.max(n.minDistance,Math.min(n.maxDistance,l.radius)),n.target.add(p),t.setFromSpherical(l),t.applyQuaternion(o),e.copy(n.target).add(t),n.object.lookAt(n.target),!0===n.enableDamping?(h.theta*=1-n.dampingFactor,h.phi*=1-n.dampingFactor):h.set(0,0,0),d=1,p.set(0,0,0),!!(f||m.distanceToSquared(n.object.position)>u||8*(1-g.dot(n.object.quaternion))>u)&&(n.dispatchEvent(i),m.copy(n.object.position),g.copy(n.object.quaternion),f=!1,!0)}}(),this.dispose=function(){n.domElement.removeEventListener(\"contextmenu\",z,!1),n.domElement.removeEventListener(\"mousedown\",O,!1),n.domElement.removeEventListener(\"wheel\",D,!1),n.domElement.removeEventListener(\"touchstart\",B,!1),n.domElement.removeEventListener(\"touchend\",G,!1),n.domElement.removeEventListener(\"touchmove\",F,!1),document.removeEventListener(\"mousemove\",N,!1),document.removeEventListener(\"mouseup\",I,!1),window.removeEventListener(\"keydown\",U,!1)};var n=this,i={type:\"change\"},a={type:\"start\"},o={type:\"end\"},s={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},c=s.NONE,u=1e-6,l=new r.Spherical,h=new r.Spherical,d=1,p=new r.Vector3,f=!1,m=new r.Vector2,g=new r.Vector2,v=new r.Vector2,y=new r.Vector2,x=new r.Vector2,b=new r.Vector2,w=new r.Vector2,_=new r.Vector2,M=new r.Vector2;function E(){return Math.pow(.95,n.zoomSpeed)}function T(e){h.theta-=e}function S(e){h.phi-=e}var A=function(){var e=new r.Vector3;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),p.add(e)}}(),L=function(){var e=new r.Vector3;return function(t,n){e.setFromMatrixColumn(n,1),e.multiplyScalar(t),p.add(e)}}(),R=function(){var e=new r.Vector3;return function(t,i){var a=n.domElement===document?n.domElement.body:n.domElement;if(n.object instanceof r.PerspectiveCamera){var o=n.object.position;e.copy(o).sub(n.target);var s=e.length();s*=Math.tan(n.object.fov/2*Math.PI/180),A(2*t*s/a.clientHeight,n.object.matrix),L(2*i*s/a.clientHeight,n.object.matrix)}else n.object instanceof r.OrthographicCamera?(A(t*(n.object.right-n.object.left)/n.object.zoom/a.clientWidth,n.object.matrix),L(i*(n.object.top-n.object.bottom)/n.object.zoom/a.clientHeight,n.object.matrix)):(console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"),n.enablePan=!1)}}();function C(e){n.object instanceof r.PerspectiveCamera?d/=e:n.object instanceof r.OrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*e)),n.object.updateProjectionMatrix(),f=!0):(console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"),n.enableZoom=!1)}function P(e){n.object instanceof r.PerspectiveCamera?d*=e:n.object instanceof r.OrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/e)),n.object.updateProjectionMatrix(),f=!0):(console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"),n.enableZoom=!1)}function O(e){if(!1!==n.enabled){if(e.preventDefault(),e.button===n.mouseButtons.ORBIT){if(!1===n.enableRotate)return;!function(e){m.set(e.clientX,e.clientY)}(e),c=s.ROTATE}else if(e.button===n.mouseButtons.ZOOM){if(!1===n.enableZoom)return;!function(e){w.set(e.clientX,e.clientY)}(e),c=s.DOLLY}else if(e.button===n.mouseButtons.PAN){if(!1===n.enablePan)return;!function(e){y.set(e.clientX,e.clientY)}(e),c=s.PAN}c!==s.NONE&&(document.addEventListener(\"mousemove\",N,!1),document.addEventListener(\"mouseup\",I,!1),n.dispatchEvent(a))}}function N(e){if(!1!==n.enabled)if(e.preventDefault(),c===s.ROTATE){if(!1===n.enableRotate)return;!function(e){g.set(e.clientX,e.clientY),v.subVectors(g,m);var t=n.domElement===document?n.domElement.body:n.domElement;T(2*Math.PI*v.x/t.clientWidth*n.rotateSpeed),S(2*Math.PI*v.y/t.clientHeight*n.rotateSpeed),m.copy(g),n.update()}(e)}else if(c===s.DOLLY){if(!1===n.enableZoom)return;!function(e){_.set(e.clientX,e.clientY),M.subVectors(_,w),M.y>0?C(E()):M.y<0&&P(E()),w.copy(_),n.update()}(e)}else if(c===s.PAN){if(!1===n.enablePan)return;!function(e){x.set(e.clientX,e.clientY),b.subVectors(x,y),R(b.x,b.y),y.copy(x),n.update()}(e)}}function I(e){!1!==n.enabled&&(document.removeEventListener(\"mousemove\",N,!1),document.removeEventListener(\"mouseup\",I,!1),n.dispatchEvent(o),c=s.NONE)}function D(e){!1===n.enabled||!1===n.enableZoom||c!==s.NONE&&c!==s.ROTATE||(e.preventDefault(),e.stopPropagation(),function(e){e.deltaY<0?P(E()):e.deltaY>0&&C(E()),n.update()}(e),n.dispatchEvent(a),n.dispatchEvent(o))}function U(e){!1!==n.enabled&&!1!==n.enableKeys&&!1!==n.enablePan&&function(e){switch(e.keyCode){case n.keys.UP:R(0,n.keyPanSpeed),n.update();break;case n.keys.BOTTOM:R(0,-n.keyPanSpeed),n.update();break;case n.keys.LEFT:R(n.keyPanSpeed,0),n.update();break;case n.keys.RIGHT:R(-n.keyPanSpeed,0),n.update()}}(e)}function B(e){if(!1!==n.enabled){switch(e.touches.length){case 1:if(!1===n.enableRotate)return;!function(e){m.set(e.touches[0].pageX,e.touches[0].pageY)}(e),c=s.TOUCH_ROTATE;break;case 2:if(!1===n.enableZoom)return;!function(e){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,r=Math.sqrt(t*t+n*n);w.set(0,r)}(e),c=s.TOUCH_DOLLY;break;case 3:if(!1===n.enablePan)return;!function(e){y.set(e.touches[0].pageX,e.touches[0].pageY)}(e),c=s.TOUCH_PAN;break;default:c=s.NONE}c!==s.NONE&&n.dispatchEvent(a)}}function F(e){if(!1!==n.enabled)switch(e.preventDefault(),e.stopPropagation(),e.touches.length){case 1:if(!1===n.enableRotate)return;if(c!==s.TOUCH_ROTATE)return;!function(e){g.set(e.touches[0].pageX,e.touches[0].pageY),v.subVectors(g,m);var t=n.domElement===document?n.domElement.body:n.domElement;T(2*Math.PI*v.x/t.clientWidth*n.rotateSpeed),S(2*Math.PI*v.y/t.clientHeight*n.rotateSpeed),m.copy(g),n.update()}(e);break;case 2:if(!1===n.enableZoom)return;if(c!==s.TOUCH_DOLLY)return;!function(e){var t=e.touches[0].pageX-e.touches[1].pageX,r=e.touches[0].pageY-e.touches[1].pageY,i=Math.sqrt(t*t+r*r);_.set(0,i),M.subVectors(_,w),M.y>0?P(E()):M.y<0&&C(E()),w.copy(_),n.update()}(e);break;case 3:if(!1===n.enablePan)return;if(c!==s.TOUCH_PAN)return;!function(e){x.set(e.touches[0].pageX,e.touches[0].pageY),b.subVectors(x,y),R(b.x,b.y),y.copy(x),n.update()}(e);break;default:c=s.NONE}}function G(e){!1!==n.enabled&&(n.dispatchEvent(o),c=s.NONE)}function z(e){e.preventDefault()}n.domElement.addEventListener(\"contextmenu\",z,!1),n.domElement.addEventListener(\"mousedown\",O,!1),n.domElement.addEventListener(\"wheel\",D,!1),n.domElement.addEventListener(\"touchstart\",B,!1),n.domElement.addEventListener(\"touchend\",G,!1),n.domElement.addEventListener(\"touchmove\",F,!1),window.addEventListener(\"keydown\",U,!1),this.update()},r.OrbitControls.prototype=Object.create(r.EventDispatcher.prototype),r.OrbitControls.prototype.constructor=r.OrbitControls,Object.defineProperties(r.OrbitControls.prototype,{center:{get:function(){return console.warn(\"THREE.OrbitControls: .center has been renamed to .target\"),this.target}},noZoom:{get:function(){return console.warn(\"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"),!this.enableZoom},set:function(e){console.warn(\"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"),this.enableZoom=!e}},noRotate:{get:function(){return console.warn(\"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"),!this.enableRotate},set:function(e){console.warn(\"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"),this.enableRotate=!e}},noPan:{get:function(){return console.warn(\"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"),!this.enablePan},set:function(e){console.warn(\"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"),this.enablePan=!e}},noKeys:{get:function(){return console.warn(\"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"),!this.enableKeys},set:function(e){console.warn(\"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"),this.enableKeys=!e}},staticMoving:{get:function(){return console.warn(\"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"),!this.enableDamping},set:function(e){console.warn(\"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"),this.enableDamping=!e}},dynamicDampingFactor:{get:function(){return console.warn(\"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"),this.dampingFactor},set:function(e){console.warn(\"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"),this.dampingFactor=e}}}),r.MTLLoader=function(e){this.manager=void 0!==e?e:r.DefaultLoadingManager},r.MTLLoader.prototype={constructor:r.MTLLoader,load:function(e,t,n,i){var a=this,o=new r.FileLoader(this.manager);o.setPath(this.path),o.load(e,function(e){t(a.parse(e))},n,i)},setPath:function(e){this.path=e},setTexturePath:function(e){this.texturePath=e},setBaseUrl:function(e){console.warn(\"THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead.\"),this.setTexturePath(e)},setCrossOrigin:function(e){this.crossOrigin=e},setMaterialOptions:function(e){this.materialOptions=e},parse:function(e){for(var t=e.split(\"\\n\"),n={},i=/\\s+/,a={},o=0;o<t.length;o++){var s=t[o];if(0!==(s=s.trim()).length&&\"#\"!==s.charAt(0)){var c=s.indexOf(\" \"),u=c>=0?s.substring(0,c):s;u=u.toLowerCase();var l=c>=0?s.substring(c+1):\"\";if(l=l.trim(),\"newmtl\"===u)n={name:l},a[l]=n;else if(n)if(\"ka\"===u||\"kd\"===u||\"ks\"===u){var h=l.split(i,3);n[u]=[parseFloat(h[0]),parseFloat(h[1]),parseFloat(h[2])]}else n[u]=l}}var d=new r.MTLLoader.MaterialCreator(this.texturePath||this.path,this.materialOptions);return d.setCrossOrigin(this.crossOrigin),d.setManager(this.manager),d.setMaterials(a),d}},r.MTLLoader.MaterialCreator=function(e,t){this.baseUrl=e||\"\",this.options=t,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.side=this.options&&this.options.side?this.options.side:r.FrontSide,this.wrap=this.options&&this.options.wrap?this.options.wrap:r.RepeatWrapping},r.MTLLoader.MaterialCreator.prototype={constructor:r.MTLLoader.MaterialCreator,crossOrigin:\"Anonymous\",setCrossOrigin:function(e){this.crossOrigin=e},setManager:function(e){this.manager=e},setMaterials:function(e){this.materialsInfo=this.convert(e),this.materials={},this.materialsArray=[],this.nameLookup={}},convert:function(e){if(!this.options)return e;var t={};for(var n in e){var r=e[n],i={};for(var a in t[n]=i,r){var o=!0,s=r[a],c=a.toLowerCase();switch(c){case\"kd\":case\"ka\":case\"ks\":this.options&&this.options.normalizeRGB&&(s=[s[0]/255,s[1]/255,s[2]/255]),this.options&&this.options.ignoreZeroRGBs&&0===s[0]&&0===s[1]&&0===s[2]&&(o=!1)}o&&(i[c]=s)}}return t},preload:function(){for(var e in this.materialsInfo)this.create(e)},getIndex:function(e){return this.nameLookup[e]},getAsArray:function(){var e=0;for(var t in this.materialsInfo)this.materialsArray[e]=this.create(t),this.nameLookup[t]=e,e++;return this.materialsArray},create:function(e){return void 0===this.materials[e]&&this.createMaterial_(e),this.materials[e]},createMaterial_:function(e){var t=this,n=this.materialsInfo[e],i={name:e,side:this.side};function a(e,n){if(!i[e]){var r=t.getTextureParams(n,i),a=t.loadTexture(function(e,t){return\"string\"!=typeof t||\"\"===t?\"\":/^https?:\\/\\//i.test(t)?t:e+t}(t.baseUrl,r.url));a.repeat.copy(r.scale),a.offset.copy(r.offset),a.wrapS=t.wrap,a.wrapT=t.wrap,i[e]=a}}for(var o in n){var s,c=n[o];if(\"\"!==c)switch(o.toLowerCase()){case\"kd\":i.color=(new r.Color).fromArray(c);break;case\"ks\":i.specular=(new r.Color).fromArray(c);break;case\"map_kd\":a(\"map\",c);break;case\"map_ks\":a(\"specularMap\",c);break;case\"norm\":a(\"normalMap\",c);break;case\"map_bump\":case\"bump\":a(\"bumpMap\",c);break;case\"ns\":i.shininess=parseFloat(c);break;case\"d\":(s=parseFloat(c))<1&&(i.opacity=s,i.transparent=!0);break;case\"tr\":(s=parseFloat(c))>0&&(i.opacity=1-s,i.transparent=!0)}}return this.materials[e]=new r.MeshPhongMaterial(i),this.materials[e]},getTextureParams:function(e,t){var n,i={scale:new r.Vector2(1,1),offset:new r.Vector2(0,0)},a=e.split(/\\s+/);return(n=a.indexOf(\"-bm\"))>=0&&(t.bumpScale=parseFloat(a[n+1]),a.splice(n,2)),(n=a.indexOf(\"-s\"))>=0&&(i.scale.set(parseFloat(a[n+1]),parseFloat(a[n+2])),a.splice(n,4)),(n=a.indexOf(\"-o\"))>=0&&(i.offset.set(parseFloat(a[n+1]),parseFloat(a[n+2])),a.splice(n,4)),i.url=a.join(\" \").trim(),i},loadTexture:function(e,t,n,i,a){var o,s=r.Loader.Handlers.get(e),c=void 0!==this.manager?this.manager:r.DefaultLoadingManager;return null===s&&(s=new r.TextureLoader(c)),s.setCrossOrigin&&s.setCrossOrigin(this.crossOrigin),o=s.load(e,n,i,a),void 0!==t&&(o.mapping=t),o}},r.OBJLoader=function(){var e=/^[og]\\s*(.+)?/,t=/^mtllib /,n=/^usemtl /;function i(e){this.manager=void 0!==e?e:r.DefaultLoadingManager,this.materials=null}return i.prototype={constructor:i,load:function(e,t,n,i){var a=this,o=new r.FileLoader(a.manager);o.setPath(this.path),o.load(e,function(e){t(a.parse(e))},n,i)},setPath:function(e){this.path=e},setMaterials:function(e){return this.materials=e,this},parse:function(i){console.time(\"OBJLoader\");var a=new function(){var e={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materialLibraries:[],startObject:function(e,t){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=e,void(this.object.fromDeclaration=!1!==t);var n=this.object&&\"function\"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&\"function\"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:e||\"\",fromDeclaration:!1!==t,geometry:{vertices:[],normals:[],colors:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(e,t){var n=this._finalize(!1);n&&(n.inherited||n.groupCount<=0)&&this.materials.splice(n.index,1);var r={index:this.materials.length,name:e||\"\",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:\"\",smooth:void 0!==n?n.smooth:this.smooth,groupStart:void 0!==n?n.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(e){var t={index:\"number\"==typeof e?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return t.clone=this.clone.bind(t),t}};return this.materials.push(r),r},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(e){var t=this.currentMaterial();if(t&&-1===t.groupEnd&&(t.groupEnd=this.geometry.vertices.length/3,t.groupCount=t.groupEnd-t.groupStart,t.inherited=!1),e&&this.materials.length>1)for(var n=this.materials.length-1;n>=0;n--)this.materials[n].groupCount<=0&&this.materials.splice(n,1);return e&&0===this.materials.length&&this.materials.push({name:\"\",smooth:this.smooth}),t}},n&&n.name&&\"function\"==typeof n.clone){var r=n.clone(0);r.inherited=!0,this.object.materials.push(r)}this.objects.push(this.object)},finalize:function(){this.object&&\"function\"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(e,t){var n=parseInt(e,10);return 3*(n>=0?n-1:n+t/3)},parseNormalIndex:function(e,t){var n=parseInt(e,10);return 3*(n>=0?n-1:n+t/3)},parseUVIndex:function(e,t){var n=parseInt(e,10);return 2*(n>=0?n-1:n+t/2)},addVertex:function(e,t,n){var r=this.vertices,i=this.object.geometry.vertices;i.push(r[e+0],r[e+1],r[e+2]),i.push(r[t+0],r[t+1],r[t+2]),i.push(r[n+0],r[n+1],r[n+2])},addVertexLine:function(e){var t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,n){var r=this.normals,i=this.object.geometry.normals;i.push(r[e+0],r[e+1],r[e+2]),i.push(r[t+0],r[t+1],r[t+2]),i.push(r[n+0],r[n+1],r[n+2])},addColor:function(e,t,n){var r=this.colors,i=this.object.geometry.colors;i.push(r[e+0],r[e+1],r[e+2]),i.push(r[t+0],r[t+1],r[t+2]),i.push(r[n+0],r[n+1],r[n+2])},addUV:function(e,t,n){var r=this.uvs,i=this.object.geometry.uvs;i.push(r[e+0],r[e+1]),i.push(r[t+0],r[t+1]),i.push(r[n+0],r[n+1])},addUVLine:function(e){var t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,n,r,i,a,o,s,c){var u=this.vertices.length,l=this.parseVertexIndex(e,u),h=this.parseVertexIndex(t,u),d=this.parseVertexIndex(n,u);if(this.addVertex(l,h,d),void 0!==r){var p=this.uvs.length;l=this.parseUVIndex(r,p),h=this.parseUVIndex(i,p),d=this.parseUVIndex(a,p),this.addUV(l,h,d)}if(void 0!==o){var f=this.normals.length;l=this.parseNormalIndex(o,f),h=o===s?l:this.parseNormalIndex(s,f),d=o===c?l:this.parseNormalIndex(c,f),this.addNormal(l,h,d)}this.colors.length>0&&this.addColor(l,h,d)},addLineGeometry:function(e,t){this.object.geometry.type=\"Line\";for(var n=this.vertices.length,r=this.uvs.length,i=0,a=e.length;i<a;i++)this.addVertexLine(this.parseVertexIndex(e[i],n));var o=0;for(a=t.length;o<a;o++)this.addUVLine(this.parseUVIndex(t[o],r))}};return e.startObject(\"\",!1),e};-1!==i.indexOf(\"\\r\\n\")&&(i=i.replace(/\\r\\n/g,\"\\n\")),-1!==i.indexOf(\"\\\\\\n\")&&(i=i.replace(/\\\\\\n/g,\"\"));for(var o=i.split(\"\\n\"),s=\"\",c=\"\",u=[],l=\"function\"==typeof\"\".trimLeft,h=0,d=o.length;h<d;h++)if(s=o[h],0!==(s=l?s.trimLeft():s.trim()).length&&\"#\"!==(c=s.charAt(0)))if(\"v\"===c){var p=s.split(/\\s+/);switch(p[0]){case\"v\":a.vertices.push(parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[3])),8===p.length&&a.colors.push(parseFloat(p[4]),parseFloat(p[5]),parseFloat(p[6]));break;case\"vn\":a.normals.push(parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[3]));break;case\"vt\":a.uvs.push(parseFloat(p[1]),parseFloat(p[2]))}}else if(\"f\"===c){for(var f=s.substr(1).trim().split(/\\s+/),m=[],g=0,v=f.length;g<v;g++){var y=f[g];if(y.length>0){var x=y.split(\"/\");m.push(x)}}var b=m[0];for(g=1,v=m.length-1;g<v;g++){var w=m[g],_=m[g+1];a.addFace(b[0],w[0],_[0],b[1],w[1],_[1],b[2],w[2],_[2])}}else if(\"l\"===c){var M=s.substring(1).trim().split(\" \"),E=[],T=[];if(-1===s.indexOf(\"/\"))E=M;else for(var S=0,A=M.length;S<A;S++){var L=M[S].split(\"/\");\"\"!==L[0]&&E.push(L[0]),\"\"!==L[1]&&T.push(L[1])}a.addLineGeometry(E,T)}else if(null!==(u=e.exec(s))){var R=(\" \"+u[0].substr(1).trim()).substr(1);a.startObject(R)}else if(n.test(s))a.object.startMaterial(s.substring(7).trim(),a.materialLibraries);else if(t.test(s))a.materialLibraries.push(s.substring(7).trim());else{if(\"s\"!==c){if(\"\\0\"===s)continue;throw new Error('THREE.OBJLoader: Unexpected line: \"'+s+'\"')}if((u=s.split(\" \")).length>1){var C=u[1].trim().toLowerCase();a.object.smooth=\"0\"!==C&&\"off\"!==C}else a.object.smooth=!0;(k=a.object.currentMaterial())&&(k.smooth=a.object.smooth)}a.finalize();var P=new r.Group;P.materialLibraries=[].concat(a.materialLibraries);for(h=0,d=a.objects.length;h<d;h++){var O=a.objects[h],N=O.geometry,I=O.materials,D=\"Line\"===N.type;if(0!==N.vertices.length){var U=new r.BufferGeometry;U.addAttribute(\"position\",new r.Float32BufferAttribute(N.vertices,3)),N.normals.length>0?U.addAttribute(\"normal\",new r.Float32BufferAttribute(N.normals,3)):U.computeVertexNormals(),N.colors.length>0&&U.addAttribute(\"color\",new r.Float32BufferAttribute(N.colors,3)),N.uvs.length>0&&U.addAttribute(\"uv\",new r.Float32BufferAttribute(N.uvs,2));for(var B,F=[],G=0,z=I.length;G<z;G++){var H=I[G],k=void 0;if(null!==this.materials&&(k=this.materials.create(H.name),D&&k&&!(k instanceof r.LineBasicMaterial))){var j=new r.LineBasicMaterial;j.copy(k),k=j}k||((k=D?new r.LineBasicMaterial:new r.MeshPhongMaterial).name=H.name),k.flatShading=!H.smooth,F.push(k)}if(F.length>1){for(G=0,z=I.length;G<z;G++){H=I[G];U.addGroup(H.groupStart,H.groupCount,G)}B=D?new r.LineSegments(U,F):new r.Mesh(U,F)}else B=D?new r.LineSegments(U,F[0]):new r.Mesh(U,F[0]);B.name=O.name,P.add(B)}}return console.timeEnd(\"OBJLoader\"),P}},i}(),r.ColladaLoader=function(e){this.manager=void 0!==e?e:r.DefaultLoadingManager},r.ColladaLoader.prototype={constructor:r.ColladaLoader,crossOrigin:\"anonymous\",load:function(e,t,n,i){var a=this,o=void 0===a.path?r.LoaderUtils.extractUrlBase(e):a.path;new r.FileLoader(a.manager).load(e,function(e){t(a.parse(e,o))},n,i)},setPath:function(e){return this.path=e,this},options:{set convertUpAxis(e){console.warn(\"THREE.ColladaLoader: options.convertUpAxis() has been removed. Up axis is converted automatically.\")}},setCrossOrigin:function(e){return this.crossOrigin=e,this},parse:function(e,t){function n(e,t){for(var n=[],r=e.childNodes,i=0,a=r.length;i<a;i++){var o=r[i];o.nodeName===t&&n.push(o)}return n}function i(e){if(0===e.length)return[];for(var t=e.trim().split(/\\s+/),n=new Array(t.length),r=0,i=t.length;r<i;r++)n[r]=t[r];return n}function a(e){if(0===e.length)return[];for(var t=e.trim().split(/\\s+/),n=new Array(t.length),r=0,i=t.length;r<i;r++)n[r]=parseFloat(t[r]);return n}function o(e){if(0===e.length)return[];for(var t=e.trim().split(/\\s+/),n=new Array(t.length),r=0,i=t.length;r<i;r++)n[r]=parseInt(t[r]);return n}function s(e){return e.substring(1)}function c(e){return 0===Object.keys(e).length}function u(e,t,r,i){var a=n(e,t)[0];if(void 0!==a)for(var o=n(a,r),s=0;s<o.length;s++)i(o[s])}function l(e,t){for(var n in e){e[n].build=t(e[n])}}function h(e,t){return void 0!==e.build?e.build:(e.build=t(e),e.build)}function d(e){for(var t={inputs:{}},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"input\":var a=s(i.getAttribute(\"source\")),o=i.getAttribute(\"semantic\");t.inputs[o]=a}}return t}function p(e){var t={},n=e.getAttribute(\"target\").split(\"/\"),r=n.shift(),i=n.shift(),a=-1!==i.indexOf(\"(\"),o=-1!==i.indexOf(\".\");if(o)i=(n=i.split(\".\")).shift(),t.member=n.shift();else if(a){var c=i.split(\"(\");i=c.shift();for(var u=0;u<c.length;u++)c[u]=parseInt(c[u].replace(/\\)/,\"\"));t.indices=c}return t.id=r,t.sid=i,t.arraySyntax=a,t.memberSyntax=o,t.sampler=s(e.getAttribute(\"source\")),t}function f(e){var t=[],n=e.channels,r=e.samplers,i=e.sources;for(var a in n)if(n.hasOwnProperty(a)){var o=n[a],s=r[o.sampler],c=s.inputs.INPUT,u=s.inputs.OUTPUT;b(g(o,i[c],i[u]),t)}return t}function m(e){return h(Ve.animations[e],f)}function g(e,t,n){var r,i,a,o,s,c,u=Ve.nodes[e.id],l=Ne(u.id),h=u.transforms[e.sid],d=u.matrix.clone().transpose(),p={};switch(h){case\"matrix\":for(a=0,o=t.array.length;a<o;a++)if(r=t.array[a],i=a*n.stride,void 0===p[r]&&(p[r]={}),!0===e.arraySyntax){var f=n.array[i],m=e.indices[0]+4*e.indices[1];p[r][m]=f}else for(s=0,c=n.stride;s<c;s++)p[r][s]=n.array[i+s];break;case\"translate\":case\"rotate\":case\"scale\":console.warn('THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.',h)}var g=function(e,t){var n=[];for(var r in e)n.push({time:parseFloat(r),value:e[r]});n.sort(function(e,t){return e.time-t.time});for(var i=0;i<16;i++)w(n,i,t.elements[i]);return n}(p,d);return{name:l.uuid,keyframes:g}}var v=new r.Vector3,y=new r.Vector3,x=new r.Quaternion;function b(e,t){for(var n=e.keyframes,i=e.name,a=[],o=[],s=[],c=[],u=0,l=n.length;u<l;u++){var h=n[u],d=h.time,p=h.value;Me.fromArray(p).transpose(),Me.decompose(v,x,y),a.push(d),o.push(v.x,v.y,v.z),s.push(x.x,x.y,x.z,x.w),c.push(y.x,y.y,y.z)}return o.length>0&&t.push(new r.VectorKeyframeTrack(i+\".position\",a,o)),s.length>0&&t.push(new r.QuaternionKeyframeTrack(i+\".quaternion\",a,s)),c.length>0&&t.push(new r.VectorKeyframeTrack(i+\".scale\",a,c)),t}function w(e,t,n){var r,i,a,o=!0;for(i=0,a=e.length;i<a;i++)void 0===(r=e[i]).value[t]?r.value[t]=null:o=!1;if(!0===o)for(i=0,a=e.length;i<a;i++)(r=e[i]).value[t]=n;else!function(e,t){for(var n,r,i=0,a=e.length;i<a;i++){var o=e[i];if(null===o.value[t]){if(n=_(e,i,t),r=M(e,i,t),null===n){o.value[t]=r.value[t];continue}if(null===r){o.value[t]=n.value[t];continue}E(o,n,r,t)}}}(e,t)}function _(e,t,n){for(;t>=0;){var r=e[t];if(null!==r.value[n])return r;t--}return null}function M(e,t,n){for(;t<e.length;){var r=e[t];if(null!==r.value[n])return r;t++}return null}function E(e,t,n,r){n.time-t.time!=0?e.value[r]=(e.time-t.time)*(n.value[r]-t.value[r])/(n.time-t.time)+t.value[r]:e.value[r]=t.value[r]}function T(e){for(var t=[],n=e.name,i=e.end-e.start||-1,a=e.animations,o=0,s=a.length;o<s;o++)for(var c=m(a[o]),u=0,l=c.length;u<l;u++)t.push(c[u]);return new r.AnimationClip(n,i,t)}function S(e){return h(Ve.clips[e],T)}function A(e){for(var t={sources:{}},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"bind_shape_matrix\":t.bindShapeMatrix=a(i.textContent);break;case\"source\":var o=i.getAttribute(\"id\");t.sources[o]=ie(i);break;case\"joints\":t.joints=L(i);break;case\"vertex_weights\":t.vertexWeights=R(i)}}return t}function L(e){for(var t={inputs:{}},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"input\":var a=i.getAttribute(\"semantic\"),o=s(i.getAttribute(\"source\"));t.inputs[a]=o}}return t}function R(e){for(var t={inputs:{}},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"input\":var a=i.getAttribute(\"semantic\"),c=s(i.getAttribute(\"source\")),u=parseInt(i.getAttribute(\"offset\"));t.inputs[a]={id:c,offset:u};break;case\"vcount\":t.vcount=o(i.textContent);break;case\"v\":t.v=o(i.textContent)}}return t}function C(e){var t={id:e.id},n=Ve.geometries[t.id];return void 0!==e.skin&&(t.skin=function(e){var t,n,i,a={joints:[],indices:{array:[],stride:4},weights:{array:[],stride:4}},o=e.sources,s=e.vertexWeights,c=s.vcount,u=s.v,l=s.inputs.JOINT.offset,h=s.inputs.WEIGHT.offset,d=e.sources[e.joints.inputs.JOINT],p=e.sources[e.joints.inputs.INV_BIND_MATRIX],f=o[s.inputs.WEIGHT.id].array,m=0;for(t=0,i=c.length;t<i;t++){var g=c[t],v=[];for(n=0;n<g;n++){var y=u[m+l],x=u[m+h],b=f[x];v.push({index:y,weight:b}),m+=2}for(v.sort(E),n=0;n<4;n++){var w=v[n];void 0!==w?(a.indices.array.push(w.index),a.weights.array.push(w.weight)):(a.indices.array.push(0),a.weights.array.push(0))}}e.bindShapeMatrix?a.bindMatrix=(new r.Matrix4).fromArray(e.bindShapeMatrix).transpose():a.bindMatrix=(new r.Matrix4).transpose();for(t=0,i=d.array.length;t<i;t++){var _=d.array[t],M=(new r.Matrix4).fromArray(p.array,t*p.stride).transpose();a.joints.push({name:_,boneInverse:M})}return a;function E(e,t){return t.weight-e.weight}}(e.skin),n.sources.skinIndices=t.skin.indices,n.sources.skinWeights=t.skin.weights),t}function P(e){return h(Ve.controllers[e],C)}function O(e){return void 0!==e.build?e.build:e.init_from}function N(e){var t=Ve.images[e];return void 0!==t?h(t,O):(console.warn(\"THREE.ColladaLoader: Couldn't find image with ID:\",e),null)}function I(e){for(var t={surfaces:{},samplers:{}},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"newparam\":D(i,t);break;case\"technique\":t.technique=F(i);break;case\"extra\":t.extra=V(i)}}return t}function D(e,t){for(var n=e.getAttribute(\"sid\"),r=0,i=e.childNodes.length;r<i;r++){var a=e.childNodes[r];if(1===a.nodeType)switch(a.nodeName){case\"surface\":t.surfaces[n]=U(a);break;case\"sampler2D\":t.samplers[n]=B(a)}}}function U(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"init_from\":t.init_from=i.textContent}}return t}function B(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"source\":t.source=i.textContent}}return t}function F(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"constant\":case\"lambert\":case\"blinn\":case\"phong\":t.type=i.nodeName,t.parameters=G(i)}}return t}function G(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"emission\":case\"diffuse\":case\"specular\":case\"shininess\":case\"transparency\":t[i.nodeName]=z(i);break;case\"transparent\":t[i.nodeName]={opaque:i.getAttribute(\"opaque\"),data:z(i)}}}return t}function z(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"color\":t[i.nodeName]=a(i.textContent);break;case\"float\":t[i.nodeName]=parseFloat(i.textContent);break;case\"texture\":t[i.nodeName]={id:i.getAttribute(\"texture\"),extra:H(i)}}}return t}function H(e){for(var t={technique:{}},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"extra\":k(i,t)}}return t}function k(e,t){for(var n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"technique\":j(i,t)}}}function j(e,t){for(var n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"repeatU\":case\"repeatV\":case\"offsetU\":case\"offsetV\":t.technique[i.nodeName]=parseFloat(i.textContent);break;case\"wrapU\":case\"wrapV\":\"TRUE\"===i.textContent.toUpperCase()?t.technique[i.nodeName]=1:\"FALSE\"===i.textContent.toUpperCase()?t.technique[i.nodeName]=0:t.technique[i.nodeName]=parseInt(i.textContent)}}}function V(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"technique\":t.technique=W(i)}}return t}function W(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"double_sided\":t[i.nodeName]=parseInt(i.textContent)}}return t}function X(e){return e}function q(e){var t,n=function(e){return h(Ve.effects[e],X)}(e.url),i=n.profile.technique,a=n.profile.extra;switch(i.type){case\"phong\":case\"blinn\":t=new r.MeshPhongMaterial;break;case\"lambert\":t=new r.MeshLambertMaterial;break;default:t=new r.MeshBasicMaterial}function o(e){var t=n.profile.samplers[e.id],i=null;void 0!==t?i=N(n.profile.surfaces[t.source].init_from):(console.warn(\"THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530).\"),i=N(e.id));if(null!==i){var a=ze.load(i),o=e.extra;if(void 0!==o&&void 0!==o.technique&&!1===c(o.technique)){var s=o.technique;a.wrapS=s.wrapU?r.RepeatWrapping:r.ClampToEdgeWrapping,a.wrapT=s.wrapV?r.RepeatWrapping:r.ClampToEdgeWrapping,a.offset.set(s.offsetU||0,s.offsetV||0),a.repeat.set(s.repeatU||1,s.repeatV||1)}else a.wrapS=r.RepeatWrapping,a.wrapT=r.RepeatWrapping;return a}return console.warn(\"THREE.ColladaLoader: Couldn't create texture with ID:\",e.id),null}t.name=e.name;var s=i.parameters;for(var u in s){var l=s[u];switch(u){case\"diffuse\":l.color&&t.color.fromArray(l.color),l.texture&&(t.map=o(l.texture));break;case\"specular\":l.color&&t.specular&&t.specular.fromArray(l.color),l.texture&&(t.specularMap=o(l.texture));break;case\"shininess\":l.float&&t.shininess&&(t.shininess=l.float);break;case\"emission\":l.color&&t.emissive&&t.emissive.fromArray(l.color),l.texture&&(t.emissiveMap=o(l.texture))}}var d=s.transparent,p=s.transparency;if(void 0===p&&d&&(p={float:1}),void 0===d&&p&&(d={opaque:\"A_ONE\",data:{color:[1,1,1,1]}}),d&&p)if(d.data.texture)t.transparent=!0;else{var f=d.data.color;switch(d.opaque){case\"A_ONE\":t.opacity=f[3]*p.float;break;case\"RGB_ZERO\":t.opacity=1-f[0]*p.float;break;case\"A_ZERO\":t.opacity=1-f[3]*p.float;break;case\"RGB_ONE\":t.opacity=f[0]*p.float;break;default:console.warn('THREE.ColladaLoader: Invalid opaque type \"%s\" of transparent tag.',d.opaque)}t.opacity<1&&(t.transparent=!0)}return void 0!==a&&void 0!==a.technique&&1===a.technique.double_sided&&(t.side=r.DoubleSide),t}function Y(e){return h(Ve.materials[e],q)}function Z(e){for(var t=0;t<e.childNodes.length;t++){var n=e.childNodes[t];switch(n.nodeName){case\"technique_common\":return J(n)}}return{}}function J(e){for(var t={},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];switch(r.nodeName){case\"perspective\":case\"orthographic\":t.technique=r.nodeName,t.parameters=K(r)}}return t}function K(e){for(var t={},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];switch(r.nodeName){case\"xfov\":case\"yfov\":case\"xmag\":case\"ymag\":case\"znear\":case\"zfar\":case\"aspect_ratio\":t[r.nodeName]=parseFloat(r.textContent)}}return t}function Q(e){var t;switch(e.optics.technique){case\"perspective\":t=new r.PerspectiveCamera(e.optics.parameters.yfov,e.optics.parameters.aspect_ratio,e.optics.parameters.znear,e.optics.parameters.zfar);break;case\"orthographic\":var n=e.optics.parameters.ymag,i=e.optics.parameters.xmag,a=e.optics.parameters.aspect_ratio;i=void 0===i?n*a:i,n=void 0===n?i/a:n,i*=.5,n*=.5,t=new r.OrthographicCamera(-i,i,n,-n,e.optics.parameters.znear,e.optics.parameters.zfar);break;default:t=new r.PerspectiveCamera}return t.name=e.name,t}function $(e){var t=Ve.cameras[e];return void 0!==t?h(t,Q):(console.warn(\"THREE.ColladaLoader: Couldn't find camera with ID:\",e),null)}function ee(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"directional\":case\"point\":case\"spot\":case\"ambient\":t.technique=i.nodeName,t.parameters=te(i)}}return t}function te(e){for(var t={},n=0,i=e.childNodes.length;n<i;n++){var o=e.childNodes[n];if(1===o.nodeType)switch(o.nodeName){case\"color\":var s=a(o.textContent);t.color=(new r.Color).fromArray(s);break;case\"falloff_angle\":t.falloffAngle=parseFloat(o.textContent);break;case\"quadratic_attenuation\":var c=parseFloat(o.textContent);t.distance=c?Math.sqrt(1/c):0}}return t}function ne(e){var t;switch(e.technique){case\"directional\":t=new r.DirectionalLight;break;case\"point\":t=new r.PointLight;break;case\"spot\":t=new r.SpotLight;break;case\"ambient\":t=new r.AmbientLight}return e.parameters.color&&t.color.copy(e.parameters.color),e.parameters.distance&&(t.distance=e.parameters.distance),t}function re(e){var t=Ve.lights[e];return void 0!==t?h(t,ne):(console.warn(\"THREE.ColladaLoader: Couldn't find light with ID:\",e),null)}function ie(e){for(var t={array:[],stride:3},r=0;r<e.childNodes.length;r++){var o=e.childNodes[r];if(1===o.nodeType)switch(o.nodeName){case\"float_array\":t.array=a(o.textContent);break;case\"Name_array\":t.array=i(o.textContent);break;case\"technique_common\":var s=n(o,\"accessor\")[0];void 0!==s&&(t.stride=parseInt(s.getAttribute(\"stride\")))}}return t}function ae(e){for(var t={},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];1===r.nodeType&&(t[r.getAttribute(\"semantic\")]=s(r.getAttribute(\"source\")))}return t}function oe(e){for(var t={type:e.nodeName,material:e.getAttribute(\"material\"),count:parseInt(e.getAttribute(\"count\")),inputs:{},stride:0,hasUV:!1},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"input\":var a=s(i.getAttribute(\"source\")),c=i.getAttribute(\"semantic\"),u=parseInt(i.getAttribute(\"offset\"));t.inputs[c]={id:a,offset:u},t.stride=Math.max(t.stride,u+1),\"TEXCOORD\"===c&&(t.hasUV=!0);break;case\"vcount\":t.vcount=o(i.textContent);break;case\"p\":t.p=o(i.textContent)}}return t}function se(e){for(var t=0,n=0,r=e.length;n<r;n++){!0===e[n].hasUV&&t++}t>0&&t<e.length&&(e.uvsNeedsFix=!0)}function ce(e){var t={},n=e.sources,r=e.vertices,i=e.primitives;if(0===i.length)return{};var a=function(e){for(var t={},n=0;n<e.length;n++){var r=e[n];void 0===t[r.type]&&(t[r.type]=[]),t[r.type].push(r)}return t}(i);for(var o in a){var s=a[o];se(s),t[o]=ue(s,n,r)}return t}function ue(e,t,n){for(var i={},a={array:[],stride:0},o={array:[],stride:0},s={array:[],stride:0},c={array:[],stride:0},u=[],l=4,h=[],d=4,p=new r.BufferGeometry,f=[],m=0,g=0;g<e.length;g++){var v=e[g],y=v.inputs,x=0;switch(v.type){case\"lines\":case\"linestrips\":x=2*v.count;break;case\"triangles\":x=3*v.count;break;case\"polylist\":for(var b=0;b<v.count;b++){var w=v.vcount[b];switch(w){case 3:x+=3;break;case 4:x+=6;break;default:x+=3*(w-2)}}break;default:console.warn(\"THREE.ColladaLoader: Unknow primitive type:\",v.type)}for(var _ in p.addGroup(m,x,g),m+=x,v.material&&f.push(v.material),y){var M=y[_];switch(_){case\"VERTEX\":for(var E in n){var T=n[E];switch(E){case\"POSITION\":var S=a.array.length;if(le(v,t[T],M.offset,a.array),a.stride=t[T].stride,t.skinWeights&&t.skinIndices&&(le(v,t.skinIndices,M.offset,u),le(v,t.skinWeights,M.offset,h)),!1===v.hasUV&&!0===e.uvsNeedsFix){x=(a.array.length-S)/a.stride;for(var A=0;A<x;A++)s.array.push(0,0)}break;case\"NORMAL\":le(v,t[T],M.offset,o.array),o.stride=t[T].stride;break;case\"COLOR\":le(v,t[T],M.offset,c.array),c.stride=t[T].stride;break;case\"TEXCOORD\":le(v,t[T],M.offset,s.array),s.stride=t[T].stride;break;default:console.warn('THREE.ColladaLoader: Semantic \"%s\" not handled in geometry build process.',E)}}break;case\"NORMAL\":le(v,t[M.id],M.offset,o.array),o.stride=t[M.id].stride;break;case\"COLOR\":le(v,t[M.id],M.offset,c.array),c.stride=t[M.id].stride;break;case\"TEXCOORD\":le(v,t[M.id],M.offset,s.array),s.stride=t[M.id].stride}}}return a.array.length>0&&p.addAttribute(\"position\",new r.Float32BufferAttribute(a.array,a.stride)),o.array.length>0&&p.addAttribute(\"normal\",new r.Float32BufferAttribute(o.array,o.stride)),c.array.length>0&&p.addAttribute(\"color\",new r.Float32BufferAttribute(c.array,c.stride)),s.array.length>0&&p.addAttribute(\"uv\",new r.Float32BufferAttribute(s.array,s.stride)),u.length>0&&p.addAttribute(\"skinIndex\",new r.Float32BufferAttribute(u,l)),h.length>0&&p.addAttribute(\"skinWeight\",new r.Float32BufferAttribute(h,d)),i.data=p,i.type=e[0].type,i.materialKeys=f,i}function le(e,t,n,r){var i=e.p,a=e.stride,o=e.vcount;function s(e){for(var t=i[e+n]*u,a=t+u;t<a;t++)r.push(c[t])}var c=t.array,u=t.stride;if(void 0!==e.vcount)for(var l=0,h=0,d=o.length;h<d;h++){var p=o[h];if(4===p){var f=l+1*a,m=l+2*a,g=l+3*a;s(l+0*a),s(f),s(g),s(f),s(m),s(g)}else if(3===p){f=l+1*a,m=l+2*a;s(l+0*a),s(f),s(m)}else if(p>4)for(var v=1,y=p-2;v<=y;v++){f=l+a*v,m=l+a*(v+1);s(l+0*a),s(f),s(m)}l+=a*p}else for(h=0,d=i.length;h<d;h+=a)s(h)}function he(e){return h(Ve.geometries[e],ce)}function de(e){return void 0!==e.build?e.build:e}function pe(e,t){for(var n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case\"joint\":t.joints[r.getAttribute(\"sid\")]=fe(r);break;case\"link\":t.links.push(ge(r))}}}function fe(e){for(var t,n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case\"prismatic\":case\"revolute\":t=me(r)}}return t}function me(e,t){t={sid:e.getAttribute(\"sid\"),name:e.getAttribute(\"name\")||\"\",axis:new r.Vector3,limits:{min:0,max:0},type:e.nodeName,static:!1,zeroPosition:0,middlePosition:0};for(var n=0;n<e.childNodes.length;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"axis\":var o=a(i.textContent);t.axis.fromArray(o);break;case\"limits\":var s=i.getElementsByTagName(\"max\")[0],c=i.getElementsByTagName(\"min\")[0];t.limits.max=parseFloat(s.textContent),t.limits.min=parseFloat(c.textContent)}}return t.limits.min>=t.limits.max&&(t.static=!0),t.middlePosition=(t.limits.min+t.limits.max)/2,t}function ge(e){for(var t={sid:e.getAttribute(\"sid\"),name:e.getAttribute(\"name\")||\"\",attachments:[],transforms:[]},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case\"attachment_full\":t.attachments.push(ve(r));break;case\"matrix\":case\"translate\":case\"rotate\":t.transforms.push(ye(r))}}return t}function ve(e){for(var t={joint:e.getAttribute(\"joint\").split(\"/\").pop(),transforms:[],links:[]},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case\"link\":t.links.push(ge(r));break;case\"matrix\":case\"translate\":case\"rotate\":t.transforms.push(ye(r))}}return t}function ye(e){var t={type:e.nodeName},n=a(e.textContent);switch(t.type){case\"matrix\":t.obj=new r.Matrix4,t.obj.fromArray(n).transpose();break;case\"translate\":t.obj=new r.Vector3,t.obj.fromArray(n);break;case\"rotate\":t.obj=new r.Vector3,t.obj.fromArray(n),t.angle=r.Math.degToRad(n[3])}return t}function xe(e,t){for(var n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case\"technique_common\":be(r,t)}}}function be(e,t){for(var n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case\"inertia\":t.inertia=a(r.textContent);break;case\"mass\":t.mass=a(r.textContent)[0]}}}function we(e){for(var t={target:e.getAttribute(\"target\").split(\"/\").pop()},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case\"axis\":var i=r.getElementsByTagName(\"param\")[0];t.axis=i.textContent;var a=t.axis.split(\"inst_\").pop().split(\"axis\")[0];t.jointIndex=a.substr(0,a.length-1)}}return t}function _e(e){return void 0!==e.build?e.build:e}var Me=new r.Matrix4,Ee=new r.Vector3;function Te(e){for(var t={name:e.getAttribute(\"name\")||\"\",type:e.getAttribute(\"type\"),id:e.getAttribute(\"id\"),sid:e.getAttribute(\"sid\"),matrix:new r.Matrix4,nodes:[],instanceCameras:[],instanceControllers:[],instanceLights:[],instanceGeometries:[],instanceNodes:[],transforms:{}},n=0;n<e.childNodes.length;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"node\":t.nodes.push(i.getAttribute(\"id\")),Te(i);break;case\"instance_camera\":t.instanceCameras.push(s(i.getAttribute(\"url\")));break;case\"instance_controller\":t.instanceControllers.push(Se(i));break;case\"instance_light\":t.instanceLights.push(s(i.getAttribute(\"url\")));break;case\"instance_geometry\":t.instanceGeometries.push(Se(i));break;case\"instance_node\":t.instanceNodes.push(s(i.getAttribute(\"url\")));break;case\"matrix\":var o=a(i.textContent);t.matrix.multiply(Me.fromArray(o).transpose()),t.transforms[i.getAttribute(\"sid\")]=i.nodeName;break;case\"translate\":o=a(i.textContent);Ee.fromArray(o),t.matrix.multiply(Me.makeTranslation(Ee.x,Ee.y,Ee.z)),t.transforms[i.getAttribute(\"sid\")]=i.nodeName;break;case\"rotate\":o=a(i.textContent);var c=r.Math.degToRad(o[3]);t.matrix.multiply(Me.makeRotationAxis(Ee.fromArray(o),c)),t.transforms[i.getAttribute(\"sid\")]=i.nodeName;break;case\"scale\":o=a(i.textContent);t.matrix.scale(Ee.fromArray(o)),t.transforms[i.getAttribute(\"sid\")]=i.nodeName;break;case\"extra\":break;default:console.log(i)}}return Ve.nodes[t.id]=t,t}function Se(e){for(var t={id:s(e.getAttribute(\"url\")),materials:{},skeletons:[]},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];switch(r.nodeName){case\"bind_material\":for(var i=r.getElementsByTagName(\"instance_material\"),a=0;a<i.length;a++){var o=i[a],c=o.getAttribute(\"symbol\"),u=o.getAttribute(\"target\");t.materials[c]=s(u)}break;case\"skeleton\":t.skeletons.push(s(r.textContent))}}return t}function Ae(e,t){var n,i,a=[],o=[];for(n=0;n<e.length;n++){var s=e[n];if(Oe(s))Le(Ne(s),t,a);else if(De(s))for(var c=Ve.visualScenes[s].children,u=0;u<c.length;u++){var l=c[u];if(\"JOINT\"===l.type)Le(Ne(l.id),t,a)}else console.error(\"THREE.ColladaLoader: Unable to find root bone of skeleton with ID:\",s)}for(n=0;n<t.length;n++)for(u=0;u<a.length;u++)if((i=a[u]).bone.name===t[n].name){o[n]=i,i.processed=!0;break}for(n=0;n<a.length;n++)!1===(i=a[n]).processed&&(o.push(i),i.processed=!0);var h=[],d=[];for(n=0;n<o.length;n++)i=o[n],h.push(i.bone),d.push(i.boneInverse);return new r.Skeleton(h,d)}function Le(e,t,n){e.traverse(function(e){if(!0===e.isBone){for(var i,a=0;a<t.length;a++){var o=t[a];if(o.name===e.name){i=o.boneInverse;break}}void 0===i&&(i=new r.Matrix4),n.push({bone:e,boneInverse:i,processed:!1})}})}function Re(e){for(var t=[],n=e.matrix,i=e.nodes,a=e.type,o=e.instanceCameras,s=e.instanceControllers,c=e.instanceLights,u=e.instanceGeometries,l=e.instanceNodes,h=0,d=i.length;h<d;h++)t.push(Ne(i[h]));for(h=0,d=o.length;h<d;h++){var p=$(o[h]);null!==p&&t.push(p.clone())}for(h=0,d=s.length;h<d;h++)for(var f=P((w=s[h]).id),m=Pe(he(f.id),w.materials),g=Ae(w.skeletons,f.skin.joints),v=0,y=m.length;v<y;v++){var x;(x=m[v]).isSkinnedMesh&&(x.bind(g,f.skin.bindMatrix),x.normalizeSkinWeights()),t.push(x)}for(h=0,d=c.length;h<d;h++){var b=re(c[h]);null!==b&&t.push(b.clone())}for(h=0,d=u.length;h<d;h++){var w;for(v=0,y=(m=Pe(he((w=u[h]).id),w.materials)).length;v<y;v++)t.push(m[v])}for(h=0,d=l.length;h<d;h++)t.push(Ne(l[h]).clone());if(0===i.length&&1===t.length)x=t[0];else{x=\"JOINT\"===a?new r.Bone:new r.Group;for(h=0;h<t.length;h++)x.add(t[h])}return\"\"===x.name&&(x.name=\"JOINT\"===a?e.sid:e.name),x.matrix.copy(n),x.matrix.decompose(x.position,x.quaternion,x.scale),x}function Ce(e,t){for(var n=[],r=0,i=e.length;r<i;r++){var a=t[e[r]];n.push(Y(a))}return n}function Pe(e,t){var n=[];for(var i in e){var a=e[i],o=Ce(a.materialKeys,t);0===o.length&&(\"lines\"===i||\"linestrips\"===i?o.push(new r.LineBasicMaterial):o.push(new r.MeshPhongMaterial));var s=void 0!==a.data.attributes.skinIndex;if(s)for(var c=0,u=o.length;c<u;c++)o[c].skinning=!0;var l,h=1===o.length?o[0]:o;switch(i){case\"lines\":l=new r.LineSegments(a.data,h);break;case\"linestrips\":l=new r.Line(a.data,h);break;case\"triangles\":case\"polylist\":l=s?new r.SkinnedMesh(a.data,h):new r.Mesh(a.data,h)}n.push(l)}return n}function Oe(e){return void 0!==Ve.nodes[e]}function Ne(e){return h(Ve.nodes[e],Re)}function Ie(e){var t=new r.Group;t.name=e.name;for(var n=e.children,i=0;i<n.length;i++){var a=n[i];t.add(Ne(a.id))}return t}function De(e){return void 0!==Ve.visualScenes[e]}function Ue(e){return h(Ve.visualScenes[e],Ie)}if(0===e.length)return{scene:new r.Scene};var Be=n((new DOMParser).parseFromString(e,\"application/xml\"),\"COLLADA\")[0],Fe=Be.getAttribute(\"version\");console.log(\"THREE.ColladaLoader: File version\",Fe);var Ge=function(e){return{unit:function(e){return void 0!==e&&!0===e.hasAttribute(\"meter\")?parseFloat(e.getAttribute(\"meter\")):1}(n(e,\"unit\")[0]),upAxis:function(e){return void 0!==e?e.textContent:\"Y_UP\"}(n(e,\"up_axis\")[0])}}(n(Be,\"asset\")[0]),ze=new r.TextureLoader(this.manager);ze.setPath(t).setCrossOrigin(this.crossOrigin);var He=[],ke={},je=0,Ve={animations:{},clips:{},controllers:{},images:{},effects:{},materials:{},cameras:{},lights:{},geometries:{},nodes:{},visualScenes:{},kinematicsModels:{},physicsModels:{},kinematicsScenes:{}};u(Be,\"library_animations\",\"animation\",function(e){for(var t={sources:{},samplers:{},channels:{}},n=0,r=e.childNodes.length;n<r;n++){var i,a=e.childNodes[n];if(1===a.nodeType)switch(a.nodeName){case\"source\":i=a.getAttribute(\"id\"),t.sources[i]=ie(a);break;case\"sampler\":i=a.getAttribute(\"id\"),t.samplers[i]=d(a);break;case\"channel\":i=a.getAttribute(\"target\"),t.channels[i]=p(a);break;default:console.log(a)}}Ve.animations[e.getAttribute(\"id\")]=t}),u(Be,\"library_animation_clips\",\"animation_clip\",function(e){for(var t={name:e.getAttribute(\"id\")||\"default\",start:parseFloat(e.getAttribute(\"start\")||0),end:parseFloat(e.getAttribute(\"end\")||0),animations:[]},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"instance_animation\":t.animations.push(s(i.getAttribute(\"url\")))}}Ve.clips[e.getAttribute(\"id\")]=t}),u(Be,\"library_controllers\",\"controller\",function(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"skin\":t.id=s(i.getAttribute(\"source\")),t.skin=A(i);break;case\"morph\":t.id=s(i.getAttribute(\"source\")),console.warn(\"THREE.ColladaLoader: Morph target animation not supported yet.\")}}Ve.controllers[e.getAttribute(\"id\")]=t}),u(Be,\"library_images\",\"image\",function(e){var t={init_from:n(e,\"init_from\")[0].textContent};Ve.images[e.getAttribute(\"id\")]=t}),u(Be,\"library_effects\",\"effect\",function(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"profile_COMMON\":t.profile=I(i)}}Ve.effects[e.getAttribute(\"id\")]=t}),u(Be,\"library_materials\",\"material\",function(e){for(var t={name:e.getAttribute(\"name\")},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"instance_effect\":t.url=s(i.getAttribute(\"url\"))}}Ve.materials[e.getAttribute(\"id\")]=t}),u(Be,\"library_cameras\",\"camera\",function(e){for(var t={name:e.getAttribute(\"name\")},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"optics\":t.optics=Z(i)}}Ve.cameras[e.getAttribute(\"id\")]=t}),u(Be,\"library_lights\",\"light\",function(e){for(var t={},n=0,r=e.childNodes.length;n<r;n++){var i=e.childNodes[n];if(1===i.nodeType)switch(i.nodeName){case\"technique_common\":t=ee(i)}}Ve.lights[e.getAttribute(\"id\")]=t}),u(Be,\"library_geometries\",\"geometry\",function(e){var t={name:e.getAttribute(\"name\"),sources:{},vertices:{},primitives:[]},r=n(e,\"mesh\")[0];if(void 0!==r){for(var i=0;i<r.childNodes.length;i++){var a=r.childNodes[i];if(1===a.nodeType){var o=a.getAttribute(\"id\");switch(a.nodeName){case\"source\":t.sources[o]=ie(a);break;case\"vertices\":t.vertices=ae(a);break;case\"polygons\":console.warn(\"THREE.ColladaLoader: Unsupported primitive type: \",a.nodeName);break;case\"lines\":case\"linestrips\":case\"polylist\":case\"triangles\":t.primitives.push(oe(a));break;default:console.log(a)}}}Ve.geometries[e.getAttribute(\"id\")]=t}}),u(Be,\"library_nodes\",\"node\",Te),u(Be,\"library_visual_scenes\",\"visual_scene\",function(e){var t={name:e.getAttribute(\"name\"),children:[]};!function(e){for(var t=e.getElementsByTagName(\"node\"),n=0;n<t.length;n++){var r=t[n];!1===r.hasAttribute(\"id\")&&r.setAttribute(\"id\",\"three_default_\"+je++)}}(e);for(var r=n(e,\"node\"),i=0;i<r.length;i++)t.children.push(Te(r[i]));Ve.visualScenes[e.getAttribute(\"id\")]=t}),u(Be,\"library_kinematics_models\",\"kinematics_model\",function(e){for(var t={name:e.getAttribute(\"name\")||\"\",joints:{},links:[]},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case\"technique_common\":pe(r,t)}}Ve.kinematicsModels[e.getAttribute(\"id\")]=t}),u(Be,\"library_physics_models\",\"physics_model\",function(e){for(var t={name:e.getAttribute(\"name\")||\"\",rigidBodies:{}},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case\"rigid_body\":t.rigidBodies[r.getAttribute(\"name\")]={},xe(r,t.rigidBodies[r.getAttribute(\"name\")])}}Ve.physicsModels[e.getAttribute(\"id\")]=t}),u(Be,\"scene\",\"instance_kinematics_scene\",function(e){for(var t={bindJointAxis:[]},n=0;n<e.childNodes.length;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case\"bind_joint_axis\":t.bindJointAxis.push(we(r))}}Ve.kinematicsScenes[s(e.getAttribute(\"url\"))]=t}),l(Ve.animations,f),l(Ve.clips,T),l(Ve.controllers,C),l(Ve.images,O),l(Ve.effects,X),l(Ve.materials,q),l(Ve.cameras,Q),l(Ve.lights,ne),l(Ve.geometries,ce),l(Ve.visualScenes,Ie),function(){var e=Ve.clips;if(!0===c(e)){if(!1===c(Ve.animations)){var t=[];for(var n in Ve.animations)for(var i=m(n),a=0,o=i.length;a<o;a++)t.push(i[a]);He.push(new r.AnimationClip(\"default\",-1,t))}}else for(var n in e)He.push(S(n))}(),function(){var e=Object.keys(Ve.kinematicsModels)[0],t=Object.keys(Ve.kinematicsScenes)[0],n=Object.keys(Ve.visualScenes)[0];if(void 0!==e&&void 0!==t){for(var i=function(e){return h(Ve.kinematicsModels[e],de)}(e),o=function(e){return h(Ve.kinematicsScenes[e],_e)}(t),s=Ue(n),c=o.bindJointAxis,u={},l=0,d=c.length;l<d;l++){var p=c[l],f=Be.querySelector('[sid=\"'+p.target+'\"]');if(f){var m=f.parentElement;v(p.jointIndex,m)}}var g=new r.Matrix4;ke={joints:i&&i.joints,getJointValue:function(e){var t=u[e];if(t)return t.position;console.warn(\"THREE.ColladaLoader: Joint \"+e+\" doesn't exist.\")},setJointValue:function(e,t){var n=u[e];if(n){var i=n.joint;if(t>i.limits.max||t<i.limits.min)console.warn(\"THREE.ColladaLoader: Joint \"+e+\" value \"+t+\" outside of limits (min: \"+i.limits.min+\", max: \"+i.limits.max+\").\");else if(i.static)console.warn(\"THREE.ColladaLoader: Joint \"+e+\" is static.\");else{var a=n.object,o=i.axis,s=n.transforms;Me.identity();for(var c=0;c<s.length;c++){var l=s[c];if(l.sid&&-1!==l.sid.indexOf(e))switch(i.type){case\"revolute\":Me.multiply(g.makeRotationAxis(o,r.Math.degToRad(t)));break;case\"prismatic\":Me.multiply(g.makeTranslation(o.x*t,o.y*t,o.z*t));break;default:console.warn(\"THREE.ColladaLoader: Unknown joint type: \"+i.type)}else switch(l.type){case\"matrix\":Me.multiply(l.obj);break;case\"translate\":Me.multiply(g.makeTranslation(l.obj.x,l.obj.y,l.obj.z));break;case\"scale\":Me.scale(l.obj);break;case\"rotate\":Me.multiply(g.makeRotationAxis(l.obj,l.angle))}}a.matrix.copy(Me),a.matrix.decompose(a.position,a.quaternion,a.scale),u[e].position=t}}else console.log(\"THREE.ColladaLoader: \"+e+\" does not exist.\")}}}function v(e,t){var n=t.getAttribute(\"name\"),o=i.joints[e];s.traverse(function(i){i.name===n&&(u[e]={object:i,transforms:function(e){for(var t=[],n=Be.querySelector('[id=\"'+e.id+'\"]'),i=0;i<n.childNodes.length;i++){var o=n.childNodes[i];if(1===o.nodeType)switch(o.nodeName){case\"matrix\":var s=a(o.textContent),c=(new r.Matrix4).fromArray(s).transpose();t.push({sid:o.getAttribute(\"sid\"),type:o.nodeName,obj:c});break;case\"translate\":case\"scale\":var s=a(o.textContent),u=(new r.Vector3).fromArray(s);t.push({sid:o.getAttribute(\"sid\"),type:o.nodeName,obj:u});break;case\"rotate\":var s=a(o.textContent),u=(new r.Vector3).fromArray(s),l=r.Math.degToRad(s[3]);t.push({sid:o.getAttribute(\"sid\"),type:o.nodeName,obj:u,angle:l})}}return t}(t),joint:o,position:o.zeroPosition})})}}();var We=function(e){return Ue(s(n(e,\"instance_visual_scene\")[0].getAttribute(\"url\")))}(n(Be,\"scene\")[0]);return\"Z_UP\"===Ge.upAxis&&We.quaternion.setFromEuler(new r.Euler(-Math.PI/2,0,0)),We.scale.multiplyScalar(Ge.unit),{animations:He,kinematics:ke,library:Ve,scene:We}}},r.GLTFLoader=function(){function e(e){this.manager=void 0!==e?e:r.DefaultLoadingManager,this.dracoLoader=null}e.prototype={constructor:e,crossOrigin:\"anonymous\",load:function(e,t,n,i){var a=this,o=void 0!==this.path?this.path:r.LoaderUtils.extractUrlBase(e),s=new r.FileLoader(a.manager);s.setResponseType(\"arraybuffer\"),s.load(e,function(e){try{a.parse(e,o,t,i)}catch(e){if(void 0===i)throw e;i(e)}},n,i)},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this},setDRACOLoader:function(e){return this.dracoLoader=e,this},parse:function(e,h,d,p){var f,m={};if(\"string\"==typeof e)f=e;else if(r.LoaderUtils.decodeText(new Uint8Array(e,0,4))===o){try{m[t.KHR_BINARY_GLTF]=new function(e){this.name=t.KHR_BINARY_GLTF,this.content=null,this.body=null;var n=new DataView(e,0,s);if(this.header={magic:r.LoaderUtils.decodeText(new Uint8Array(e.slice(0,4))),version:n.getUint32(4,!0),length:n.getUint32(8,!0)},this.header.magic!==o)throw new Error(\"THREE.GLTFLoader: Unsupported glTF-Binary header.\");if(this.header.version<2)throw new Error(\"THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.\");var i=new DataView(e,s),a=0;for(;a<i.byteLength;){var u=i.getUint32(a,!0);a+=4;var l=i.getUint32(a,!0);if(a+=4,l===c.JSON){var h=new Uint8Array(e,s+a,u);this.content=r.LoaderUtils.decodeText(h)}else if(l===c.BIN){var d=s+a;this.body=e.slice(d,d+u)}a+=u}if(null===this.content)throw new Error(\"THREE.GLTFLoader: JSON content not found.\")}(e)}catch(e){return void(p&&p(e))}f=m[t.KHR_BINARY_GLTF].content}else f=r.LoaderUtils.decodeText(new Uint8Array(e));var g=JSON.parse(f);if(void 0===g.asset||g.asset.version[0]<2)p&&p(new Error(\"THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.\"));else{if(g.extensionsUsed)for(var v=0;v<g.extensionsUsed.length;++v){var y=g.extensionsUsed[v],x=g.extensionsRequired||[];switch(y){case t.KHR_LIGHTS:m[y]=new i(g);break;case t.KHR_MATERIALS_UNLIT:m[y]=new a(g);break;case t.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:m[y]=new l;break;case t.KHR_DRACO_MESH_COMPRESSION:m[y]=new u(g,this.dracoLoader);break;case t.MSFT_TEXTURE_DDS:m[t.MSFT_TEXTURE_DDS]=new n;break;default:x.indexOf(y)>=0&&console.warn('THREE.GLTFLoader: Unknown extension \"'+y+'\".')}}var b=new G(g,m,{path:h||this.path||\"\",crossOrigin:this.crossOrigin,manager:this.manager});b.parse(function(e,t,n,r,i){var a={scene:e,scenes:t,cameras:n,animations:r,asset:i.asset,parser:b,userData:{}};O(m,a,i),d(a)},p)}}};var t={KHR_BINARY_GLTF:\"KHR_binary_glTF\",KHR_DRACO_MESH_COMPRESSION:\"KHR_draco_mesh_compression\",KHR_LIGHTS:\"KHR_lights\",KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\"KHR_materials_pbrSpecularGlossiness\",KHR_MATERIALS_UNLIT:\"KHR_materials_unlit\",MSFT_TEXTURE_DDS:\"MSFT_texture_dds\"};function n(){if(!r.DDSLoader)throw new Error(\"THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader\");this.name=t.MSFT_TEXTURE_DDS,this.ddsLoader=new r.DDSLoader}function i(e){this.name=t.KHR_LIGHTS,this.lights={};var n=(e.extensions&&e.extensions[t.KHR_LIGHTS]||{}).lights||{};for(var i in n){var a,o=n[i],s=(new r.Color).fromArray(o.color);switch(o.type){case\"directional\":(a=new r.DirectionalLight(s)).target.position.set(0,0,1),a.add(a.target);break;case\"point\":a=new r.PointLight(s);break;case\"spot\":a=new r.SpotLight(s),o.spot=o.spot||{},o.spot.innerConeAngle=void 0!==o.spot.innerConeAngle?o.spot.innerConeAngle:0,o.spot.outerConeAngle=void 0!==o.spot.outerConeAngle?o.spot.outerConeAngle:Math.PI/4,a.angle=o.spot.outerConeAngle,a.penumbra=1-o.spot.innerConeAngle/o.spot.outerConeAngle,a.target.position.set(0,0,1),a.add(a.target);break;case\"ambient\":a=new r.AmbientLight(s)}a&&(a.decay=2,void 0!==o.intensity&&(a.intensity=o.intensity),a.name=o.name||\"light_\"+i,this.lights[i]=a)}}function a(e){this.name=t.KHR_MATERIALS_UNLIT}a.prototype.getMaterialType=function(e){return r.MeshBasicMaterial},a.prototype.extendParams=function(e,t,n){var i=[];e.color=new r.Color(1,1,1),e.opacity=1;var a=t.pbrMetallicRoughness;if(a){if(Array.isArray(a.baseColorFactor)){var o=a.baseColorFactor;e.color.fromArray(o),e.opacity=o[3]}void 0!==a.baseColorTexture&&i.push(n.assignTexture(e,\"map\",a.baseColorTexture.index))}return Promise.all(i)};var o=\"glTF\",s=12,c={JSON:1313821514,BIN:5130562};function u(e,n){if(!n)throw new Error(\"THREE.GLTFLoader: No DRACOLoader instance provided.\");this.name=t.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=n}function l(){return{name:t.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,specularGlossinessParams:[\"color\",\"map\",\"lightMap\",\"lightMapIntensity\",\"aoMap\",\"aoMapIntensity\",\"emissive\",\"emissiveIntensity\",\"emissiveMap\",\"bumpMap\",\"bumpScale\",\"normalMap\",\"displacementMap\",\"displacementScale\",\"displacementBias\",\"specularMap\",\"specular\",\"glossinessMap\",\"glossiness\",\"alphaMap\",\"envMap\",\"envMapIntensity\",\"refractionRatio\"],getMaterialType:function(){return r.ShaderMaterial},extendParams:function(e,t,n){var i=t.extensions[this.name],a=r.ShaderLib.standard,o=r.UniformsUtils.clone(a.uniforms),s=[\"#ifdef USE_SPECULARMAP\",\"\\tuniform sampler2D specularMap;\",\"#endif\"].join(\"\\n\"),c=[\"#ifdef USE_GLOSSINESSMAP\",\"\\tuniform sampler2D glossinessMap;\",\"#endif\"].join(\"\\n\"),u=[\"vec3 specularFactor = specular;\",\"#ifdef USE_SPECULARMAP\",\"\\tvec4 texelSpecular = texture2D( specularMap, vUv );\",\"\\ttexelSpecular = sRGBToLinear( texelSpecular );\",\"\\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture\",\"\\tspecularFactor *= texelSpecular.rgb;\",\"#endif\"].join(\"\\n\"),l=[\"float glossinessFactor = glossiness;\",\"#ifdef USE_GLOSSINESSMAP\",\"\\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );\",\"\\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture\",\"\\tglossinessFactor *= texelGlossiness.a;\",\"#endif\"].join(\"\\n\"),h=[\"PhysicalMaterial material;\",\"material.diffuseColor = diffuseColor.rgb;\",\"material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );\",\"material.specularColor = specularFactor.rgb;\"].join(\"\\n\"),d=a.fragmentShader.replace(\"uniform float roughness;\",\"uniform vec3 specular;\").replace(\"uniform float metalness;\",\"uniform float glossiness;\").replace(\"#include <roughnessmap_pars_fragment>\",s).replace(\"#include <metalnessmap_pars_fragment>\",c).replace(\"#include <roughnessmap_fragment>\",u).replace(\"#include <metalnessmap_fragment>\",l).replace(\"#include <lights_physical_fragment>\",h);delete o.roughness,delete o.metalness,delete o.roughnessMap,delete o.metalnessMap,o.specular={value:(new r.Color).setHex(1118481)},o.glossiness={value:.5},o.specularMap={value:null},o.glossinessMap={value:null},e.vertexShader=a.vertexShader,e.fragmentShader=d,e.uniforms=o,e.defines={STANDARD:\"\"},e.color=new r.Color(1,1,1),e.opacity=1;var p=[];if(Array.isArray(i.diffuseFactor)){var f=i.diffuseFactor;e.color.fromArray(f),e.opacity=f[3]}if(void 0!==i.diffuseTexture&&p.push(n.assignTexture(e,\"map\",i.diffuseTexture.index)),e.emissive=new r.Color(0,0,0),e.glossiness=void 0!==i.glossinessFactor?i.glossinessFactor:1,e.specular=new r.Color(1,1,1),Array.isArray(i.specularFactor)&&e.specular.fromArray(i.specularFactor),void 0!==i.specularGlossinessTexture){var m=i.specularGlossinessTexture.index;p.push(n.assignTexture(e,\"glossinessMap\",m)),p.push(n.assignTexture(e,\"specularMap\",m))}return Promise.all(p)},createMaterial:function(e){var t=new r.ShaderMaterial({defines:e.defines,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader,uniforms:e.uniforms,fog:!0,lights:!0,opacity:e.opacity,transparent:e.transparent});return t.isGLTFSpecularGlossinessMaterial=!0,t.color=e.color,t.map=void 0===e.map?null:e.map,t.lightMap=null,t.lightMapIntensity=1,t.aoMap=void 0===e.aoMap?null:e.aoMap,t.aoMapIntensity=1,t.emissive=e.emissive,t.emissiveIntensity=1,t.emissiveMap=void 0===e.emissiveMap?null:e.emissiveMap,t.bumpMap=void 0===e.bumpMap?null:e.bumpMap,t.bumpScale=1,t.normalMap=void 0===e.normalMap?null:e.normalMap,e.normalScale&&(t.normalScale=e.normalScale),t.displacementMap=null,t.displacementScale=1,t.displacementBias=0,t.specularMap=void 0===e.specularMap?null:e.specularMap,t.specular=e.specular,t.glossinessMap=void 0===e.glossinessMap?null:e.glossinessMap,t.glossiness=e.glossiness,t.alphaMap=null,t.envMap=void 0===e.envMap?null:e.envMap,t.envMapIntensity=1,t.refractionRatio=.98,t.extensions.derivatives=!0,t},cloneMaterial:function(e){var t=e.clone();t.isGLTFSpecularGlossinessMaterial=!0;for(var n=this.specularGlossinessParams,r=0,i=n.length;r<i;r++)t[n[r]]=e[n[r]];return t},refreshUniforms:function(e,t,n,r,i,a){if(!0===i.isGLTFSpecularGlossinessMaterial){var o,s=i.uniforms,c=i.defines;s.opacity.value=i.opacity,s.diffuse.value.copy(i.color),s.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),s.map.value=i.map,s.specularMap.value=i.specularMap,s.alphaMap.value=i.alphaMap,s.lightMap.value=i.lightMap,s.lightMapIntensity.value=i.lightMapIntensity,s.aoMap.value=i.aoMap,s.aoMapIntensity.value=i.aoMapIntensity,i.map?o=i.map:i.specularMap?o=i.specularMap:i.displacementMap?o=i.displacementMap:i.normalMap?o=i.normalMap:i.bumpMap?o=i.bumpMap:i.glossinessMap?o=i.glossinessMap:i.alphaMap?o=i.alphaMap:i.emissiveMap&&(o=i.emissiveMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),s.uvTransform.value.copy(o.matrix)),s.envMap.value=i.envMap,s.envMapIntensity.value=i.envMapIntensity,s.flipEnvMap.value=i.envMap&&i.envMap.isCubeTexture?-1:1,s.refractionRatio.value=i.refractionRatio,s.specular.value.copy(i.specular),s.glossiness.value=i.glossiness,s.glossinessMap.value=i.glossinessMap,s.emissiveMap.value=i.emissiveMap,s.bumpMap.value=i.bumpMap,s.normalMap.value=i.normalMap,s.displacementMap.value=i.displacementMap,s.displacementScale.value=i.displacementScale,s.displacementBias.value=i.displacementBias,null!==s.glossinessMap.value&&void 0===c.USE_GLOSSINESSMAP&&(c.USE_GLOSSINESSMAP=\"\",c.USE_ROUGHNESSMAP=\"\"),null===s.glossinessMap.value&&void 0!==c.USE_GLOSSINESSMAP&&(delete c.USE_GLOSSINESSMAP,delete c.USE_ROUGHNESSMAP)}}}}function h(e,t,n,i){r.Interpolant.call(this,e,t,n,i)}u.prototype.decodePrimitive=function(e,t){var n=this.json,r=this.dracoLoader,i=e.extensions[this.name].bufferView,a=e.extensions[this.name].attributes,o={},s={},c={};for(var u in a)u in T&&(o[T[u]]=a[u]);for(u in e.attributes)if(void 0!==T[u]&&void 0!==a[u]){var l=n.accessors[e.attributes[u]],h=x[l.componentType];c[T[u]]=h,s[T[u]]=!0===l.normalized}return t.getDependency(\"bufferView\",i).then(function(e){return new Promise(function(t){r.decodeDracoFile(e,function(e){for(var n in e.attributes){var r=e.attributes[n],i=s[n];void 0!==i&&(r.normalized=i)}t(e)},o,c)})})},h.prototype=Object.create(r.Interpolant.prototype),h.prototype.constructor=h,h.prototype.interpolate_=function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=2*o,c=3*o,u=r-t,l=(n-t)/u,h=l*l,d=h*l,p=e*c,f=p-c,m=2*d-3*h+1,g=d-2*h+l,v=-2*d+3*h,y=d-h,x=0;x!==o;x++){var b=a[f+x+o],w=a[f+x+s]*u,_=a[p+x+o],M=a[p+x]*u;i[x]=m*b+g*w+v*_+y*M}return i};var d=0,p=1,f=2,m=3,g=4,v=5,y=6,x=(Number,r.Matrix3,r.Matrix4,r.Vector2,r.Vector3,r.Vector4,r.Texture,{5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array}),b={9728:r.NearestFilter,9729:r.LinearFilter,9984:r.NearestMipMapNearestFilter,9985:r.LinearMipMapNearestFilter,9986:r.NearestMipMapLinearFilter,9987:r.LinearMipMapLinearFilter},w={33071:r.ClampToEdgeWrapping,33648:r.MirroredRepeatWrapping,10497:r.RepeatWrapping},_={6406:r.AlphaFormat,6407:r.RGBFormat,6408:r.RGBAFormat,6409:r.LuminanceFormat,6410:r.LuminanceAlphaFormat},M={5121:r.UnsignedByteType,32819:r.UnsignedShort4444Type,32820:r.UnsignedShort5551Type,33635:r.UnsignedShort565Type},E=(r.BackSide,r.FrontSide,r.NeverDepth,r.LessDepth,r.EqualDepth,r.LessEqualDepth,r.GreaterEqualDepth,r.NotEqualDepth,r.GreaterEqualDepth,r.AlwaysDepth,r.AddEquation,r.SubtractEquation,r.ReverseSubtractEquation,r.ZeroFactor,r.OneFactor,r.SrcColorFactor,r.OneMinusSrcColorFactor,r.SrcAlphaFactor,r.OneMinusSrcAlphaFactor,r.DstAlphaFactor,r.OneMinusDstAlphaFactor,r.DstColorFactor,r.OneMinusDstColorFactor,r.SrcAlphaSaturateFactor,{SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16}),T={POSITION:\"position\",NORMAL:\"normal\",TEXCOORD_0:\"uv\",TEXCOORD0:\"uv\",TEXCOORD:\"uv\",TEXCOORD_1:\"uv2\",COLOR_0:\"color\",COLOR0:\"color\",COLOR:\"color\",WEIGHTS_0:\"skinWeight\",WEIGHT:\"skinWeight\",JOINTS_0:\"skinIndex\",JOINT:\"skinIndex\"},S={scale:\"scale\",translation:\"position\",rotation:\"quaternion\",weights:\"morphTargetInfluences\"},A={CUBICSPLINE:r.InterpolateSmooth,LINEAR:r.InterpolateLinear,STEP:r.InterpolateDiscrete},L=\"OPAQUE\",R=\"MASK\",C=\"BLEND\";function P(e,t){return\"string\"!=typeof e||\"\"===e?\"\":/^(https?:)?\\/\\//i.test(e)?e:/^data:.*,.*$/i.test(e)?e:/^blob:.*$/i.test(e)?e:t+e}function O(e,t,n){for(var r in n.extensions)void 0===e[r]&&(t.userData.gltfExtensions=t.userData.gltfExtensions||{},t.userData.gltfExtensions[r]=n.extensions[r])}function N(e,t){if(e.updateMorphTargets(),void 0!==t.weights)for(var n=0,r=t.weights.length;n<r;n++)e.morphTargetInfluences[n]=t.weights[n];if(t.extras&&Array.isArray(t.extras.targetNames)){var i=t.extras.targetNames;if(e.morphTargetInfluences.length===i.length){e.morphTargetDictionary={};for(n=0,r=i.length;n<r;n++)e.morphTargetDictionary[i[n]]=n}else console.warn(\"THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.\")}}function I(e,t){return e.indices===t.indices&&D(e.attributes,t.attributes)}function D(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(var n in e)if(e[n]!==t[n])return!1;return!0}function U(e,t){if(e.length!==t.length)return!1;for(var n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0}function B(e,t){for(var n=0,r=e.length;n<r;n++){var i=e[n];if(I(i.primitive,t))return i.promise}return null}function F(e){if(e.isInterleavedBufferAttribute){for(var t=e.count,n=e.itemSize,i=e.array.slice(0,t*n),a=0;a<t;++a)i[a]=e.getX(a),n>=2&&(i[a+1]=e.getY(a)),n>=3&&(i[a+2]=e.getZ(a)),n>=4&&(i[a+3]=e.getW(a));return new r.BufferAttribute(i,n,e.normalized)}return e.clone()}function G(e,t,n){this.json=e||{},this.extensions=t||{},this.options=n||{},this.cache=new function(){var e={};return{get:function(t){return e[t]},add:function(t,n){e[t]=n},remove:function(t){delete e[t]},removeAll:function(){e={}}}},this.primitiveCache=[],this.multiplePrimitivesCache=[],this.multiPassGeometryCache=[],this.textureLoader=new r.TextureLoader(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.fileLoader=new r.FileLoader(this.options.manager),this.fileLoader.setResponseType(\"arraybuffer\")}function z(e,t,n){var r=t.attributes;for(var i in r){var a=T[i],o=n[r[i]];a&&(a in e.attributes||e.addAttribute(a,o))}void 0===t.indices||e.index||e.setIndex(n[t.indices]),void 0!==t.targets&&function(e,t,n){for(var r=!1,i=!1,a=0,o=t.length;a<o&&(void 0!==(u=t[a]).POSITION&&(r=!0),void 0!==u.NORMAL&&(i=!0),!r||!i);a++);if(r||i){var s=[],c=[];for(a=0,o=t.length;a<o;a++){var u=t[a],l=\"morphTarget\"+a;if(r){if(void 0!==u.POSITION){var h=F(n[u.POSITION]);h.name=l;for(var d=e.attributes.position,p=0,f=h.count;p<f;p++)h.setXYZ(p,h.getX(p)+d.getX(p),h.getY(p)+d.getY(p),h.getZ(p)+d.getZ(p))}else h=e.attributes.position;s.push(h)}if(i){if(void 0!==u.NORMAL){var m;(m=F(n[u.NORMAL])).name=l;var g=e.attributes.normal;for(p=0,f=m.count;p<f;p++)m.setXYZ(p,m.getX(p)+g.getX(p),m.getY(p)+g.getY(p),m.getZ(p)+g.getZ(p))}else m=e.attributes.normal;c.push(m)}}r&&(e.morphAttributes.position=s),i&&(e.morphAttributes.normal=c)}}(e,t.targets,n),void 0!==t.extras&&(e.userData=t.extras)}return G.prototype.parse=function(e,t){var n=this.json;this.cache.removeAll(),this.markDefs(),this.getMultiDependencies([\"scene\",\"animation\",\"camera\"]).then(function(t){var r=t.scenes||[],i=r[n.scene||0],a=t.animations||[],o=t.cameras||[];e(i,r,o,a,n)}).catch(t)},G.prototype.markDefs=function(){for(var e=this.json.nodes||[],t=this.json.skins||[],n=this.json.meshes||[],r={},i={},a=0,o=t.length;a<o;a++)for(var s=t[a].joints,c=0,u=s.length;c<u;c++)e[s[c]].isBone=!0;for(var l=0,h=e.length;l<h;l++){var d=e[l];void 0!==d.mesh&&(void 0===r[d.mesh]&&(r[d.mesh]=i[d.mesh]=0),r[d.mesh]++,void 0!==d.skin&&(n[d.mesh].isSkinnedMesh=!0))}this.json.meshReferences=r,this.json.meshUses=i},G.prototype.getDependency=function(e,t){var n=e+\":\"+t,r=this.cache.get(n);if(!r){switch(e){case\"scene\":r=this.loadScene(t);break;case\"node\":r=this.loadNode(t);break;case\"mesh\":r=this.loadMesh(t);break;case\"accessor\":r=this.loadAccessor(t);break;case\"bufferView\":r=this.loadBufferView(t);break;case\"buffer\":r=this.loadBuffer(t);break;case\"material\":r=this.loadMaterial(t);break;case\"texture\":r=this.loadTexture(t);break;case\"skin\":r=this.loadSkin(t);break;case\"animation\":r=this.loadAnimation(t);break;case\"camera\":r=this.loadCamera(t);break;default:throw new Error(\"Unknown type: \"+e)}this.cache.add(n,r)}return r},G.prototype.getDependencies=function(e){var t=this.cache.get(e);if(!t){var n=this,r=this.json[e+(\"mesh\"===e?\"es\":\"s\")]||[];t=Promise.all(r.map(function(t,r){return n.getDependency(e,r)})),this.cache.add(e,t)}return t},G.prototype.getMultiDependencies=function(e){for(var t={},n=[],r=0,i=e.length;r<i;r++){var a=e[r],o=this.getDependencies(a);o=o.then(function(e,n){t[e]=n}.bind(this,a+(\"mesh\"===a?\"es\":\"s\"))),n.push(o)}return Promise.all(n).then(function(){return t})},G.prototype.loadBuffer=function(e){var n=this.json.buffers[e],r=this.fileLoader;if(n.type&&\"arraybuffer\"!==n.type)throw new Error(\"THREE.GLTFLoader: \"+n.type+\" buffer type is not supported.\");if(void 0===n.uri&&0===e)return Promise.resolve(this.extensions[t.KHR_BINARY_GLTF].body);var i=this.options;return new Promise(function(e,t){r.load(P(n.uri,i.path),e,void 0,function(){t(new Error('THREE.GLTFLoader: Failed to load buffer \"'+n.uri+'\".'))})})},G.prototype.loadBufferView=function(e){var t=this.json.bufferViews[e];return this.getDependency(\"buffer\",t.buffer).then(function(e){var n=t.byteLength||0,r=t.byteOffset||0;return e.slice(r,r+n)})},G.prototype.loadAccessor=function(e){var t=this,n=this.json,i=this.json.accessors[e];if(void 0===i.bufferView&&void 0===i.sparse)return null;var a=[];return void 0!==i.bufferView?a.push(this.getDependency(\"bufferView\",i.bufferView)):a.push(null),void 0!==i.sparse&&(a.push(this.getDependency(\"bufferView\",i.sparse.indices.bufferView)),a.push(this.getDependency(\"bufferView\",i.sparse.values.bufferView))),Promise.all(a).then(function(e){var a,o,s=e[0],c=E[i.type],u=x[i.componentType],l=u.BYTES_PER_ELEMENT,h=l*c,d=i.byteOffset||0,p=n.bufferViews[i.bufferView].byteStride,f=!0===i.normalized;if(p&&p!==h){var m=\"InterleavedBuffer:\"+i.bufferView+\":\"+i.componentType,g=t.cache.get(m);g||(a=new u(s),g=new r.InterleavedBuffer(a,p/l),t.cache.add(m,g)),o=new r.InterleavedBufferAttribute(g,c,d/l,f)}else a=null===s?new u(i.count*c):new u(s,d,i.count*c),o=new r.BufferAttribute(a,c,f);if(void 0!==i.sparse){var v=E.SCALAR,y=x[i.sparse.indices.componentType],b=i.sparse.indices.byteOffset||0,w=i.sparse.values.byteOffset||0,_=new y(e[1],b,i.sparse.count*v),M=new u(e[2],w,i.sparse.count*c);null!==s&&o.setArray(o.array.slice());for(var T=0,S=_.length;T<S;T++){var A=_[T];if(o.setX(A,M[T*c]),c>=2&&o.setY(A,M[T*c+1]),c>=3&&o.setZ(A,M[T*c+2]),c>=4&&o.setW(A,M[T*c+3]),c>=5)throw new Error(\"THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.\")}}return o})},G.prototype.loadTexture=function(e){var n,i=this,a=this.json,o=this.options,s=this.textureLoader,c=window.URL||window.webkitURL,u=a.textures[e],l=u.extensions||{},h=(n=l[t.MSFT_TEXTURE_DDS]?a.images[l[t.MSFT_TEXTURE_DDS].source]:a.images[u.source]).uri,d=!1;return void 0!==n.bufferView&&(h=i.getDependency(\"bufferView\",n.bufferView).then(function(e){d=!0;var t=new Blob([e],{type:n.mimeType});return h=c.createObjectURL(t)})),Promise.resolve(h).then(function(e){var n=r.Loader.Handlers.get(e);return n||(n=l[t.MSFT_TEXTURE_DDS]?i.extensions[t.MSFT_TEXTURE_DDS].ddsLoader:s),new Promise(function(t,r){n.load(P(e,o.path),t,void 0,r)})}).then(function(e){!0===d&&c.revokeObjectURL(h),e.flipY=!1,void 0!==u.name&&(e.name=u.name),l[t.MSFT_TEXTURE_DDS]||(e.format=void 0!==u.format?_[u.format]:r.RGBAFormat),void 0!==u.internalFormat&&e.format!==_[u.internalFormat]&&console.warn(\"THREE.GLTFLoader: Three.js does not support texture internalFormat which is different from texture format. internalFormat will be forced to be the same value as format.\"),e.type=void 0!==u.type?M[u.type]:r.UnsignedByteType;var n=(a.samplers||{})[u.sampler]||{};return e.magFilter=b[n.magFilter]||r.LinearFilter,e.minFilter=b[n.minFilter]||r.LinearMipMapLinearFilter,e.wrapS=w[n.wrapS]||r.RepeatWrapping,e.wrapT=w[n.wrapT]||r.RepeatWrapping,e})},G.prototype.assignTexture=function(e,t,n){return this.getDependency(\"texture\",n).then(function(n){e[t]=n})},G.prototype.loadMaterial=function(e){this.json;var n,i=this.extensions,a=this.json.materials[e],o={},s=a.extensions||{},c=[];if(s[t.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]){var u=i[t.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];n=u.getMaterialType(a),c.push(u.extendParams(o,a,this))}else if(s[t.KHR_MATERIALS_UNLIT]){var l=i[t.KHR_MATERIALS_UNLIT];n=l.getMaterialType(a),c.push(l.extendParams(o,a,this))}else{n=r.MeshStandardMaterial;var h=a.pbrMetallicRoughness||{};if(o.color=new r.Color(1,1,1),o.opacity=1,Array.isArray(h.baseColorFactor)){var d=h.baseColorFactor;o.color.fromArray(d),o.opacity=d[3]}if(void 0!==h.baseColorTexture&&c.push(this.assignTexture(o,\"map\",h.baseColorTexture.index)),o.metalness=void 0!==h.metallicFactor?h.metallicFactor:1,o.roughness=void 0!==h.roughnessFactor?h.roughnessFactor:1,void 0!==h.metallicRoughnessTexture){var p=h.metallicRoughnessTexture.index;c.push(this.assignTexture(o,\"metalnessMap\",p)),c.push(this.assignTexture(o,\"roughnessMap\",p))}}!0===a.doubleSided&&(o.side=r.DoubleSide);var f=a.alphaMode||L;return f===C?o.transparent=!0:(o.transparent=!1,f===R&&(o.alphaTest=void 0!==a.alphaCutoff?a.alphaCutoff:.5)),void 0!==a.normalTexture&&n!==r.MeshBasicMaterial&&(c.push(this.assignTexture(o,\"normalMap\",a.normalTexture.index)),o.normalScale=new r.Vector2(1,1),void 0!==a.normalTexture.scale&&o.normalScale.set(a.normalTexture.scale,a.normalTexture.scale)),void 0!==a.occlusionTexture&&n!==r.MeshBasicMaterial&&(c.push(this.assignTexture(o,\"aoMap\",a.occlusionTexture.index)),void 0!==a.occlusionTexture.strength&&(o.aoMapIntensity=a.occlusionTexture.strength)),void 0!==a.emissiveFactor&&n!==r.MeshBasicMaterial&&(o.emissive=(new r.Color).fromArray(a.emissiveFactor)),void 0!==a.emissiveTexture&&n!==r.MeshBasicMaterial&&c.push(this.assignTexture(o,\"emissiveMap\",a.emissiveTexture.index)),Promise.all(c).then(function(){var e;return e=n===r.ShaderMaterial?i[t.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(o):new n(o),void 0!==a.name&&(e.name=a.name),e.normalScale&&(e.normalScale.y=-e.normalScale.y),e.map&&(e.map.encoding=r.sRGBEncoding),e.emissiveMap&&(e.emissiveMap.encoding=r.sRGBEncoding),e.specularMap&&(e.specularMap.encoding=r.sRGBEncoding),a.extras&&(e.userData=a.extras),a.extensions&&O(i,e,a),e})},G.prototype.loadGeometries=function(e){var n,i=this,a=this.extensions,o=this.primitiveCache,s=function(e){if(e.length<2)return!1;var t=e[0],n=t.targets||[];if(void 0===t.indices)return!1;for(var r=1,i=e.length;r<i;r++){var a=e[r];if(t.mode!==a.mode)return!1;if(void 0===a.indices)return!1;if(!D(t.attributes,a.attributes))return!1;var o=a.targets||[];if(n.length!==o.length)return!1;for(var s=0,c=n.length;s<c;s++)if(!D(n[s],o[s]))return!1}return!0}(e);return s&&(n=e,e=[e[0]]),this.getDependencies(\"accessor\").then(function(c){for(var u=[],l=0,h=e.length;l<h;l++){var d=e[l],p=B(o,d);if(p)u.push(p);else if(d.extensions&&d.extensions[t.KHR_DRACO_MESH_COMPRESSION]){var f=a[t.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(d,i).then(function(e){return z(e,d,c),e});o.push({primitive:d,promise:f}),u.push(f)}else{var m=new r.BufferGeometry;z(m,d,c);f=Promise.resolve(m);o.push({primitive:d,promise:f}),u.push(f)}}return Promise.all(u).then(function(t){if(s){var a=t[0];if(null!==(y=function(e,t,n){for(var r=0,i=e.length;r<i;r++){var a=e[r];if(t===a.baseGeometry&&U(n,a.primitives))return a.geometry}return null}(v=i.multiPassGeometryCache,a,n)))return[y.geometry];var o=new r.BufferGeometry;for(var u in o.name=a.name,o.userData=a.userData,a.attributes)o.addAttribute(u,a.attributes[u]);for(var u in a.morphAttributes)o.morphAttributes[u]=a.morphAttributes[u];for(var l=[],h=0,d=0,p=n.length;d<p;d++){for(var f=c[n[d].indices],m=0,g=f.count;m<g;m++)l.push(f.array[m]);o.addGroup(h,f.count,d),h+=f.count}return o.setIndex(l),v.push({geometry:o,baseGeometry:a,primitives:n}),[o]}if(t.length>1&&void 0!==r.BufferGeometryUtils){for(d=1,p=e.length;d<p;d++)if(e[0].mode!==e[d].mode)return t;var v,y;if(y=function(e,t){for(var n=0,r=e.length;n<r;n++){var i=e[n];if(U(t,i.baseGeometries))return i.geometry}return null}(v=i.multiplePrimitivesCache,t)){if(null!==y.geometry)return[y.geometry]}else{o=r.BufferGeometryUtils.mergeBufferGeometries(t,!0);if(v.push({geometry:o,baseGeometries:t}),null!==o)return[o]}}return t})})},G.prototype.loadMesh=function(e){var n=this,i=(this.json,this.extensions),a=this.json.meshes[e];return this.getMultiDependencies([\"accessor\",\"material\"]).then(function(o){for(var s=a.primitives,c=[],u=0,l=s.length;u<l;u++)c[u]=void 0===s[u].material?new r.MeshStandardMaterial({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:r.FrontSide}):o.materials[s[u].material];return n.loadGeometries(s).then(function(o){for(var u=1===o.length&&o[0].groups.length>0,l=[],h=0,x=o.length;h<x;h++){var b,w=o[h],_=s[h],M=u?c:c[h];if(_.mode===g||_.mode===v||_.mode===y||void 0===_.mode)b=!0===a.isSkinnedMesh?new r.SkinnedMesh(w,M):new r.Mesh(w,M),_.mode===v?b.drawMode=r.TriangleStripDrawMode:_.mode===y&&(b.drawMode=r.TriangleFanDrawMode);else if(_.mode===p)b=new r.LineSegments(w,M);else if(_.mode===m)b=new r.Line(w,M);else if(_.mode===f)b=new r.LineLoop(w,M);else{if(_.mode!==d)throw new Error(\"THREE.GLTFLoader: Primitive mode unsupported: \"+_.mode);b=new r.Points(w,M)}Object.keys(b.geometry.morphAttributes).length>0&&N(b,a),b.name=a.name||\"mesh_\"+e,o.length>1&&(b.name+=\"_\"+h),void 0!==a.extras&&(b.userData=a.extras),l.push(b);for(var E=u?b.material:[b.material],T=void 0!==w.attributes.color,S=void 0===w.attributes.normal,A=!0===b.isSkinnedMesh,L=Object.keys(w.morphAttributes).length>0,R=L&&void 0!==w.morphAttributes.normal,C=0,P=E.length;C<P;C++){M=E[C];if(b.isPoints){var O=\"PointsMaterial:\"+M.uuid,I=n.cache.get(O);I||(I=new r.PointsMaterial,r.Material.prototype.copy.call(I,M),I.color.copy(M.color),I.map=M.map,I.lights=!1,n.cache.add(O,I)),M=I}else if(b.isLine){O=\"LineBasicMaterial:\"+M.uuid;var D=n.cache.get(O);D||(D=new r.LineBasicMaterial,r.Material.prototype.copy.call(D,M),D.color.copy(M.color),D.lights=!1,n.cache.add(O,D)),M=D}if(T||S||A||L){O=\"ClonedMaterial:\"+M.uuid+\":\";M.isGLTFSpecularGlossinessMaterial&&(O+=\"specular-glossiness:\"),A&&(O+=\"skinning:\"),T&&(O+=\"vertex-colors:\"),S&&(O+=\"flat-shading:\"),L&&(O+=\"morph-targets:\"),R&&(O+=\"morph-normals:\");var U=n.cache.get(O);U||(U=M.isGLTFSpecularGlossinessMaterial?i[t.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].cloneMaterial(M):M.clone(),A&&(U.skinning=!0),T&&(U.vertexColors=r.VertexColors),S&&(U.flatShading=!0),L&&(U.morphTargets=!0),R&&(U.morphNormals=!0),n.cache.add(O,U)),M=U}E[C]=M,M.aoMap&&void 0===w.attributes.uv2&&void 0!==w.attributes.uv&&(console.log(\"THREE.GLTFLoader: Duplicating UVs to support aoMap.\"),w.addAttribute(\"uv2\",new r.BufferAttribute(w.attributes.uv.array,2))),M.isGLTFSpecularGlossinessMaterial&&(b.onBeforeRender=i[t.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms)}b.material=u?E:E[0]}if(1===l.length)return l[0];var B=new r.Group;for(h=0,x=l.length;h<x;h++)B.add(l[h]);return B})})},G.prototype.loadCamera=function(e){var t,n=this.json.cameras[e],i=n[n.type];if(i)return\"perspective\"===n.type?t=new r.PerspectiveCamera(r.Math.radToDeg(i.yfov),i.aspectRatio||1,i.znear||1,i.zfar||2e6):\"orthographic\"===n.type&&(t=new r.OrthographicCamera(i.xmag/-2,i.xmag/2,i.ymag/2,i.ymag/-2,i.znear,i.zfar)),void 0!==n.name&&(t.name=n.name),n.extras&&(t.userData=n.extras),Promise.resolve(t);console.warn(\"THREE.GLTFLoader: Missing camera parameters.\")},G.prototype.loadSkin=function(e){var t=this.json.skins[e],n={joints:t.joints};return void 0===t.inverseBindMatrices?Promise.resolve(n):this.getDependency(\"accessor\",t.inverseBindMatrices).then(function(e){return n.inverseBindMatrices=e,n})},G.prototype.loadAnimation=function(e){this.json;var t=this.json.animations[e];return this.getMultiDependencies([\"accessor\",\"node\"]).then(function(n){for(var i=[],a=0,o=t.channels.length;a<o;a++){var s=t.channels[a],c=t.samplers[s.sampler];if(c){var u=s.target,l=void 0!==u.node?u.node:u.id,d=void 0!==t.parameters?t.parameters[c.input]:c.input,p=void 0!==t.parameters?t.parameters[c.output]:c.output,f=n.accessors[d],m=n.accessors[p],g=n.nodes[l];if(g){var v;switch(g.updateMatrix(),g.matrixAutoUpdate=!0,S[u.path]){case S.weights:v=r.NumberKeyframeTrack;break;case S.rotation:v=r.QuaternionKeyframeTrack;break;case S.position:case S.scale:default:v=r.VectorKeyframeTrack}var y=g.name?g.name:g.uuid,x=void 0!==c.interpolation?A[c.interpolation]:r.InterpolateLinear,b=[];S[u.path]===S.weights?g.traverse(function(e){!0===e.isMesh&&e.morphTargetInfluences&&b.push(e.name?e.name:e.uuid)}):b.push(y);for(var w=0,_=b.length;w<_;w++){var M=new v(b[w]+\".\"+S[u.path],r.AnimationUtils.arraySlice(f.array,0),r.AnimationUtils.arraySlice(m.array,0),x);\"CUBICSPLINE\"===c.interpolation&&(M.createInterpolant=function(e){return new h(this.times,this.values,this.getValueSize()/3,e)},M.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0),i.push(M)}}}}l=void 0!==t.name?t.name:\"animation_\"+e;return new r.AnimationClip(l,void 0,i)})},G.prototype.loadNode=function(e){this.json;var n=this.extensions,i=this.json.meshReferences,a=this.json.meshUses,o=this.json.nodes[e];return this.getMultiDependencies([\"mesh\",\"skin\",\"camera\",\"light\"]).then(function(e){var s;if(!0===o.isBone)s=new r.Bone;else if(void 0!==o.mesh){var c=e.meshes[o.mesh];if(s=c.clone(),!0===c.isGroup)for(var u=0,l=c.children.length;u<l;u++){var h=c.children[u];h.material&&!0===h.material.isGLTFSpecularGlossinessMaterial&&(s.children[u].onBeforeRender=h.onBeforeRender)}else c.material&&!0===c.material.isGLTFSpecularGlossinessMaterial&&(s.onBeforeRender=c.onBeforeRender);i[o.mesh]>1&&(s.name+=\"_instance_\"+a[o.mesh]++)}else if(void 0!==o.camera)s=e.cameras[o.camera];else if(o.extensions&&o.extensions[t.KHR_LIGHTS]&&void 0!==o.extensions[t.KHR_LIGHTS].light){s=n[t.KHR_LIGHTS].lights[o.extensions[t.KHR_LIGHTS].light]}else s=new r.Object3D;if(void 0!==o.name&&(s.name=r.PropertyBinding.sanitizeNodeName(o.name)),o.extras&&(s.userData=o.extras),o.extensions&&O(n,s,o),void 0!==o.matrix){var d=new r.Matrix4;d.fromArray(o.matrix),s.applyMatrix(d)}else void 0!==o.translation&&s.position.fromArray(o.translation),void 0!==o.rotation&&s.quaternion.fromArray(o.rotation),void 0!==o.scale&&s.scale.fromArray(o.scale);return s})},G.prototype.loadScene=function(){function e(t,n,i,a,o){var s=a[t],c=i.nodes[t];if(void 0!==c.skin)for(var u=!0===s.isGroup?s.children:[s],l=0,h=u.length;l<h;l++){for(var d=u[l],p=o[c.skin],f=[],m=[],g=0,v=p.joints.length;g<v;g++){var y=p.joints[g],x=a[y];if(x){f.push(x);var b=new r.Matrix4;void 0!==p.inverseBindMatrices&&b.fromArray(p.inverseBindMatrices.array,16*g),m.push(b)}else console.warn('THREE.GLTFLoader: Joint \"%s\" could not be found.',y)}d.bind(new r.Skeleton(f,m),d.matrixWorld)}if(n.add(s),c.children){var w=c.children;for(l=0,h=w.length;l<h;l++){e(w[l],s,i,a,o)}}}return function(n){var i=this.json,a=this.extensions,o=this.json.scenes[n];return this.getMultiDependencies([\"node\",\"skin\"]).then(function(n){var s=new r.Scene;void 0!==o.name&&(s.name=o.name),o.extras&&(s.userData=o.extras),o.extensions&&O(a,s,o);for(var c=o.nodes||[],u=0,l=c.length;u<l;u++)e(c[u],s,i,n.nodes,n.skins);if(o.extensions&&o.extensions[t.KHR_LIGHTS]&&void 0!==o.extensions[t.KHR_LIGHTS].light){var h=a[t.KHR_LIGHTS].lights;s.add(h[o.extensions[t.KHR_LIGHTS].light])}return s})}}(),e}();var i=r.MTLLoader,a=r.OBJLoader,o=r.OrbitControls,s=r.ColladaLoader,c=r.GLTFLoader;t.OrbitControls=o,t.MTLLoader=i,t.OBJLoader=a,t.ColladaLoader=s,t.GLTFLoader=c},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(e,n){var r={animate:!0,name:\"\"};var i=[Object.assign(Object.create(r),{fuc:e,name:n})];!function e(){requestAnimationFrame(e),i.forEach(function(e){var t=e.fuc,n=e.animate;n&&t.call(e,Date.now())})}();t.default=function(e,t){var n=Object.assign(Object.create(r),{fuc:e,name:t});return i.push(n),n};return i[0]}},function(e,t,n){\"use strict\";var r,i,a,o,s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=n(5),u=function(e){return e&&e.__esModule?e:{default:e}}(c),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(0));function h(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function d(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function p(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var f=(i=r=function(e){function t(){return h(this,t),d(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return p(t,c.Component),s(t,[{key:\"render\",value:function(){return u.default.createElement(u.default.Fragment,null,\" \")}}]),t}(),r.defaultProps={color:\"rgb(30,30,30)\",__constructor:\"ambientlight\"},i),m=(o=a=function(e){function t(){return h(this,t),d(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return p(t,c.Component),s(t,[{key:\"render\",value:function(){return u.default.createElement(u.default.Fragment,null,\" \")}}]),t}(),a.defaultProps={color:16777215,__constructor:\"directionligth\",position:new l.Vector3(-30,30,30),castShadow:!0},o);e.exports={AmbientLight:f,DirectionLight:m}},function(e,t,n){\"use strict\";e.exports=n(12)},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r,i,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(0)),s=(n(2),function(e){return e&&e.__esModule?e:{default:e}}(n(1)));var c=(i=r=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.default),a(t,[{key:\"load3dModel\",value:function(){var e=this,t=this.props,n=t.src;t.texPath;if(!n)return!1;(new o.GLTFLoader).load(n,function(t){e.obj3d=t.scene;var n={};if(t.scene.traverse(function(e){e instanceof o.Camera&&(n.cameras||(n.cameras=[]),n.cameras.push(e)),e instanceof o.Light&&(n.lights||(n.lights=[]),n.lights.push(e))}),n.cameras&&n.cameras.length)e.camera=n.cameras[0],e.camera.position.copy(e.camera.position.clone().add(new o.Vector3(0,0,.01)));else{var r=e.computeBoundingBox(t.scene),i=r.max,a=r.max.z-r.min.z;e.camera.position.set(i.x,i.y,i.z+.6*a)}n.lights&&n.lights.length,e.initControl(),e.props.onLoad&&e.props.onLoad()},function(t){e.props.onProgress&&e.props.onProgress(t)},function(){console.log(\"An error happened\")})}}]),t}(),r.defaultProps=Object.assign({},s.default.defaultProps,{loader:\"gltf\"}),i);t.default=c},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r,i,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(0)),s=(n(2),function(e){return e&&e.__esModule?e:{default:e}}(n(1)));var c=(i=r=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.default),a(t,[{key:\"load3dModel\",value:function(){var e=this,t=this.props,n=t.src;t.texPath;if(!n)return!1;(new o.ColladaLoader).load(n,function(t){e.obj3d=t.scene;var n={};if(t.scene.traverse(function(e){e instanceof o.Camera&&(n.cameras||(n.cameras=[]),n.cameras.push(e)),e instanceof o.Light&&(n.lights||(n.lights=[]),n.lights.push(e))}),n.cameras&&n.cameras.length)e.camera=n.cameras[0],e.camera.position.copy(e.camera.position.clone().add(new o.Vector3(0,0,.01)));else{var r=e.computeBoundingBox(t.scene),i=r.max;r.max.z,r.min.z;e.camera.position.set(i.x,i.y,i.z)}n.lights&&n.lights.length,e.initControl(),e.props.onLoad&&e.props.onLoad()},function(t){e.props.onProgress&&e.props.onProgress(t)},function(){console.log(\"An error happened\")})}}]),t}(),r.defaultProps=Object.assign({},s.default.defaultProps,{loader:\"collada\"}),i);t.default=c},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r,i,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(0)),s=(n(2),function(e){return e&&e.__esModule?e:{default:e}}(n(1)));var c=(i=r=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.default),a(t,[{key:\"load3dModel\",value:function(){var e=this,t=this.props,n=t.src,r=t.mtl,i=t.texPath;if(!n||!r)return!1;var a=new o.MTLLoader,s=new o.OBJLoader;a.setTexturePath(i),a.load(r,function(t){t.preload(),s.setMaterials(t).load(n,function(t){var n=e.computeBoundingBox(t),r=n.max,i=n.max.z-n.min.z;e.camera.position.set(0,0,r.z+1.5*i),e.initControl(),e.obj3d=t,e.props.onLoad&&e.props.onLoad()},function(t){e.props.onProgress&&e.props.onProgress(t)})})}}]),t}(),r.defaultProps=Object.assign({},s.default.defaultProps,{loader:\"objmtl\"}),i);t.default=c},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r,i,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(0)),s=(n(2),function(e){return e&&e.__esModule?e:{default:e}}(n(1)));var c=(i=r=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.default),a(t,[{key:\"load3dModel\",value:function(){var e=this,t=this.props,n=t.src;t.texPath;if(!n)return!1;(new o.OBJLoader).load(n,function(t){var n=e.computeBoundingBox(t),r=n.max,i=n.max.z-n.min.z;e.camera.position.set(0,0,r.z+1.5*i),e.initControl(),e.obj3d=t,e.props.onLoad&&e.props.onLoad()},function(t){e.props.onProgress&&e.props.onProgress(t)})}}]),t}(),r.defaultProps=Object.assign({},s.default.defaultProps,{loader:\"obj\"}),i);t.default=c},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r,i,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(0)),s=(n(2),function(e){return e&&e.__esModule?e:{default:e}}(n(1)));var c=(i=r=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.default),a(t,[{key:\"load3dModel\",value:function(){var e=this,t=this.props,n=t.src,r=t.onProgress,i=t.onLoad,a=t.texPath,s=new o.JSONLoader;s.setTexturePath(a),s.load(n,function(t,n){var r=new o.Mesh(t,n);t.computeBoundingBox();var a=t.boundingSphere,s=a.center,c=a.radius,u=s.clone().multiplyScalar(-1);r.geometry.applyMatrix((new o.Matrix4).makeTranslation(u.x,u.y,u.z));var l=e.computeBoundingBox(r).max;e.camera.position.set(l.x,l.y,l.z),e.camera.position.copy(u.clone().add(new o.Vector3(0,0,1.666*c))),e.initControl(),e.obj3d=r,i&&i()},function(e){r&&r(e)})}}]),t}(),r.defaultProps=Object.assign({},s.default.defaultProps,{loader:\"json\"}),i);t.default=c},function(e,t,n){\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/var r=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String(\"abc\");if(e[5]=\"de\",\"5\"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t[\"_\"+String.fromCharCode(n)]=n;if(\"0123456789\"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(\"\"))return!1;var r={};return\"abcdefghijklmnopqrst\".split(\"\").forEach(function(e){r[e]=e}),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},r)).join(\"\")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,o,s=function(e){if(null===e||void 0===e)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(e)}(e),c=1;c<arguments.length;c++){for(var u in n=Object(arguments[c]))i.call(n,u)&&(s[u]=n[u]);if(r){o=r(n);for(var l=0;l<o.length;l++)a.call(n,o[l])&&(s[o[l]]=n[o[l]])}}return s}},function(e,t,n){\"use strict\";\n/** @license React v16.7.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */var r=n(11),i=\"function\"==typeof Symbol&&Symbol.for,a=i?Symbol.for(\"react.element\"):60103,o=i?Symbol.for(\"react.portal\"):60106,s=i?Symbol.for(\"react.fragment\"):60107,c=i?Symbol.for(\"react.strict_mode\"):60108,u=i?Symbol.for(\"react.profiler\"):60114,l=i?Symbol.for(\"react.provider\"):60109,h=i?Symbol.for(\"react.context\"):60110,d=i?Symbol.for(\"react.concurrent_mode\"):60111,p=i?Symbol.for(\"react.forward_ref\"):60112,f=i?Symbol.for(\"react.suspense\"):60113,m=i?Symbol.for(\"react.memo\"):60115,g=i?Symbol.for(\"react.lazy\"):60116,v=\"function\"==typeof Symbol&&Symbol.iterator;function y(e){for(var t=arguments.length-1,n=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+e,r=0;r<t;r++)n+=\"&args[]=\"+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,i,a,o,s){if(!e){if(e=void 0,void 0===t)e=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var c=[n,r,i,a,o,s],u=0;(e=Error(t.replace(/%s/g,function(){return c[u++]}))).name=\"Invariant Violation\"}throw e.framesToPop=1,e}}(!1,\"Minified React error #\"+e+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",n)}var x={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||x}function _(){}function M(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||x}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){\"object\"!=typeof e&&\"function\"!=typeof e&&null!=e&&y(\"85\"),this.updater.enqueueSetState(this,e,t,\"setState\")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,\"forceUpdate\")},_.prototype=w.prototype;var E=M.prototype=new _;E.constructor=M,r(E,w.prototype),E.isPureReactComponent=!0;var T={current:null,currentDispatcher:null},S=Object.prototype.hasOwnProperty,A={key:!0,ref:!0,__self:!0,__source:!0};function L(e,t,n){var r=void 0,i={},o=null,s=null;if(null!=t)for(r in void 0!==t.ref&&(s=t.ref),void 0!==t.key&&(o=\"\"+t.key),t)S.call(t,r)&&!A.hasOwnProperty(r)&&(i[r]=t[r]);var c=arguments.length-2;if(1===c)i.children=n;else if(1<c){for(var u=Array(c),l=0;l<c;l++)u[l]=arguments[l+2];i.children=u}if(e&&e.defaultProps)for(r in c=e.defaultProps)void 0===i[r]&&(i[r]=c[r]);return{$$typeof:a,type:e,key:o,ref:s,props:i,_owner:T.current}}function R(e){return\"object\"==typeof e&&null!==e&&e.$$typeof===a}var C=/\\/+/g,P=[];function O(e,t,n,r){if(P.length){var i=P.pop();return i.result=e,i.keyPrefix=t,i.func=n,i.context=r,i.count=0,i}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function N(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>P.length&&P.push(e)}function I(e,t,n){return null==e?0:function e(t,n,r,i){var s=typeof t;\"undefined\"!==s&&\"boolean\"!==s||(t=null);var c=!1;if(null===t)c=!0;else switch(s){case\"string\":case\"number\":c=!0;break;case\"object\":switch(t.$$typeof){case a:case o:c=!0}}if(c)return r(i,t,\"\"===n?\".\"+D(t,0):n),1;if(c=0,n=\"\"===n?\".\":n+\":\",Array.isArray(t))for(var u=0;u<t.length;u++){var l=n+D(s=t[u],u);c+=e(s,l,r,i)}else if(l=null===t||\"object\"!=typeof t?null:\"function\"==typeof(l=v&&t[v]||t[\"@@iterator\"])?l:null,\"function\"==typeof l)for(t=l.call(t),u=0;!(s=t.next()).done;)c+=e(s=s.value,l=n+D(s,u++),r,i);else\"object\"===s&&y(\"31\",\"[object Object]\"==(r=\"\"+t)?\"object with keys {\"+Object.keys(t).join(\", \")+\"}\":r,\"\");return c}(e,\"\",t,n)}function D(e,t){return\"object\"==typeof e&&null!==e&&null!=e.key?function(e){var t={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function U(e,t){e.func.call(e.context,t,e.count++)}function B(e,t,n){var r=e.result,i=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,function(e){return e}):null!=e&&(R(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,i+(!e.key||t&&t.key===e.key?\"\":(\"\"+e.key).replace(C,\"$&/\")+\"/\")+n)),r.push(e))}function F(e,t,n,r,i){var a=\"\";null!=n&&(a=(\"\"+n).replace(C,\"$&/\")+\"/\"),I(e,B,t=O(t,a,r,i)),N(t)}var G={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;I(e,U,t=O(null,null,t,n)),N(t)},count:function(e){return I(e,function(){return null},null)},toArray:function(e){var t=[];return F(e,t,null,function(e){return e}),t},only:function(e){return R(e)||y(\"143\"),e}},createRef:function(){return{current:null}},Component:w,PureComponent:M,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:h,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:p,render:e}},lazy:function(e){return{$$typeof:g,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},Fragment:s,StrictMode:c,Suspense:f,createElement:L,cloneElement:function(e,t,n){(null===e||void 0===e)&&y(\"267\",e);var i=void 0,o=r({},e.props),s=e.key,c=e.ref,u=e._owner;if(null!=t){void 0!==t.ref&&(c=t.ref,u=T.current),void 0!==t.key&&(s=\"\"+t.key);var l=void 0;for(i in e.type&&e.type.defaultProps&&(l=e.type.defaultProps),t)S.call(t,i)&&!A.hasOwnProperty(i)&&(o[i]=void 0===t[i]&&void 0!==l?l[i]:t[i])}if(1===(i=arguments.length-2))o.children=n;else if(1<i){l=Array(i);for(var h=0;h<i;h++)l[h]=arguments[h+2];o.children=l}return{$$typeof:a,type:e.type,key:s,ref:c,props:o,_owner:u}},createFactory:function(e){var t=L.bind(null,e);return t.type=e,t},isValidElement:R,version:\"16.7.0\",unstable_ConcurrentMode:d,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:T,assign:r}},z={default:G},H=z&&G||z;e.exports=H.default||H},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=n(1);Object.defineProperty(t,\"Model\",{enumerable:!0,get:function(){return h(r).default}});var i=n(10);Object.defineProperty(t,\"JSONModel\",{enumerable:!0,get:function(){return h(i).default}});var a=n(9);Object.defineProperty(t,\"OBJModel\",{enumerable:!0,get:function(){return h(a).default}});var o=n(8);Object.defineProperty(t,\"MTLModel\",{enumerable:!0,get:function(){return h(o).default}});var s=n(7);Object.defineProperty(t,\"DAEModel\",{enumerable:!0,get:function(){return h(s).default}});var c=n(6);Object.defineProperty(t,\"GLTFModel\",{enumerable:!0,get:function(){return h(c).default}});var u=n(3);Object.defineProperty(t,\"Tick\",{enumerable:!0,get:function(){return h(u).default}});var l=n(4);function h(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"DirectionLight\",{enumerable:!0,get:function(){return l.DirectionLight}}),Object.defineProperty(t,\"AmbientLight\",{enumerable:!0,get:function(){return l.AmbientLight}})}])});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-3d-viewer/dist/scripts/react-3d-viewer.js\n");

/***/ })

}]);